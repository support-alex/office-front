{"remainingRequest":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/view/pages/vue-bootstrap/FormInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/view/pages/vue-bootstrap/FormInput.vue","mtime":1601367364000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgS1RDb2RlUHJldmlldyBmcm9tICJAL3ZpZXcvY29udGVudC9Db2RlUHJldmlldy52dWUiOw0KaW1wb3J0IHsgU0VUX0JSRUFEQ1JVTUIgfSBmcm9tICJAL2NvcmUvc2VydmljZXMvc3RvcmUvYnJlYWRjcnVtYnMubW9kdWxlIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBodG1sMTogYDxkaXY+DQogICAgPGItZm9ybS1pbnB1dCB2LW1vZGVsPSJ0ZXh0IiBwbGFjZWhvbGRlcj0iRW50ZXIgeW91ciBuYW1lIj48L2ItZm9ybS1pbnB1dD4NCiAgICA8ZGl2IGNsYXNzPSJtdC0yIj5WYWx1ZToge3sgdGV4dCB9fTwvZGl2Pg0KICA8L2Rpdj5gLA0KICAgICAganMxOiBgZXhwb3J0IGRlZmF1bHQgew0KICAgIGRhdGEoKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICB0ZXh0OiAnJw0KICAgICAgfQ0KICAgIH0NCiAgfWAsDQogICAgICB0ZXh0OiAiIiwNCg0KICAgICAgaHRtbDI6DQogICAgICAgICI8Yi1jb250YWluZXIgZmx1aWQ+XG4iICsNCiAgICAgICAgJyAgICA8Yi1yb3cgY2xhc3M9Im15LTEiIHYtZm9yPSJ0eXBlIGluIHR5cGVzIiA6a2V5PSJ0eXBlIj5cbicgKw0KICAgICAgICAnICAgICAgPGItY29sIHNtPSIzIj5cbicgKw0KICAgICAgICAnICAgICAgICA8bGFiZWwgOmZvcj0iYHR5cGUtJHt0eXBlfWAiPlR5cGUge3sgdHlwZSB9fTo8L2xhYmVsPlxuJyArDQogICAgICAgICIgICAgICA8L2ItY29sPlxuIiArDQogICAgICAgICcgICAgICA8Yi1jb2wgc209IjkiPlxuJyArDQogICAgICAgICcgICAgICAgIDxiLWZvcm0taW5wdXQgOmlkPSJgdHlwZS0ke3R5cGV9YCIgOnR5cGU9InR5cGUiPjwvYi1mb3JtLWlucHV0PlxuJyArDQogICAgICAgICIgICAgICA8L2ItY29sPlxuIiArDQogICAgICAgICIgICAgPC9iLXJvdz5cbiIgKw0KICAgICAgICAiICA8L2ItY29udGFpbmVyPiIsDQogICAgICBqczI6IGBleHBvcnQgZGVmYXVsdCB7DQogICAgZGF0YSgpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgIHR5cGVzOiBbDQogICAgICAgICAgJ3RleHQnLA0KICAgICAgICAgICdwYXNzd29yZCcsDQogICAgICAgICAgJ2VtYWlsJywNCiAgICAgICAgICAnbnVtYmVyJywNCiAgICAgICAgICAndXJsJywNCiAgICAgICAgICAndGVsJywNCiAgICAgICAgICAnZGF0ZScsDQogICAgICAgICAgXGB0aW1lXGAsDQogICAgICAgICAgJ3JhbmdlJywNCiAgICAgICAgICAnY29sb3InDQogICAgICAgIF0NCiAgICAgIH0NCiAgICB9DQogIH1gLA0KICAgICAgdHlwZXM6IFsNCiAgICAgICAgInRleHQiLA0KICAgICAgICAicGFzc3dvcmQiLA0KICAgICAgICAiZW1haWwiLA0KICAgICAgICAibnVtYmVyIiwNCiAgICAgICAgInVybCIsDQogICAgICAgICJ0ZWwiLA0KICAgICAgICAiZGF0ZSIsDQogICAgICAgIGB0aW1lYCwNCiAgICAgICAgInJhbmdlIiwNCiAgICAgICAgImNvbG9yIg0KICAgICAgXSwNCg0KICAgICAgaHRtbDM6IGA8Yi1jb250YWluZXIgZmx1aWQ+DQogIDxiLXJvdyBjbGFzcz0ibXktMSI+DQogICAgPGItY29sIHNtPSIyIj4NCiAgICAgIDxsYWJlbCBmb3I9ImlucHV0LXNtYWxsIj5TbWFsbDo8L2xhYmVsPg0KICAgIDwvYi1jb2w+DQogICAgPGItY29sIHNtPSIxMCI+DQogICAgICA8Yi1mb3JtLWlucHV0IGlkPSJpbnB1dC1zbWFsbCIgc2l6ZT0ic20iIHBsYWNlaG9sZGVyPSJFbnRlciB5b3VyIG5hbWUiPjwvYi1mb3JtLWlucHV0Pg0KICAgIDwvYi1jb2w+DQogIDwvYi1yb3c+DQoNCiAgPGItcm93IGNsYXNzPSJteS0xIj4NCiAgICA8Yi1jb2wgc209IjIiPg0KICAgICAgPGxhYmVsIGZvcj0iaW5wdXQtZGVmYXVsdCI+RGVmYXVsdDo8L2xhYmVsPg0KICAgIDwvYi1jb2w+DQogICAgPGItY29sIHNtPSIxMCI+DQogICAgICA8Yi1mb3JtLWlucHV0IGlkPSJpbnB1dC1kZWZhdWx0IiBwbGFjZWhvbGRlcj0iRW50ZXIgeW91ciBuYW1lIj48L2ItZm9ybS1pbnB1dD4NCiAgICA8L2ItY29sPg0KICA8L2Itcm93Pg0KDQogIDxiLXJvdyBjbGFzcz0ibXktMSI+DQogICAgPGItY29sIHNtPSIyIj4NCiAgICAgIDxsYWJlbCBmb3I9ImlucHV0LWxhcmdlIj5MYXJnZTo8L2xhYmVsPg0KICAgIDwvYi1jb2w+DQogICAgPGItY29sIHNtPSIxMCI+DQogICAgICA8Yi1mb3JtLWlucHV0IGlkPSJpbnB1dC1sYXJnZSIgc2l6ZT0ibGciIHBsYWNlaG9sZGVyPSJFbnRlciB5b3VyIG5hbWUiPjwvYi1mb3JtLWlucHV0Pg0KICAgIDwvYi1jb2w+DQogIDwvYi1yb3c+DQo8L2ItY29udGFpbmVyPmAsDQoNCiAgICAgIGh0bWw0OiBgPGItY29udGFpbmVyIGZsdWlkPg0KICA8Yi1yb3cgY2xhc3M9Im15LTEiPg0KICAgIDxiLWNvbCBzbT0iMyI+DQogICAgICA8bGFiZWwgZm9yPSJpbnB1dC1ub25lIj5ObyBTdGF0ZTo8L2xhYmVsPg0KICAgIDwvYi1jb2w+DQogICAgPGItY29sIHNtPSI5Ij4NCiAgICAgIDxiLWZvcm0taW5wdXQgaWQ9ImlucHV0LW5vbmUiIDpzdGF0ZT0ibnVsbCIgcGxhY2Vob2xkZXI9Ik5vIHZhbGlkYXRpb24iPjwvYi1mb3JtLWlucHV0Pg0KICAgIDwvYi1jb2w+DQogIDwvYi1yb3c+DQoNCiAgPGItcm93IGNsYXNzPSJteS0xIj4NCiAgICA8Yi1jb2wgc209IjMiPg0KICAgICAgPGxhYmVsIGZvcj0iaW5wdXQtdmFsaWQiPlZhbGlkIFN0YXRlOjwvbGFiZWw+DQogICAgPC9iLWNvbD4NCiAgICA8Yi1jb2wgc209IjkiPg0KICAgICAgPGItZm9ybS1pbnB1dCBpZD0iaW5wdXQtdmFsaWQiIDpzdGF0ZT0idHJ1ZSIgcGxhY2Vob2xkZXI9IlZhbGlkIGlucHV0Ij48L2ItZm9ybS1pbnB1dD4NCiAgICA8L2ItY29sPg0KICA8L2Itcm93Pg0KDQogIDxiLXJvdyBjbGFzcz0ibXktMSI+DQogICAgPGItY29sIHNtPSIzIj4NCiAgICAgIDxsYWJlbCBmb3I9ImlucHV0LWludmFsaWQiPkludmFsaWQgU3RhdGU6PC9sYWJlbD4NCiAgICA8L2ItY29sPg0KICAgIDxiLWNvbCBzbT0iOSI+DQogICAgICA8Yi1mb3JtLWlucHV0IGlkPSJpbnB1dC1pbnZhbGlkIiA6c3RhdGU9ImZhbHNlIiBwbGFjZWhvbGRlcj0iSW52YWxpZCBpbnB1dCI+PC9iLWZvcm0taW5wdXQ+DQogICAgPC9iLWNvbD4NCiAgPC9iLXJvdz4NCjwvYi1jb250YWluZXI+YCwNCg0KICAgICAgaHRtbDU6IGA8ZGl2IHJvbGU9Imdyb3VwIj4NCiAgICA8bGFiZWwgZm9yPSJpbnB1dC1saXZlIj5OYW1lOjwvbGFiZWw+DQogICAgPGItZm9ybS1pbnB1dA0KICAgICAgaWQ9ImlucHV0LWxpdmUiDQogICAgICB2LW1vZGVsPSJuYW1lIg0KICAgICAgOnN0YXRlPSJuYW1lU3RhdGUiDQogICAgICBhcmlhLWRlc2NyaWJlZGJ5PSJpbnB1dC1saXZlLWhlbHAgaW5wdXQtbGl2ZS1mZWVkYmFjayINCiAgICAgIHBsYWNlaG9sZGVyPSJFbnRlciB5b3VyIG5hbWUiDQogICAgICB0cmltDQogICAgPjwvYi1mb3JtLWlucHV0Pg0KDQogICAgPCEtLSBUaGlzIHdpbGwgb25seSBiZSBzaG93biBpZiB0aGUgcHJlY2VkaW5nIGlucHV0IGhhcyBhbiBpbnZhbGlkIHN0YXRlIC0tPg0KICAgIDxiLWZvcm0taW52YWxpZC1mZWVkYmFjayBpZD0iaW5wdXQtbGl2ZS1mZWVkYmFjayI+DQogICAgICBFbnRlciBhdCBsZWFzdCAzIGxldHRlcnMNCiAgICA8L2ItZm9ybS1pbnZhbGlkLWZlZWRiYWNrPg0KDQogICAgPCEtLSBUaGlzIGlzIGEgZm9ybSB0ZXh0IGJsb2NrIChmb3JtZXJseSBrbm93biBhcyBoZWxwIGJsb2NrKSAtLT4NCiAgICA8Yi1mb3JtLXRleHQgaWQ9ImlucHV0LWxpdmUtaGVscCI+WW91ciBmdWxsIG5hbWUuPC9iLWZvcm0tdGV4dD4NCiAgPC9kaXY+YCwNCiAgICAgIGpzNTogYGV4cG9ydCBkZWZhdWx0IHsNCiAgICBjb21wdXRlZDogew0KICAgICAgbmFtZVN0YXRlKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5uYW1lLmxlbmd0aCA+IDIgPyB0cnVlIDogZmFsc2UNCiAgICAgIH0NCiAgICB9LA0KICAgIGRhdGEoKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICBuYW1lOiAnJw0KICAgICAgfQ0KICAgIH0NCiAgfWAsDQogICAgICBuYW1lOiAiIg0KICAgIH07DQogIH0sDQogIGNvbXBvbmVudHM6IHsNCiAgICBLVENvZGVQcmV2aWV3DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgbmFtZVN0YXRlKCkgew0KICAgICAgcmV0dXJuIHRoaXMubmFtZS5sZW5ndGggPiAyOw0KICAgIH0NCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaChTRVRfQlJFQURDUlVNQiwgWw0KICAgICAgeyB0aXRsZTogIlZ1ZSBCb290c3RyYXAiLCByb3V0ZTogImFsZXJ0IiB9LA0KICAgICAgeyB0aXRsZTogIkZvcm0gSW5wdXQiIH0NCiAgICBdKTsNCiAgfQ0KfTsNCg=="},{"version":3,"sources":["FormInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2NA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormInput.vue","sourceRoot":"src/view/pages/vue-bootstrap","sourcesContent":["<template>\r\n  <div>\r\n    <b-alert\r\n      show\r\n      variant=\"light\"\r\n      class=\"alert alert-custom alert-white alert-shadow fade show gutter-b\"\r\n    >\r\n      <div class=\"alert-icon\">\r\n        <span class=\"svg-icon svg-icon-lg\">\r\n          <inline-svg src=\"media/svg/icons/Tools/Compass.svg\" />\r\n        </span>\r\n      </div>\r\n      <div class=\"alert-text\">\r\n        <b>Textual and Value inputs</b> Create various type inputs such as:\r\n        text, password, number, url, email, search, range, date and more.\r\n        <a\r\n          class=\"font-weight-bold\"\r\n          href=\"https://bootstrap-vue.js.org/docs/components/form-input\"\r\n          target=\"_blank\"\r\n        >\r\n          See documentation.\r\n        </a>\r\n      </div>\r\n    </b-alert>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'Textual and Value inputs'\">\r\n          <template v-slot:preview>\r\n            <div>\r\n              <b-form-input\r\n                v-model=\"text\"\r\n                placeholder=\"Enter your name\"\r\n              ></b-form-input>\r\n              <div class=\"mt-2\">Value: {{ text }}</div>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html1 }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ js1 }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Input type'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              <code>&lt;b-form-input&gt;</code> defaults to a text input, but\r\n              you can set the <code>type</code> prop to one of the supported\r\n              native browser HTML5 types: <code>text</code>,\r\n              <code>password</code>, <code>email</code>, <code>number</code>,\r\n              <code>url</code>, <code>tel</code>, <code>search</code>,\r\n              <code>date</code>, <code>datetime</code>,\r\n              <code>datetime-local</code>, <code>month</code>,\r\n              <code>week</code>, <code>time</code>, <code>range</code>, or\r\n              <code>color</code>.\r\n            </p>\r\n            <b-container fluid>\r\n              <b-row class=\"my-1\" v-for=\"type in types\" :key=\"type\">\r\n                <b-col sm=\"3\">\r\n                  <label :for=\"`type-${type}`\">Type {{ type }}:</label>\r\n                </b-col>\r\n                <b-col sm=\"9\">\r\n                  <b-form-input\r\n                    :id=\"`type-${type}`\"\r\n                    :type=\"type\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html2 }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ js2 }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'Control sizing'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Set heights using the <code>size</code> prop to <code>sm</code> or\r\n              <code>lg</code> for small or large respectively.\r\n            </p>\r\n            <b-container fluid>\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"2\">\r\n                  <label for=\"input-small\">Small:</label>\r\n                </b-col>\r\n                <b-col sm=\"10\">\r\n                  <b-form-input\r\n                    id=\"input-small\"\r\n                    size=\"sm\"\r\n                    placeholder=\"Enter your name\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"2\">\r\n                  <label for=\"input-default\">Default:</label>\r\n                </b-col>\r\n                <b-col sm=\"10\">\r\n                  <b-form-input\r\n                    id=\"input-default\"\r\n                    placeholder=\"Enter your name\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"2\">\r\n                  <label for=\"input-large\">Large:</label>\r\n                </b-col>\r\n                <b-col sm=\"10\">\r\n                  <b-form-input\r\n                    id=\"input-large\"\r\n                    size=\"lg\"\r\n                    placeholder=\"Enter your name\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html3 }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Contextual states'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Bootstrap includes validation styles for <code>valid</code> and\r\n              <code>invalid</code> states on most form controls.\r\n            </p>\r\n            <b-container fluid>\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"3\">\r\n                  <label for=\"input-none\">No State:</label>\r\n                </b-col>\r\n                <b-col sm=\"9\">\r\n                  <b-form-input\r\n                    id=\"input-none\"\r\n                    :state=\"null\"\r\n                    placeholder=\"No validation\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"3\">\r\n                  <label for=\"input-valid\">Valid State:</label>\r\n                </b-col>\r\n                <b-col sm=\"9\">\r\n                  <b-form-input\r\n                    id=\"input-valid\"\r\n                    :state=\"true\"\r\n                    placeholder=\"Valid input\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"3\">\r\n                  <label for=\"input-invalid\">Invalid State:</label>\r\n                </b-col>\r\n                <b-col sm=\"9\">\r\n                  <b-form-input\r\n                    id=\"input-invalid\"\r\n                    :state=\"false\"\r\n                    placeholder=\"Invalid input\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html4 }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Contextual states Live Example'\">\r\n          <template v-slot:preview>\r\n            <div role=\"group\">\r\n              <label for=\"input-live\">Name:</label>\r\n              <b-form-input\r\n                id=\"input-live\"\r\n                v-model=\"name\"\r\n                :state=\"nameState\"\r\n                aria-describedby=\"input-live-help input-live-feedback\"\r\n                placeholder=\"Enter your name\"\r\n                trim\r\n              ></b-form-input>\r\n\r\n              <!-- This will only be shown if the preceding input has an invalid state -->\r\n              <b-form-invalid-feedback id=\"input-live-feedback\">\r\n                Enter at least 3 letters\r\n              </b-form-invalid-feedback>\r\n\r\n              <!-- This is a form text block (formerly known as help block) -->\r\n              <b-form-text id=\"input-live-help\">Your full name.</b-form-text>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html5 }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ js5 }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport KTCodePreview from \"@/view/content/CodePreview.vue\";\r\nimport { SET_BREADCRUMB } from \"@/core/services/store/breadcrumbs.module\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      html1: `<div>\r\n    <b-form-input v-model=\"text\" placeholder=\"Enter your name\"></b-form-input>\r\n    <div class=\"mt-2\">Value: {{ text }}</div>\r\n  </div>`,\r\n      js1: `export default {\r\n    data() {\r\n      return {\r\n        text: ''\r\n      }\r\n    }\r\n  }`,\r\n      text: \"\",\r\n\r\n      html2:\r\n        \"<b-container fluid>\\n\" +\r\n        '    <b-row class=\"my-1\" v-for=\"type in types\" :key=\"type\">\\n' +\r\n        '      <b-col sm=\"3\">\\n' +\r\n        '        <label :for=\"`type-${type}`\">Type {{ type }}:</label>\\n' +\r\n        \"      </b-col>\\n\" +\r\n        '      <b-col sm=\"9\">\\n' +\r\n        '        <b-form-input :id=\"`type-${type}`\" :type=\"type\"></b-form-input>\\n' +\r\n        \"      </b-col>\\n\" +\r\n        \"    </b-row>\\n\" +\r\n        \"  </b-container>\",\r\n      js2: `export default {\r\n    data() {\r\n      return {\r\n        types: [\r\n          'text',\r\n          'password',\r\n          'email',\r\n          'number',\r\n          'url',\r\n          'tel',\r\n          'date',\r\n          \\`time\\`,\r\n          'range',\r\n          'color'\r\n        ]\r\n      }\r\n    }\r\n  }`,\r\n      types: [\r\n        \"text\",\r\n        \"password\",\r\n        \"email\",\r\n        \"number\",\r\n        \"url\",\r\n        \"tel\",\r\n        \"date\",\r\n        `time`,\r\n        \"range\",\r\n        \"color\"\r\n      ],\r\n\r\n      html3: `<b-container fluid>\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"2\">\r\n      <label for=\"input-small\">Small:</label>\r\n    </b-col>\r\n    <b-col sm=\"10\">\r\n      <b-form-input id=\"input-small\" size=\"sm\" placeholder=\"Enter your name\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"2\">\r\n      <label for=\"input-default\">Default:</label>\r\n    </b-col>\r\n    <b-col sm=\"10\">\r\n      <b-form-input id=\"input-default\" placeholder=\"Enter your name\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"2\">\r\n      <label for=\"input-large\">Large:</label>\r\n    </b-col>\r\n    <b-col sm=\"10\">\r\n      <b-form-input id=\"input-large\" size=\"lg\" placeholder=\"Enter your name\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n</b-container>`,\r\n\r\n      html4: `<b-container fluid>\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"3\">\r\n      <label for=\"input-none\">No State:</label>\r\n    </b-col>\r\n    <b-col sm=\"9\">\r\n      <b-form-input id=\"input-none\" :state=\"null\" placeholder=\"No validation\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"3\">\r\n      <label for=\"input-valid\">Valid State:</label>\r\n    </b-col>\r\n    <b-col sm=\"9\">\r\n      <b-form-input id=\"input-valid\" :state=\"true\" placeholder=\"Valid input\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"3\">\r\n      <label for=\"input-invalid\">Invalid State:</label>\r\n    </b-col>\r\n    <b-col sm=\"9\">\r\n      <b-form-input id=\"input-invalid\" :state=\"false\" placeholder=\"Invalid input\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n</b-container>`,\r\n\r\n      html5: `<div role=\"group\">\r\n    <label for=\"input-live\">Name:</label>\r\n    <b-form-input\r\n      id=\"input-live\"\r\n      v-model=\"name\"\r\n      :state=\"nameState\"\r\n      aria-describedby=\"input-live-help input-live-feedback\"\r\n      placeholder=\"Enter your name\"\r\n      trim\r\n    ></b-form-input>\r\n\r\n    <!-- This will only be shown if the preceding input has an invalid state -->\r\n    <b-form-invalid-feedback id=\"input-live-feedback\">\r\n      Enter at least 3 letters\r\n    </b-form-invalid-feedback>\r\n\r\n    <!-- This is a form text block (formerly known as help block) -->\r\n    <b-form-text id=\"input-live-help\">Your full name.</b-form-text>\r\n  </div>`,\r\n      js5: `export default {\r\n    computed: {\r\n      nameState() {\r\n        return this.name.length > 2 ? true : false\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        name: ''\r\n      }\r\n    }\r\n  }`,\r\n      name: \"\"\r\n    };\r\n  },\r\n  components: {\r\n    KTCodePreview\r\n  },\r\n  computed: {\r\n    nameState() {\r\n      return this.name.length > 2;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(SET_BREADCRUMB, [\r\n      { title: \"Vue Bootstrap\", route: \"alert\" },\r\n      { title: \"Form Input\" }\r\n    ]);\r\n  }\r\n};\r\n</script>\r\n"]}]}