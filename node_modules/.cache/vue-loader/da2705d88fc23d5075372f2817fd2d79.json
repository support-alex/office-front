{"remainingRequest":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/view/layout/aside/Menu.vue?vue&type=template&id=3291f2c1&","dependencies":[{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/view/layout/aside/Menu.vue","mtime":1607442704000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}