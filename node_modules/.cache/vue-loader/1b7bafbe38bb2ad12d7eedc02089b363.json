{"remainingRequest":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/view/pages/vue-bootstrap/Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/view/pages/vue-bootstrap/Form.vue","mtime":1601367364000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgS1RDb2RlUHJldmlldyBmcm9tICJAL3ZpZXcvY29udGVudC9Db2RlUHJldmlldy52dWUiOw0KaW1wb3J0IHsgU0VUX0JSRUFEQ1JVTUIgfSBmcm9tICJAL2NvcmUvc2VydmljZXMvc3RvcmUvYnJlYWRjcnVtYnMubW9kdWxlIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBodG1sMTogYDxkaXY+DQogICAgPGItZm9ybSBAc3VibWl0PSJvblN1Ym1pdCIgQHJlc2V0PSJvblJlc2V0IiB2LWlmPSJzaG93Ij4NCiAgICAgIDxiLWZvcm0tZ3JvdXANCiAgICAgICAgaWQ9ImlucHV0LWdyb3VwLTEiDQogICAgICAgIGxhYmVsPSJFbWFpbCBhZGRyZXNzOiINCiAgICAgICAgbGFiZWwtZm9yPSJpbnB1dC0xIg0KICAgICAgICBkZXNjcmlwdGlvbj0iV2UnbGwgbmV2ZXIgc2hhcmUgeW91ciBlbWFpbCB3aXRoIGFueW9uZSBlbHNlLiINCiAgICAgID4NCiAgICAgICAgPGItZm9ybS1pbnB1dA0KICAgICAgICAgIGlkPSJpbnB1dC0xIg0KICAgICAgICAgIHYtbW9kZWw9ImZvcm0uZW1haWwiDQogICAgICAgICAgdHlwZT0iZW1haWwiDQogICAgICAgICAgcmVxdWlyZWQNCiAgICAgICAgICBwbGFjZWhvbGRlcj0iRW50ZXIgZW1haWwiDQogICAgICAgID48L2ItZm9ybS1pbnB1dD4NCiAgICAgIDwvYi1mb3JtLWdyb3VwPg0KDQogICAgICA8Yi1mb3JtLWdyb3VwIGlkPSJpbnB1dC1ncm91cC0yIiBsYWJlbD0iWW91ciBOYW1lOiIgbGFiZWwtZm9yPSJpbnB1dC0yIj4NCiAgICAgICAgPGItZm9ybS1pbnB1dA0KICAgICAgICAgIGlkPSJpbnB1dC0yIg0KICAgICAgICAgIHYtbW9kZWw9ImZvcm0ubmFtZSINCiAgICAgICAgICByZXF1aXJlZA0KICAgICAgICAgIHBsYWNlaG9sZGVyPSJFbnRlciBuYW1lIg0KICAgICAgICA+PC9iLWZvcm0taW5wdXQ+DQogICAgICA8L2ItZm9ybS1ncm91cD4NCg0KICAgICAgPGItZm9ybS1ncm91cCBpZD0iaW5wdXQtZ3JvdXAtMyIgbGFiZWw9IkZvb2Q6IiBsYWJlbC1mb3I9ImlucHV0LTMiPg0KICAgICAgICA8Yi1mb3JtLXNlbGVjdA0KICAgICAgICAgIGlkPSJpbnB1dC0zIg0KICAgICAgICAgIHYtbW9kZWw9ImZvcm0uZm9vZCINCiAgICAgICAgICA6b3B0aW9ucz0iZm9vZHMiDQogICAgICAgICAgcmVxdWlyZWQNCiAgICAgICAgPjwvYi1mb3JtLXNlbGVjdD4NCiAgICAgIDwvYi1mb3JtLWdyb3VwPg0KDQogICAgICA8Yi1mb3JtLWdyb3VwIGlkPSJpbnB1dC1ncm91cC00Ij4NCiAgICAgICAgPGItZm9ybS1jaGVja2JveC1ncm91cCB2LW1vZGVsPSJmb3JtLmNoZWNrZWQiIGlkPSJjaGVja2JveGVzLTQiPg0KICAgICAgICAgIDxiLWZvcm0tY2hlY2tib3ggdmFsdWU9Im1lIj5DaGVjayBtZSBvdXQ8L2ItZm9ybS1jaGVja2JveD4NCiAgICAgICAgICA8Yi1mb3JtLWNoZWNrYm94IHZhbHVlPSJ0aGF0Ij5DaGVjayB0aGF0IG91dDwvYi1mb3JtLWNoZWNrYm94Pg0KICAgICAgICA8L2ItZm9ybS1jaGVja2JveC1ncm91cD4NCiAgICAgIDwvYi1mb3JtLWdyb3VwPg0KDQogICAgICA8Yi1idXR0b24gdHlwZT0ic3VibWl0IiB2YXJpYW50PSJwcmltYXJ5Ij5TdWJtaXQ8L2ItYnV0dG9uPg0KICAgICAgPGItYnV0dG9uIHR5cGU9InJlc2V0IiB2YXJpYW50PSJkYW5nZXIiPlJlc2V0PC9iLWJ1dHRvbj4NCiAgICA8L2ItZm9ybT4NCiAgICA8Yi1jYXJkIGNsYXNzPSJtdC0zIiBoZWFkZXI9IkZvcm0gRGF0YSBSZXN1bHQiPg0KICAgICAgPHByZSBjbGFzcz0ibS0wIj57eyBmb3JtIH19PC9wcmU+DQogICAgPC9iLWNhcmQ+DQogIDwvZGl2PmAsDQogICAgICBqczE6IGANCiAgZXhwb3J0IGRlZmF1bHQgew0KICAgIGRhdGEoKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICBmb3JtOiB7DQogICAgICAgICAgZW1haWw6ICcnLA0KICAgICAgICAgIG5hbWU6ICcnLA0KICAgICAgICAgIGZvb2Q6IG51bGwsDQogICAgICAgICAgY2hlY2tlZDogW10NCiAgICAgICAgfSwNCiAgICAgICAgZm9vZHM6IFt7IHRleHQ6ICdTZWxlY3QgT25lJywgdmFsdWU6IG51bGwgfSwgJ0NhcnJvdHMnLCAnQmVhbnMnLCAnVG9tYXRvZXMnLCAnQ29ybiddLA0KICAgICAgICBzaG93OiB0cnVlDQogICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICBvblN1Ym1pdChldnQpIHsNCiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCkNCiAgICAgICAgYWxlcnQoSlNPTi5zdHJpbmdpZnkodGhpcy5mb3JtKSkNCiAgICAgIH0sDQogICAgICBvblJlc2V0KGV2dCkgew0KICAgICAgICBldnQucHJldmVudERlZmF1bHQoKQ0KICAgICAgICAvLyBSZXNldCBvdXIgZm9ybSB2YWx1ZXMNCiAgICAgICAgdGhpcy5mb3JtLmVtYWlsID0gJycNCiAgICAgICAgdGhpcy5mb3JtLm5hbWUgPSAnJw0KICAgICAgICB0aGlzLmZvcm0uZm9vZCA9IG51bGwNCiAgICAgICAgdGhpcy5mb3JtLmNoZWNrZWQgPSBbXQ0KICAgICAgICAvLyBUcmljayB0byByZXNldC9jbGVhciBuYXRpdmUgYnJvd3NlciBmb3JtIHZhbGlkYXRpb24gc3RhdGUNCiAgICAgICAgdGhpcy5zaG93ID0gZmFsc2UNCiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgICAgIHRoaXMuc2hvdyA9IHRydWUNCiAgICAgICAgfSkNCiAgICAgIH0NCiAgICB9DQogIH1gLA0KICAgICAgZm9ybTogew0KICAgICAgICBlbWFpbDogIiIsDQogICAgICAgIG5hbWU6ICIiLA0KICAgICAgICBmb29kOiBudWxsLA0KICAgICAgICBjaGVja2VkOiBbXQ0KICAgICAgfSwNCiAgICAgIGZvb2RzOiBbDQogICAgICAgIHsgdGV4dDogIlNlbGVjdCBPbmUiLCB2YWx1ZTogbnVsbCB9LA0KICAgICAgICAiQ2Fycm90cyIsDQogICAgICAgICJCZWFucyIsDQogICAgICAgICJUb21hdG9lcyIsDQogICAgICAgICJDb3JuIg0KICAgICAgXSwNCiAgICAgIHNob3c6IHRydWUsDQoNCiAgICAgIGh0bWwyOiBgPGRpdj4NCiAgPGItZm9ybSBpbmxpbmU+DQogICAgPGxhYmVsIGNsYXNzPSJzci1vbmx5IiBmb3I9ImlubGluZS1mb3JtLWlucHV0LW5hbWUiPk5hbWU8L2xhYmVsPg0KICAgIDxiLWlucHV0DQogICAgICBpZD0iaW5saW5lLWZvcm0taW5wdXQtbmFtZSINCiAgICAgIGNsYXNzPSJtYi0yIG1yLXNtLTIgbWItc20tMCINCiAgICAgIHBsYWNlaG9sZGVyPSJKYW5lIERvZSINCiAgICA+PC9iLWlucHV0Pg0KDQogICAgPGxhYmVsIGNsYXNzPSJzci1vbmx5IiBmb3I9ImlubGluZS1mb3JtLWlucHV0LXVzZXJuYW1lIj5Vc2VybmFtZTwvbGFiZWw+DQogICAgPGItaW5wdXQtZ3JvdXAgcHJlcGVuZD0iQCIgY2xhc3M9Im1iLTIgbXItc20tMiBtYi1zbS0wIj4NCiAgICAgIDxiLWlucHV0IGlkPSJpbmxpbmUtZm9ybS1pbnB1dC11c2VybmFtZSIgcGxhY2Vob2xkZXI9IlVzZXJuYW1lIj48L2ItaW5wdXQ+DQogICAgPC9iLWlucHV0LWdyb3VwPg0KDQogICAgPGItZm9ybS1jaGVja2JveCBjbGFzcz0ibWItMiBtci1zbS0yIG1iLXNtLTAiPlJlbWVtYmVyIG1lPC9iLWZvcm0tY2hlY2tib3g+DQoNCiAgICA8Yi1idXR0b24gdmFyaWFudD0icHJpbWFyeSI+U2F2ZTwvYi1idXR0b24+DQogIDwvYi1mb3JtPg0KPC9kaXY+YCwNCg0KICAgICAgaHRtbDM6IGA8ZGl2Pg0KICA8Yi1mb3JtIGlubGluZT4NCiAgICA8bGFiZWwgY2xhc3M9Im1yLXNtLTIiIGZvcj0iaW5saW5lLWZvcm0tY3VzdG9tLXNlbGVjdC1wcmVmIj5QcmVmZXJlbmNlPC9sYWJlbD4NCiAgICA8Yi1mb3JtLXNlbGVjdA0KICAgICAgY2xhc3M9Im1iLTIgbXItc20tMiBtYi1zbS0wIg0KICAgICAgOnZhbHVlPSJudWxsIg0KICAgICAgOm9wdGlvbnM9InsgJzEnOiAnT25lJywgJzInOiAnVHdvJywgJzMnOiAnVGhyZWUnIH0iDQogICAgICBpZD0iaW5saW5lLWZvcm0tY3VzdG9tLXNlbGVjdC1wcmVmIg0KICAgID4NCiAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6Zmlyc3Q+DQogICAgICAgIDxvcHRpb24gOnZhbHVlPSJudWxsIj5DaG9vc2UuLi48L29wdGlvbj4NCiAgICAgIDwvdGVtcGxhdGU+DQogICAgPC9iLWZvcm0tc2VsZWN0Pg0KDQogICAgPGItZm9ybS1jaGVja2JveCBjbGFzcz0ibWItMiBtci1zbS0yIG1iLXNtLTAiPlJlbWVtYmVyIG15IHByZWZlcmVuY2U8L2ItZm9ybS1jaGVja2JveD4NCg0KICAgIDxiLWJ1dHRvbiB2YXJpYW50PSJwcmltYXJ5Ij5TYXZlPC9iLWJ1dHRvbj4NCiAgPC9iLWZvcm0+DQo8L2Rpdj5gDQogICAgfTsNCiAgfSwNCiAgY29tcG9uZW50czogew0KICAgIEtUQ29kZVByZXZpZXcNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIG9uU3VibWl0KGV2dCkgew0KICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7DQogICAgICBhbGVydChKU09OLnN0cmluZ2lmeSh0aGlzLmZvcm0pKTsNCiAgICB9LA0KICAgIG9uUmVzZXQoZXZ0KSB7DQogICAgICBldnQucHJldmVudERlZmF1bHQoKTsNCiAgICAgIC8vIFJlc2V0IG91ciBmb3JtIHZhbHVlcw0KICAgICAgdGhpcy5mb3JtLmVtYWlsID0gIiI7DQogICAgICB0aGlzLmZvcm0ubmFtZSA9ICIiOw0KICAgICAgdGhpcy5mb3JtLmZvb2QgPSBudWxsOw0KICAgICAgdGhpcy5mb3JtLmNoZWNrZWQgPSBbXTsNCiAgICAgIC8vIFRyaWNrIHRvIHJlc2V0L2NsZWFyIG5hdGl2ZSBicm93c2VyIGZvcm0gdmFsaWRhdGlvbiBzdGF0ZQ0KICAgICAgdGhpcy5zaG93ID0gZmFsc2U7DQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7DQogICAgICAgIHRoaXMuc2hvdyA9IHRydWU7DQogICAgICB9KTsNCiAgICB9DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goU0VUX0JSRUFEQ1JVTUIsIFsNCiAgICAgIHsgdGl0bGU6ICJWdWUgQm9vdHN0cmFwIiwgcm91dGU6ICJhbGVydCIgfSwNCiAgICAgIHsgdGl0bGU6ICJGb3JtIiB9DQogICAgXSk7DQogIH0NCn07DQo="},{"version":3,"sources":["Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+LA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Form.vue","sourceRoot":"src/view/pages/vue-bootstrap","sourcesContent":["<template>\r\n  <div>\r\n    <b-alert\r\n      show\r\n      variant=\"light\"\r\n      class=\"alert alert-custom alert-white alert-shadow fade show gutter-b\"\r\n    >\r\n      <div class=\"alert-icon\">\r\n        <span class=\"svg-icon svg-icon-lg\">\r\n          <inline-svg src=\"media/svg/icons/Tools/Compass.svg\" />\r\n        </span>\r\n      </div>\r\n      <div class=\"alert-text\">\r\n        <b>Form</b> BootstrapVue form component and helper components that\r\n        optionally support inline form styles and validation states. Pair them\r\n        up with other BootstrapVue form control components for an easy\r\n        customized, and responsive, layout with a consistent look and feel.\r\n        <a\r\n          class=\"font-weight-bold\"\r\n          href=\"https://bootstrap-vue.js.org/docs/components/form\"\r\n          target=\"_blank\"\r\n        >\r\n          See documentation.\r\n        </a>\r\n      </div>\r\n    </b-alert>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <KTCodePreview v-bind:title=\"'Introduction to forms and controls'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Be sure to use an appropriate <code>type</code> on all inputs\r\n              (e.g., email for email address or number for numerical\r\n              information) to take advantage of newer input controls like\r\n              <code>email</code> verification, <code>number</code> selection,\r\n              and more.\r\n            </p>\r\n            <div>\r\n              <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\">\r\n                <b-form-group\r\n                  id=\"input-group-1\"\r\n                  label=\"Email address:\"\r\n                  label-for=\"input-1\"\r\n                  description=\"We'll never share your email with anyone else.\"\r\n                >\r\n                  <b-form-input\r\n                    id=\"input-1\"\r\n                    v-model=\"form.email\"\r\n                    type=\"email\"\r\n                    required\r\n                    placeholder=\"Enter email\"\r\n                  ></b-form-input>\r\n                </b-form-group>\r\n\r\n                <b-form-group\r\n                  id=\"input-group-2\"\r\n                  label=\"Your Name:\"\r\n                  label-for=\"input-2\"\r\n                >\r\n                  <b-form-input\r\n                    id=\"input-2\"\r\n                    v-model=\"form.name\"\r\n                    required\r\n                    placeholder=\"Enter name\"\r\n                  ></b-form-input>\r\n                </b-form-group>\r\n\r\n                <b-form-group\r\n                  id=\"input-group-3\"\r\n                  label=\"Food:\"\r\n                  label-for=\"input-3\"\r\n                >\r\n                  <b-form-select\r\n                    id=\"input-3\"\r\n                    v-model=\"form.food\"\r\n                    :options=\"foods\"\r\n                    required\r\n                  ></b-form-select>\r\n                </b-form-group>\r\n\r\n                <b-form-group id=\"input-group-4\">\r\n                  <b-form-checkbox-group\r\n                    v-model=\"form.checked\"\r\n                    id=\"checkboxes-4\"\r\n                  >\r\n                    <b-form-checkbox value=\"me\">Check me out</b-form-checkbox>\r\n                    <b-form-checkbox value=\"that\">\r\n                      Check that out\r\n                    </b-form-checkbox>\r\n                  </b-form-checkbox-group>\r\n                </b-form-group>\r\n\r\n                <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\r\n                <b-button class=\"ml-2\" type=\"reset\" variant=\"danger\">\r\n                  Reset\r\n                </b-button>\r\n              </b-form>\r\n              <b-card class=\"mt-3\" header=\"Form Data Result\">\r\n                <pre class=\"m-0\">{{ form }}</pre>\r\n              </b-card>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html1 }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ js1 }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Inline form'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Use the <code>inline</code> prop on <code>&lt;b-form&gt;</code> to\r\n              display a series of labels, form controls, and buttons on a single\r\n              horizontal row. Form controls within inline forms vary slightly\r\n              from their default states.\r\n            </p>\r\n            <div>\r\n              <b-form inline>\r\n                <label class=\"sr-only\" for=\"inline-form-input-name\">Name</label>\r\n                <b-input\r\n                  id=\"inline-form-input-name\"\r\n                  class=\"mb-2 mr-sm-2 mb-sm-0\"\r\n                  placeholder=\"Jane Doe\"\r\n                ></b-input>\r\n\r\n                <label class=\"sr-only\" for=\"inline-form-input-username\"\r\n                  >Username</label\r\n                >\r\n                <b-input-group prepend=\"@\" class=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                  <b-input\r\n                    id=\"inline-form-input-username\"\r\n                    placeholder=\"Username\"\r\n                  ></b-input>\r\n                </b-input-group>\r\n\r\n                <b-form-checkbox class=\"mb-2 mr-sm-2 mb-sm-0\"\r\n                  >Remember me\r\n                </b-form-checkbox>\r\n\r\n                <b-button variant=\"primary\">Save</b-button>\r\n              </b-form>\r\n            </div>\r\n          </template>\r\n          <template v-slot:code>\r\n            <highlight-code lang=\"html\">\r\n              {{ html2 }}\r\n            </highlight-code>\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Custom form controls and selects'\">\r\n          <template v-slot:preview>\r\n            <div>\r\n              <b-form inline>\r\n                <label class=\"mr-sm-2\" for=\"inline-form-custom-select-pref\">\r\n                  Preference\r\n                </label>\r\n                <b-form-select\r\n                  class=\"mb-2 mr-sm-2 mb-sm-0\"\r\n                  :value=\"null\"\r\n                  :options=\"{ '1': 'One', '2': 'Two', '3': 'Three' }\"\r\n                  id=\"inline-form-custom-select-pref\"\r\n                >\r\n                  <template v-slot:first>\r\n                    <option :value=\"null\">Choose...</option>\r\n                  </template>\r\n                </b-form-select>\r\n\r\n                <b-form-checkbox class=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                  Remember my preference\r\n                </b-form-checkbox>\r\n\r\n                <b-button variant=\"primary\">Save</b-button>\r\n              </b-form>\r\n            </div>\r\n          </template>\r\n          <template v-slot:code>\r\n            <highlight-code lang=\"html\">\r\n              {{ html3 }}\r\n            </highlight-code>\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport KTCodePreview from \"@/view/content/CodePreview.vue\";\r\nimport { SET_BREADCRUMB } from \"@/core/services/store/breadcrumbs.module\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      html1: `<div>\r\n    <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\">\r\n      <b-form-group\r\n        id=\"input-group-1\"\r\n        label=\"Email address:\"\r\n        label-for=\"input-1\"\r\n        description=\"We'll never share your email with anyone else.\"\r\n      >\r\n        <b-form-input\r\n          id=\"input-1\"\r\n          v-model=\"form.email\"\r\n          type=\"email\"\r\n          required\r\n          placeholder=\"Enter email\"\r\n        ></b-form-input>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-2\" label=\"Your Name:\" label-for=\"input-2\">\r\n        <b-form-input\r\n          id=\"input-2\"\r\n          v-model=\"form.name\"\r\n          required\r\n          placeholder=\"Enter name\"\r\n        ></b-form-input>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-3\" label=\"Food:\" label-for=\"input-3\">\r\n        <b-form-select\r\n          id=\"input-3\"\r\n          v-model=\"form.food\"\r\n          :options=\"foods\"\r\n          required\r\n        ></b-form-select>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-4\">\r\n        <b-form-checkbox-group v-model=\"form.checked\" id=\"checkboxes-4\">\r\n          <b-form-checkbox value=\"me\">Check me out</b-form-checkbox>\r\n          <b-form-checkbox value=\"that\">Check that out</b-form-checkbox>\r\n        </b-form-checkbox-group>\r\n      </b-form-group>\r\n\r\n      <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\r\n      <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\r\n    </b-form>\r\n    <b-card class=\"mt-3\" header=\"Form Data Result\">\r\n      <pre class=\"m-0\">{{ form }}</pre>\r\n    </b-card>\r\n  </div>`,\r\n      js1: `\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {\r\n          email: '',\r\n          name: '',\r\n          food: null,\r\n          checked: []\r\n        },\r\n        foods: [{ text: 'Select One', value: null }, 'Carrots', 'Beans', 'Tomatoes', 'Corn'],\r\n        show: true\r\n      }\r\n    },\r\n    methods: {\r\n      onSubmit(evt) {\r\n        evt.preventDefault()\r\n        alert(JSON.stringify(this.form))\r\n      },\r\n      onReset(evt) {\r\n        evt.preventDefault()\r\n        // Reset our form values\r\n        this.form.email = ''\r\n        this.form.name = ''\r\n        this.form.food = null\r\n        this.form.checked = []\r\n        // Trick to reset/clear native browser form validation state\r\n        this.show = false\r\n        this.$nextTick(() => {\r\n          this.show = true\r\n        })\r\n      }\r\n    }\r\n  }`,\r\n      form: {\r\n        email: \"\",\r\n        name: \"\",\r\n        food: null,\r\n        checked: []\r\n      },\r\n      foods: [\r\n        { text: \"Select One\", value: null },\r\n        \"Carrots\",\r\n        \"Beans\",\r\n        \"Tomatoes\",\r\n        \"Corn\"\r\n      ],\r\n      show: true,\r\n\r\n      html2: `<div>\r\n  <b-form inline>\r\n    <label class=\"sr-only\" for=\"inline-form-input-name\">Name</label>\r\n    <b-input\r\n      id=\"inline-form-input-name\"\r\n      class=\"mb-2 mr-sm-2 mb-sm-0\"\r\n      placeholder=\"Jane Doe\"\r\n    ></b-input>\r\n\r\n    <label class=\"sr-only\" for=\"inline-form-input-username\">Username</label>\r\n    <b-input-group prepend=\"@\" class=\"mb-2 mr-sm-2 mb-sm-0\">\r\n      <b-input id=\"inline-form-input-username\" placeholder=\"Username\"></b-input>\r\n    </b-input-group>\r\n\r\n    <b-form-checkbox class=\"mb-2 mr-sm-2 mb-sm-0\">Remember me</b-form-checkbox>\r\n\r\n    <b-button variant=\"primary\">Save</b-button>\r\n  </b-form>\r\n</div>`,\r\n\r\n      html3: `<div>\r\n  <b-form inline>\r\n    <label class=\"mr-sm-2\" for=\"inline-form-custom-select-pref\">Preference</label>\r\n    <b-form-select\r\n      class=\"mb-2 mr-sm-2 mb-sm-0\"\r\n      :value=\"null\"\r\n      :options=\"{ '1': 'One', '2': 'Two', '3': 'Three' }\"\r\n      id=\"inline-form-custom-select-pref\"\r\n    >\r\n      <template v-slot:first>\r\n        <option :value=\"null\">Choose...</option>\r\n      </template>\r\n    </b-form-select>\r\n\r\n    <b-form-checkbox class=\"mb-2 mr-sm-2 mb-sm-0\">Remember my preference</b-form-checkbox>\r\n\r\n    <b-button variant=\"primary\">Save</b-button>\r\n  </b-form>\r\n</div>`\r\n    };\r\n  },\r\n  components: {\r\n    KTCodePreview\r\n  },\r\n  methods: {\r\n    onSubmit(evt) {\r\n      evt.preventDefault();\r\n      alert(JSON.stringify(this.form));\r\n    },\r\n    onReset(evt) {\r\n      evt.preventDefault();\r\n      // Reset our form values\r\n      this.form.email = \"\";\r\n      this.form.name = \"\";\r\n      this.form.food = null;\r\n      this.form.checked = [];\r\n      // Trick to reset/clear native browser form validation state\r\n      this.show = false;\r\n      this.$nextTick(() => {\r\n        this.show = true;\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(SET_BREADCRUMB, [\r\n      { title: \"Vue Bootstrap\", route: \"alert\" },\r\n      { title: \"Form\" }\r\n    ]);\r\n  }\r\n};\r\n</script>\r\n"]}]}