{"remainingRequest":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/view/pages/vuetify/forms/FileInputs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/view/pages/vuetify/forms/FileInputs.vue","mtime":1601367364000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgS1RDb2RlUHJldmlldyBmcm9tICJAL3ZpZXcvY29udGVudC9Db2RlUHJldmlldy52dWUiOw0KaW1wb3J0IHsgU0VUX0JSRUFEQ1JVTUIgfSBmcm9tICJAL2NvcmUvc2VydmljZXMvc3RvcmUvYnJlYWRjcnVtYnMubW9kdWxlIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBjb2RlMTogew0KICAgICAgICBodG1sOiBgIDx2LWZpbGUtaW5wdXQgbXVsdGlwbGUgbGFiZWw9IkZpbGUgaW5wdXQiPjwvdi1maWxlLWlucHV0PmANCiAgICAgIH0sDQoNCiAgICAgIGNvZGUyOiB7DQogICAgICAgIGh0bWw6IGA8di1maWxlLWlucHV0IGFjY2VwdD0iaW1hZ2UvKiIgbGFiZWw9IkZpbGUgaW5wdXQiPjwvdi1maWxlLWlucHV0PmANCiAgICAgIH0sDQoNCiAgICAgIGNvZGUzOiB7DQogICAgICAgIGh0bWw6IGA8ZGl2Pg0KICA8di1maWxlLWlucHV0IGNoaXBzIG11bHRpcGxlIGxhYmVsPSJGaWxlIGlucHV0IHcvIGNoaXBzIj48L3YtZmlsZS1pbnB1dD4NCiAgPHYtZmlsZS1pbnB1dCBzbWFsbC1jaGlwcyBtdWx0aXBsZSBsYWJlbD0iRmlsZSBpbnB1dCB3LyBzbWFsbCBjaGlwcyI+PC92LWZpbGUtaW5wdXQ+DQo8L2Rpdj5gDQogICAgICB9LA0KDQogICAgICBjb2RlNDogew0KICAgICAgICBodG1sOiBgPHYtZmlsZS1pbnB1dCBzaG93LXNpemUgbGFiZWw9IkZpbGUgaW5wdXQiPjwvdi1maWxlLWlucHV0PmANCiAgICAgIH0sDQoNCiAgICAgIGNvZGU1OiB7DQogICAgICAgIGh0bWw6IGA8di1maWxlLWlucHV0IHNob3ctc2l6ZSBjb3VudGVyIG11bHRpcGxlIGxhYmVsPSJGaWxlIGlucHV0Ij48L3YtZmlsZS1pbnB1dD5gDQogICAgICB9LA0KDQogICAgICBjb2RlNjogew0KICAgICAgICBodG1sOiBgPHYtZmlsZS1pbnB1dA0KICBsYWJlbD0iRmlsZSBpbnB1dCINCiAgZmlsbGVkDQogIHByZXBlbmQtaWNvbj0ibWRpLWNhbWVyYSINCj48L3YtZmlsZS1pbnB1dD5gDQogICAgICB9LA0KDQogICAgICBjb2RlNzogew0KICAgICAgICBodG1sOiBgPHYtZmlsZS1pbnB1dA0KICB2LW1vZGVsPSJmaWxlcyINCiAgY29sb3I9ImRlZXAtcHVycGxlIGFjY2VudC00Ig0KICBjb3VudGVyDQogIGxhYmVsPSJGaWxlIGlucHV0Ig0KICBtdWx0aXBsZQ0KICBwbGFjZWhvbGRlcj0iU2VsZWN0IHlvdXIgZmlsZXMiDQogIHByZXBlbmQtaWNvbj0ibWRpLXBhcGVyY2xpcCINCiAgb3V0bGluZWQNCiAgOnNob3ctc2l6ZT0iMTAwMCINCj4NCiAgPHRlbXBsYXRlIHYtc2xvdDpzZWxlY3Rpb249InsgaW5kZXgsIHRleHQgfSI+DQogICAgPHYtY2hpcA0KICAgICAgdi1pZj0iaW5kZXggPCAyIg0KICAgICAgY29sb3I9ImRlZXAtcHVycGxlIGFjY2VudC00Ig0KICAgICAgZGFyaw0KICAgICAgbGFiZWwNCiAgICAgIHNtYWxsDQogICAgPg0KICAgICAge3sgdGV4dCB9fQ0KICAgIDwvdi1jaGlwPg0KDQogICAgPHNwYW4NCiAgICAgIHYtZWxzZS1pZj0iaW5kZXggPT09IDIiDQogICAgICBjbGFzcz0ib3ZlcmxpbmUgZ3JleS0tdGV4dCB0ZXh0LS1kYXJrZW4tMyBteC0yIg0KICAgID4NCiAgICAgICt7eyBmaWxlcy5sZW5ndGggLSAyIH19IEZpbGUocykNCiAgICA8L3NwYW4+DQogIDwvdGVtcGxhdGU+DQo8L3YtZmlsZS1pbnB1dD5gLA0KICAgICAgICBqczogYGV4cG9ydCBkZWZhdWx0IHsNCiAgZGF0YTogKCkgPT4gKHsNCiAgICBmaWxlczogW10sDQogIH0pLA0KfWAsDQogICAgICAgIGZpbGVzOiBbXQ0KICAgICAgfQ0KICAgIH07DQogIH0sDQogIGNvbXBvbmVudHM6IHsNCiAgICBLVENvZGVQcmV2aWV3DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goU0VUX0JSRUFEQ1JVTUIsIFsNCiAgICAgIHsgdGl0bGU6ICJWdWV0aWZ5Iiwgcm91dGU6ICJhbGVydHMiIH0sDQogICAgICB7IHRpdGxlOiAiRm9ybSBJbnB1dHMgJiBDb250cm9sIiwgcm91dGU6ICJhdXRvY29tcGxldGVzIiB9LA0KICAgICAgeyB0aXRsZTogIkZpbGUgSW5wdXRzIiB9DQogICAgXSk7DQogIH0NCn07DQo="},{"version":3,"sources":["FileInputs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FileInputs.vue","sourceRoot":"src/view/pages/vuetify/forms","sourcesContent":["<template>\r\n  <div>\r\n    <b-alert\r\n      show\r\n      variant=\"light\"\r\n      class=\"alert alert-custom alert-white alert-shadow fade show gutter-b\"\r\n    >\r\n      <div class=\"alert-icon\">\r\n        <span class=\"svg-icon svg-icon-lg\">\r\n          <inline-svg src=\"media/svg/icons/Tools/Compass.svg\" />\r\n        </span>\r\n      </div>\r\n      <div class=\"alert-text\">\r\n        <b>File inputs</b> The <code>v-file-input</code> component is a\r\n        specialized input that provides a clean interface for selecting files,\r\n        showing detailed selection information and upload progress. It is meant\r\n        to be a direct replacement for a standard file input.\r\n        <a\r\n          class=\"font-weight-bold\"\r\n          href=\"https://vuetifyjs.com/en/components/file-inputs\"\r\n          target=\"_blank\"\r\n        >\r\n          See documentation.\r\n        </a>\r\n      </div>\r\n    </b-alert>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'Multiple'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              The <code>v-file-input</code> can contain multiple files at the\r\n              same time when using the <strong>multiple</strong> prop.\r\n            </p>\r\n            <v-file-input multiple label=\"File input\"></v-file-input>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code1.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Custom icons'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              The <code>v-file-input</code> has a default prepended icon that\r\n              can be set on the component or adjusted globally.\r\n            </p>\r\n            <v-file-input\r\n              label=\"File input\"\r\n              filled\r\n              prepend-icon=\"mdi-camera\"\r\n            ></v-file-input>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code6.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Counter'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              When using the show-size property along with counter, the total\r\n              number of files and size will be displayed under the input.\r\n            </p>\r\n            <v-file-input\r\n              show-size\r\n              counter\r\n              multiple\r\n              label=\"File input\"\r\n            ></v-file-input>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code5.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Complex selection slots'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              The flexibility of the selection slot allows you accomodate\r\n              complex use-cases. In this example we show the first 2 selections\r\n              as chips while adding a number indicator for the remaining amount.\r\n            </p>\r\n            <v-file-input\r\n              v-model=\"code7.files\"\r\n              color=\"deep-purple accent-4\"\r\n              counter\r\n              label=\"File input\"\r\n              multiple\r\n              placeholder=\"Select your files\"\r\n              prepend-icon=\"mdi-paperclip\"\r\n              outlined\r\n              :show-size=\"1000\"\r\n            >\r\n              <template v-slot:selection=\"{ index, text }\">\r\n                <v-chip\r\n                  v-if=\"index < 2\"\r\n                  color=\"deep-purple accent-4\"\r\n                  dark\r\n                  label\r\n                  small\r\n                >\r\n                  {{ text }}\r\n                </v-chip>\r\n\r\n                <span\r\n                  v-else-if=\"index === 2\"\r\n                  class=\"overline grey--text text--darken-3 mx-2\"\r\n                >\r\n                  +{{ code7.files.length - 2 }} File(s)\r\n                </span>\r\n              </template>\r\n            </v-file-input>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code7.html }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ code7.js }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'With chips'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              A selected file can be displayed as a chip. When using the chips\r\n              and multiple props, each chip will be displayed (as opposed to the\r\n              file count).\r\n            </p>\r\n            <div>\r\n              <v-file-input\r\n                chips\r\n                multiple\r\n                label=\"File input w/ chips\"\r\n              ></v-file-input>\r\n              <v-file-input\r\n                small-chips\r\n                multiple\r\n                label=\"File input w/ small chips\"\r\n              ></v-file-input>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code3.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Accept formats'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              <code>v-file-input</code> component can accept only specific media\r\n              formats/file types if you want.\r\n            </p>\r\n            <v-file-input accept=\"image/*\" label=\"File input\"></v-file-input>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code2.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Size displaying'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              The displayed size of the selected file(s) can be configured with\r\n              the show-size property. Display sizes can be either 1024 (the\r\n              default used when providing true) or 1000.\r\n            </p>\r\n            <v-file-input show-size label=\"File input\"></v-file-input>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code4.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport KTCodePreview from \"@/view/content/CodePreview.vue\";\r\nimport { SET_BREADCRUMB } from \"@/core/services/store/breadcrumbs.module\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      code1: {\r\n        html: ` <v-file-input multiple label=\"File input\"></v-file-input>`\r\n      },\r\n\r\n      code2: {\r\n        html: `<v-file-input accept=\"image/*\" label=\"File input\"></v-file-input>`\r\n      },\r\n\r\n      code3: {\r\n        html: `<div>\r\n  <v-file-input chips multiple label=\"File input w/ chips\"></v-file-input>\r\n  <v-file-input small-chips multiple label=\"File input w/ small chips\"></v-file-input>\r\n</div>`\r\n      },\r\n\r\n      code4: {\r\n        html: `<v-file-input show-size label=\"File input\"></v-file-input>`\r\n      },\r\n\r\n      code5: {\r\n        html: `<v-file-input show-size counter multiple label=\"File input\"></v-file-input>`\r\n      },\r\n\r\n      code6: {\r\n        html: `<v-file-input\r\n  label=\"File input\"\r\n  filled\r\n  prepend-icon=\"mdi-camera\"\r\n></v-file-input>`\r\n      },\r\n\r\n      code7: {\r\n        html: `<v-file-input\r\n  v-model=\"files\"\r\n  color=\"deep-purple accent-4\"\r\n  counter\r\n  label=\"File input\"\r\n  multiple\r\n  placeholder=\"Select your files\"\r\n  prepend-icon=\"mdi-paperclip\"\r\n  outlined\r\n  :show-size=\"1000\"\r\n>\r\n  <template v-slot:selection=\"{ index, text }\">\r\n    <v-chip\r\n      v-if=\"index < 2\"\r\n      color=\"deep-purple accent-4\"\r\n      dark\r\n      label\r\n      small\r\n    >\r\n      {{ text }}\r\n    </v-chip>\r\n\r\n    <span\r\n      v-else-if=\"index === 2\"\r\n      class=\"overline grey--text text--darken-3 mx-2\"\r\n    >\r\n      +{{ files.length - 2 }} File(s)\r\n    </span>\r\n  </template>\r\n</v-file-input>`,\r\n        js: `export default {\r\n  data: () => ({\r\n    files: [],\r\n  }),\r\n}`,\r\n        files: []\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    KTCodePreview\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(SET_BREADCRUMB, [\r\n      { title: \"Vuetify\", route: \"alerts\" },\r\n      { title: \"Form Inputs & Control\", route: \"autocompletes\" },\r\n      { title: \"File Inputs\" }\r\n    ]);\r\n  }\r\n};\r\n</script>\r\n"]}]}