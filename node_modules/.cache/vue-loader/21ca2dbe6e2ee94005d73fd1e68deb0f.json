{"remainingRequest":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/view/pages/vue-bootstrap/Progress.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/view/pages/vue-bootstrap/Progress.vue","mtime":1615859624000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnByb2dyZXNzLWJhci5wcm9ncmVzcy1iYXItc3RyaXBlZC5wcm9ncmVzcy1iYXItYW5pbWF0ZWQgew0KICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0ICFpbXBvcnRhbnQ7DQp9DQo="},{"version":3,"sources":["Progress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgOA;AACA;AACA","file":"Progress.vue","sourceRoot":"src/view/pages/vue-bootstrap","sourcesContent":["<template>\r\n  <div>\r\n    <b-alert\r\n      show\r\n      variant=\"light\"\r\n      class=\"alert alert-custom alert-white alert-shadow fade show gutter-b\"\r\n    >\r\n      <div class=\"alert-icon\">\r\n        <span class=\"svg-icon svg-icon-lg\">\r\n          <inline-svg src=\"media/svg/icons/Tools/Compass.svg\" />\r\n        </span>\r\n      </div>\r\n      <div class=\"alert-text\">\r\n        <b>Progress</b> Use our custom progress component for displaying simple\r\n        or complex progress bars, featuring support for horizontally stacked\r\n        bars, animated backgrounds, and text labels.\r\n        <a\r\n          class=\"font-weight-bold\"\r\n          href=\"https://bootstrap-vue.js.org/docs/components/progress\"\r\n          target=\"_blank\"\r\n        >\r\n          See documentation.\r\n        </a>\r\n      </div>\r\n    </b-alert>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <KTCodePreview v-bind:title=\"'Progress'\">\r\n          <template v-slot:preview>\r\n            <div>\r\n              <b-progress\r\n                :value=\"code1.value\"\r\n                :max=\"code1.max\"\r\n                show-progress\r\n                animated\r\n              ></b-progress>\r\n              <b-progress class=\"mt-2\" :max=\"code1.max\" show-value>\r\n                <b-progress-bar\r\n                  :value=\"code1.value * (6 / 10)\"\r\n                  variant=\"success\"\r\n                ></b-progress-bar>\r\n                <b-progress-bar\r\n                  :value=\"code1.value * (2.5 / 10)\"\r\n                  variant=\"warning\"\r\n                ></b-progress-bar>\r\n                <b-progress-bar\r\n                  :value=\"code1.value * (1.5 / 10)\"\r\n                  variant=\"danger\"\r\n                ></b-progress-bar>\r\n              </b-progress>\r\n\r\n              <b-button class=\"mt-3\" @click=\"randomValue\">Click me</b-button>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code1.html }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ code1.js }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Labels'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Add labels to your progress bars by either enabling\r\n              <code>show-progress</code> (percentage of max) or\r\n              <code>show-value</code> for the current absolute value. You may\r\n              also set the precision (number of digits after the decimal) via\r\n              the <code>precision</code> prop (default is 0digits after the\r\n              decimal).\r\n            </p>\r\n            <div>\r\n              <h5>No label</h5>\r\n              <b-progress\r\n                :value=\"code2.value\"\r\n                :max=\"code2.max\"\r\n                class=\"mb-3\"\r\n              ></b-progress>\r\n\r\n              <h5>Value label</h5>\r\n              <b-progress\r\n                :value=\"code2.value\"\r\n                :max=\"code2.max\"\r\n                show-value\r\n                class=\"mb-3\"\r\n              ></b-progress>\r\n\r\n              <h5>Progress label</h5>\r\n              <b-progress\r\n                :value=\"code2.value\"\r\n                :max=\"code2.max\"\r\n                show-progress\r\n                class=\"mb-3\"\r\n              ></b-progress>\r\n\r\n              <h5>Value label with precision</h5>\r\n              <b-progress\r\n                :value=\"code2.value\"\r\n                :max=\"code2.max\"\r\n                :precision=\"2\"\r\n                show-value\r\n                class=\"mb-3\"\r\n              ></b-progress>\r\n\r\n              <h5>Progress label with precision</h5>\r\n              <b-progress\r\n                :value=\"code2.value\"\r\n                :max=\"code2.max\"\r\n                :precision=\"2\"\r\n                show-progress\r\n                class=\"mb-3\"\r\n              ></b-progress>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code2.html }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ code2.js }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Custom progress label'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Need more control over the label? Provide your own label by using\r\n              the default slot within a\r\n              <code\r\n                >&lt;b-progress-bar&gt; sub-component, or by using the label or\r\n                label-html property on &lt;b-progress-bar&gt;</code\r\n              >:\r\n            </p>\r\n            <div>\r\n              <h5>Custom label via default slot</h5>\r\n              <b-progress :max=\"code3.max\" height=\"2rem\">\r\n                <b-progress-bar :value=\"code3.value\">\r\n                  <span>\r\n                    Progress:\r\n                    <strong\r\n                      >{{ code3.value.toFixed(2) }} / {{ code3.max }}</strong\r\n                    >\r\n                  </span>\r\n                </b-progress-bar>\r\n              </b-progress>\r\n\r\n              <h5 class=\"mt-3\">Custom label via property</h5>\r\n              <b-progress :max=\"code3.max\">\r\n                <b-progress-bar\r\n                  :value=\"code3.value\"\r\n                  :label=\"`${((code3.value / code3.max) * 100).toFixed(2)}%`\"\r\n                ></b-progress-bar>\r\n              </b-progress>\r\n\r\n              <h5 class=\"mt-3\">Custom label via property (HTML support)</h5>\r\n              <b-progress :max=\"code3.max\">\r\n                <b-progress-bar\r\n                  :value=\"code3.value\"\r\n                  :label-html=\"`<del>${code3.value}</del>`\"\r\n                ></b-progress-bar>\r\n              </b-progress>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code3.html }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ code3.js }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Width and height'\">\r\n          <template v-slot:preview>\r\n            <div>\r\n              <h5>Default width</h5>\r\n              <b-progress :value=\"code4.value\" class=\"mb-3\"></b-progress>\r\n\r\n              <h5>Custom widths</h5>\r\n              <b-progress :value=\"code4.value\" class=\"w-75 mb-2\"></b-progress>\r\n              <b-progress :value=\"code4.value\" class=\"w-50 mb-2\"></b-progress>\r\n              <b-progress :value=\"code4.value\" class=\"w-25\"></b-progress>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code4.html }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ code4.js }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Solid background variants'\">\r\n          <template v-slot:preview>\r\n            <div>\r\n              <div\r\n                v-for=\"(bar, i) in code5.bars\"\r\n                class=\"row mb-1\"\r\n                v-bind:key=\"i\"\r\n              >\r\n                <div class=\"col-sm-2\">{{ bar.variant }}:</div>\r\n                <div class=\"col-sm-10 pt-1\">\r\n                  <b-progress\r\n                    :value=\"bar.value\"\r\n                    :variant=\"bar.variant\"\r\n                    :key=\"bar.variant\"\r\n                  ></b-progress>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code5.html }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ code5.js }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n.progress-bar.progress-bar-striped.progress-bar-animated {\r\n  background-repeat: repeat !important;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport KTCodePreview from \"@/view/content/CodePreview.vue\";\r\nimport { SET_BREADCRUMB } from \"@/core/services/store/breadcrumbs.module\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      code1: {\r\n        html: `<div>\r\n    <b-progress :value=\"value\" :max=\"max\" show-progress animated></b-progress>\r\n    <b-progress class=\"mt-2\" :max=\"max\" show-value>\r\n      <b-progress-bar :value=\"value * (6 / 10)\" variant=\"success\"></b-progress-bar>\r\n      <b-progress-bar :value=\"value * (2.5 / 10)\" variant=\"warning\"></b-progress-bar>\r\n      <b-progress-bar :value=\"value * (1.5 / 10)\" variant=\"danger\"></b-progress-bar>\r\n    </b-progress>\r\n\r\n    <b-button class=\"mt-3\" @click=\"randomValue\">Click me</b-button>\r\n  </div>`,\r\n        js: `export default {\r\n    data() {\r\n      return {\r\n        value: 45,\r\n        max: 100\r\n      }\r\n    },\r\n    methods: {\r\n      randomValue() {\r\n        this.value = Math.random() * this.max\r\n      }\r\n    }\r\n  }`,\r\n        value: 45,\r\n        max: 100\r\n      },\r\n\r\n      code2: {\r\n        html: `<div>\r\n    <h5>No label</h5>\r\n    <b-progress :value=\"value\" :max=\"max\" class=\"mb-3\"></b-progress>\r\n\r\n    <h5>Value label</h5>\r\n    <b-progress :value=\"value\" :max=\"max\" show-value class=\"mb-3\"></b-progress>\r\n\r\n    <h5>Progress label</h5>\r\n    <b-progress :value=\"value\" :max=\"max\" show-progress class=\"mb-3\"></b-progress>\r\n\r\n    <h5>Value label with precision</h5>\r\n    <b-progress :value=\"value\" :max=\"max\" :precision=\"2\" show-value class=\"mb-3\"></b-progress>\r\n\r\n    <h5>Progress label with precision</h5>\r\n    <b-progress :value=\"value\" :max=\"max\" :precision=\"2\" show-progress class=\"mb-3\"></b-progress>\r\n  </div>`,\r\n        js: `export default {\r\n    data() {\r\n      return {\r\n        value: 33.333333333,\r\n        max: 50\r\n      }\r\n    }\r\n  }`,\r\n        value: 33.333333333,\r\n        max: 50\r\n      },\r\n\r\n      code3: {\r\n        html:\r\n          \"<div>\\n\" +\r\n          \"    <h5>Custom label via default slot</h5>\\n\" +\r\n          '    <b-progress :max=\"max\" height=\"2rem\">\\n' +\r\n          '      <b-progress-bar :value=\"value\">\\n' +\r\n          \"        Progress: <strong>{{ value.toFixed(2) }} / {{ max }}</strong>\\n\" +\r\n          \"      </b-progress-bar>\\n\" +\r\n          \"    </b-progress>\\n\" +\r\n          \"\\n\" +\r\n          '    <h5 class=\"mt-3\">Custom label via property</h5>\\n' +\r\n          '    <b-progress :max=\"max\">\\n' +\r\n          '      <b-progress-bar :value=\"value\" :label=\"`${((value / max) * 100).toFixed(2)}%`\"></b-progress-bar>\\n' +\r\n          \"    </b-progress>\\n\" +\r\n          \"\\n\" +\r\n          '    <h5 class=\"mt-3\">Custom label via property (HTML support)</h5>\\n' +\r\n          '    <b-progress :max=\"max\">\\n' +\r\n          '      <b-progress-bar :value=\"value\" :label-html=\"`<del>${value}</del>`\"></b-progress-bar>\\n' +\r\n          \"    </b-progress>\\n\" +\r\n          \"  </div>\",\r\n        js: `export default {\r\n    data() {\r\n      return {\r\n        value: 33.333333333,\r\n        max: 50\r\n      }\r\n    }\r\n  }`,\r\n        value: 33.333333333,\r\n        max: 50\r\n      },\r\n\r\n      code4: {\r\n        html: `<div>\r\n    <h5>Default width</h5>\r\n    <b-progress :value=\"value\" class=\"mb-3\"></b-progress>\r\n\r\n    <h5>Custom widths</h5>\r\n    <b-progress :value=\"value\" class=\"w-75 mb-2\"></b-progress>\r\n    <b-progress :value=\"value\" class=\"w-50 mb-2\"></b-progress>\r\n    <b-progress :value=\"value\" class=\"w-25\"></b-progress>\r\n  </div>`,\r\n        js: `export default {\r\n    data() {\r\n      return {\r\n        value: 75\r\n      }\r\n    }\r\n  }`,\r\n        value: 75\r\n      },\r\n\r\n      code5: {\r\n        html: `<div>\r\n    <div v-for=\"bar in bars\" class=\"row mb-1\">\r\n      <div class=\"col-sm-2\">{{ bar.variant }}:</div>\r\n      <div class=\"col-sm-10 pt-1\">\r\n        <b-progress :value=\"bar.value\" :variant=\"bar.variant\" :key=\"bar.variant\"></b-progress>\r\n      </div>\r\n    </div>\r\n  </div>`,\r\n        js: `export default {\r\n    data() {\r\n      return {\r\n        bars: [\r\n          { variant: 'success', value: 75 },\r\n          { variant: 'info', value: 75 },\r\n          { variant: 'warning', value: 75 },\r\n          { variant: 'danger', value: 75 },\r\n          { variant: 'primary', value: 75 },\r\n          { variant: 'secondary', value: 75 },\r\n          { variant: 'dark', value: 75 }\r\n        ],\r\n        timer: null\r\n      }\r\n    },\r\n    mounted() {\r\n      this.timer = setInterval(() => {\r\n        this.bars.forEach(bar => (bar.value = 25 + Math.random() * 75))\r\n      }, 2000)\r\n    },\r\n    beforeDestroy() {\r\n      clearInterval(this.timer)\r\n      this.timer = null\r\n    }\r\n  }`,\r\n        bars: [\r\n          { variant: \"success\", value: 75 },\r\n          { variant: \"info\", value: 75 },\r\n          { variant: \"warning\", value: 75 },\r\n          { variant: \"danger\", value: 75 },\r\n          { variant: \"primary\", value: 75 },\r\n          { variant: \"secondary\", value: 75 },\r\n          { variant: \"dark\", value: 75 }\r\n        ],\r\n        timer: null\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    KTCodePreview\r\n  },\r\n  methods: {\r\n    randomValue() {\r\n      this.code1.value = Math.random() * this.code1.max;\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.code5.timer);\r\n    this.code5.timer = null;\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(SET_BREADCRUMB, [\r\n      { title: \"Vue Bootstrap\", route: \"alert\" },\r\n      { title: \"Progress\" }\r\n    ]);\r\n    this.code5.timer = setInterval(() => {\r\n      this.code5.bars.forEach(bar => (bar.value = 25 + Math.random() * 75));\r\n    }, 2000);\r\n  }\r\n};\r\n</script>\r\n"]}]}