{"remainingRequest":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/view/pages/auth/login_pages/Login-1.vue?vue&type=template&id=26f1151e&","dependencies":[{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/view/pages/auth/login_pages/Login-1.vue","mtime":1632576561619},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImQtZmxleCBmbGV4LWNvbHVtbiBmbGV4LXJvb3QiPgogIDxkaXYKICAgIGNsYXNzPSJsb2dpbiBsb2dpbi0xIGQtZmxleCBmbGV4LWNvbHVtbiBmbGV4LWxnLXJvdyBmbGV4LWNvbHVtbi1mbHVpZCBiZy13aGl0ZSIKICAgIDpjbGFzcz0iewogICAgICAnbG9naW4tc2lnbmluLW9uJzogdGhpcy5zdGF0ZSA9PSAnc2lnbmluJywKICAgICAgJ2xvZ2luLXNpZ251cC1vbic6IHRoaXMuc3RhdGUgPT0gJ3NpZ251cCcsCiAgICAgICdsb2dpbi1mb3Jnb3Qtb24nOiB0aGlzLnN0YXRlID09ICdmb3Jnb3QnCiAgICB9IgogICAgaWQ9Imt0X2xvZ2luIgogID4KICAgIDwhLS1iZWdpbjo6QXNpZGUtLT4KICAgIDxkaXYKICAgICAgY2xhc3M9ImxvZ2luLWFzaWRlIGQtZmxleCBmbGV4LWNvbHVtbiBmbGV4LXJvdy1hdXRvIgogICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0YyQzk4QTsiCiAgICA+CiAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBmbGV4LWNvbHVtbi1hdXRvIGZsZXgtY29sdW1uIHB0LWxnLTQwIHB0LTE1Ij4KICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0idGV4dC1jZW50ZXIgbWItMTAiPgogICAgICAgICAgPGltZwogICAgICAgICAgICBzcmM9Im1lZGlhL2xvZ29zL2xvZ28tbGV0dGVyLTEucG5nIgogICAgICAgICAgICBjbGFzcz0ibWF4LWgtNzBweCIKICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAvPgogICAgICAgIDwvYT4KICAgICAgICA8aDMKICAgICAgICAgIGNsYXNzPSJmb250LXdlaWdodC1ib2xkZXIgdGV4dC1jZW50ZXIgZm9udC1zaXplLWg0IGZvbnQtc2l6ZS1oMS1sZyIKICAgICAgICAgIHN0eWxlPSJjb2xvcjogIzk4NjkyMzsiCiAgICAgICAgPgogICAgICAgICAgRGlzY292ZXIgQW1hemluZyBNZXRyb25pYyA8YnIgLz53aXRoIGdyZWF0IGJ1aWxkIHRvb2xzCiAgICAgICAgPC9oMz4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYKICAgICAgICBjbGFzcz0iYXNpZGUtaW1nIGQtZmxleCBmbGV4LXJvdy1mbHVpZCBiZ2ktbm8tcmVwZWF0IGJnaS1wb3NpdGlvbi15LWJvdHRvbSBiZ2ktcG9zaXRpb24teC1jZW50ZXIiCiAgICAgICAgOnN0eWxlPSJ7IGJhY2tncm91bmRJbWFnZTogYHVybCgke2JhY2tncm91bmRJbWFnZX0pYCB9IgogICAgICA+PC9kaXY+CiAgICA8L2Rpdj4KICAgIDwhLS1iZWdpbjo6QXNpZGUtLT4KICAgIDwhLS1iZWdpbjo6Q29udGVudC0tPgogICAgPGRpdgogICAgICBjbGFzcz0ibG9naW4tY29udGVudCBmbGV4LXJvdy1mbHVpZCBkLWZsZXggZmxleC1jb2x1bW4ganVzdGlmeS1jb250ZW50LWNlbnRlciBwb3NpdGlvbi1yZWxhdGl2ZSBvdmVyZmxvdy1oaWRkZW4gcC03IG14LWF1dG8iCiAgICA+CiAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBmbGV4LWNvbHVtbi1mbHVpZCBmbGV4LWNlbnRlciI+CiAgICAgICAgPCEtLWJlZ2luOjpTaWduaW4tLT4KICAgICAgICA8ZGl2IGNsYXNzPSJsb2dpbi1mb3JtIGxvZ2luLXNpZ25pbiI+CiAgICAgICAgICA8Zm9ybQogICAgICAgICAgICBjbGFzcz0iZm9ybSIKICAgICAgICAgICAgbm92YWxpZGF0ZT0ibm92YWxpZGF0ZSIKICAgICAgICAgICAgaWQ9Imt0X2xvZ2luX3NpZ25pbl9mb3JtIgogICAgICAgICAgPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYi0xMyBwdC1sZy0wIHB0LTUiPgogICAgICAgICAgICAgIDxoMQogICAgICAgICAgICAgICAgc3R5bGU9ImZvbnQtc2l6ZTogMS41cmVtOyBjb2xvcjogYmx1ZTsiCiAgICAgICAgICAgICAgICBjbGFzcz0iZm9udC13ZWlnaHQtYm9sZGVyIHRleHQtZGFyayBmb250LXNpemUtaDQgZm9udC1zaXplLWgxLWxnIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIEFsZXggUmVudGFsIEFwcAogICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2gxPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LW11dGVkIGZvbnQtd2VpZ2h0LWJvbGQgZm9udC1zaXplLWg0IgogICAgICAgICAgICAgICAgPkxvZyBJbiB3aXRoIEdvb2dsZQogICAgICAgICAgICAgICAgPCEtLSA8YQogICAgICAgICAgICAgICAgICBpZD0ia3RfbG9naW5fc2lnbnVwIgogICAgICAgICAgICAgICAgICBjbGFzcz0idGV4dC1wcmltYXJ5IGZvbnQtd2VpZ2h0LWJvbGRlciIKICAgICAgICAgICAgICAgICAgQGNsaWNrPSJzaG93Rm9ybSgnc2lnbnVwJykiCiAgICAgICAgICAgICAgICAgID5DcmVhdGUgYW4gQWNjb3VudDwvYQogICAgICAgICAgICAgICAgPiAtLT4KICAgICAgICAgICAgICAgIDwvc3BhbgogICAgICAgICAgICAgID4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwhLS0gPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJmb250LXNpemUtaDYgZm9udC13ZWlnaHQtYm9sZGVyIHRleHQtZGFyayIKICAgICAgICAgICAgICAgID5FbWFpbDwvbGFiZWwKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgaWQ9ImV4YW1wbGUtaW5wdXQtZ3JvdXAtMSIKICAgICAgICAgICAgICAgIGxhYmVsPSIiCiAgICAgICAgICAgICAgICBsYWJlbC1mb3I9ImV4YW1wbGUtaW5wdXQtMSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCBmb3JtLWNvbnRyb2wtc29saWQgaC1hdXRvIHB5LTcgcHgtNiByb3VuZGVkLWxnIgogICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgICAgICBuYW1lPSJlbWFpbCIKICAgICAgICAgICAgICAgICAgcmVmPSJlbWFpbCIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZm9ybS5lbWFpbCIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PiAtLT4KICAgICAgICAgICAgPCEtLSA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4gbXQtbjUiPgogICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJmb250LXNpemUtaDYgZm9udC13ZWlnaHQtYm9sZGVyIHRleHQtZGFyayBwdC01IgogICAgICAgICAgICAgICAgICA+UGFzc3dvcmQ8L2xhYmVsCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICBjbGFzcz0idGV4dC1wcmltYXJ5IGZvbnQtc2l6ZS1oNiBmb250LXdlaWdodC1ib2xkZXIgdGV4dC1ob3Zlci1wcmltYXJ5IHB0LTUiCiAgICAgICAgICAgICAgICAgIGlkPSJrdF9sb2dpbl9mb3Jnb3QiCiAgICAgICAgICAgICAgICAgIEBjbGljaz0ic2hvd0Zvcm0oJ2ZvcmdvdCcpIgogICAgICAgICAgICAgICAgICA+Rm9yZ290IFBhc3N3b3JkID88L2EKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBpZD0iZXhhbXBsZS1pbnB1dC1ncm91cC0yIgogICAgICAgICAgICAgICAgbGFiZWw9IiIKICAgICAgICAgICAgICAgIGxhYmVsLWZvcj0iZXhhbXBsZS1pbnB1dC0yIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIGZvcm0tY29udHJvbC1zb2xpZCBoLWF1dG8gcHktNyBweC02IHJvdW5kZWQtbGciCiAgICAgICAgICAgICAgICAgIHR5cGU9InBhc3N3b3JkIgogICAgICAgICAgICAgICAgICBuYW1lPSJwYXNzd29yZCIKICAgICAgICAgICAgICAgICAgcmVmPSJwYXNzd29yZCIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZm9ybS5wYXNzd29yZCIKICAgICAgICAgICAgICAgICAgYXV0b2NvbXBsZXRlPSJvZmYiCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4gLS0+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InBiLWxnLTAgcGItNSI+CiAgICAgICAgICAgICAgPCEtLSA8YnV0dG9uCiAgICAgICAgICAgICAgICByZWY9Imt0X2xvZ2luX3NpZ25pbl9zdWJtaXQiCiAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGZvbnQtd2VpZ2h0LWJvbGRlciBmb250LXNpemUtaDYgcHgtMTUgcHktNCBteS0zIG1yLTMiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgU2lnbiBJbgogICAgICAgICAgICAgIDwvYnV0dG9uPiAtLT4KICAgICAgICAgICAKCiAgICAgICAgICAgICAgPCEtLSA8YnV0dG9uCiAgICAgICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1saWdodC1wcmltYXJ5IGZvbnQtd2VpZ2h0LWJvbGRlciBweC04IHB5LTQgbXktMyBmb250LXNpemUtbGciCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN2Zy1pY29uIHN2Zy1pY29uLW1kIj4KICAgICAgICAgICAgICAgICAgPGlubGluZS1zdmcKICAgICAgICAgICAgICAgICAgICBzcmM9Im1lZGlhL3N2Zy9zb2NpYWwtaWNvbnMvZ29vZ2xlLnN2ZyIKICAgICAgICAgICAgICAgICAgLz4gPC9zcGFuCiAgICAgICAgICAgICAgICA+U2lnbiBpbiB3aXRoIEdvb2dsZQogICAgICAgICAgICAgIDwvYnV0dG9uPiAtLT4KICAgICAgICAgICAgICAgPGItYnV0dG9uIHYtaWY9ImRpc2FibGVkQnRuIiB2YXJpYW50PSJwcmltYXJ5IiBkaXNhYmxlZD4KICAgICAgICAgICAgICAgICAgPGItc3Bpbm5lciBzbWFsbCA+PC9iLXNwaW5uZXI+CiAgICAgICAgICAgICAgICBMb2FkaW5nLi4uCiAgICAgICAgICAgICAgPC9iLWJ1dHRvbj4KICAgICAgICAgICAgICA8ZGl2IHYtaWY9IiFkaXNhYmxlZEJ0biIgQGNsaWNrPSJhY3RpdmF0ZUdvb2dsZSgpIiBjbGFzcz0iYnRuIGJ0bi1kYW5nZXIgZm9udC13ZWlnaHQtYm9sZGVyIj5Mb2dpbiB3aXRoIEdvb2dsZTwvZGl2PgogICAgICAgICAgICAgIDxHb29nbGVMb2dpbiAgICA6ZGlzYWJsZWQ9ImRpc2FibGVkQnRuIiA6cGFyYW1zPSJwYXJhbXMiIDpyZW5kZXJQYXJhbXM9InJlbmRlclBhcmFtcyIgOm9uU3VjY2Vzcz0ib25TdWNjZXNzIiA6b25GYWlsdXJlPSJvbkZhaWx1cmUiPjwvR29vZ2xlTG9naW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9mb3JtPgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS1lbmQ6OlNpZ25pbi0tPgogICAgICAgIDwhLS1iZWdpbjo6U2lnbnVwLS0+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9naW4tZm9ybSBsb2dpbi1zaWdudXAiPgogICAgICAgICAgPGZvcm0KICAgICAgICAgICAgY2xhc3M9ImZvcm0iCiAgICAgICAgICAgIG5vdmFsaWRhdGU9Im5vdmFsaWRhdGUiCiAgICAgICAgICAgIGlkPSJrdF9sb2dpbl9zaWdudXBfZm9ybSIKICAgICAgICAgID4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icGItMTMgcHQtbGctMCBwdC01Ij4KICAgICAgICAgICAgICA8aDMKICAgICAgICAgICAgICAgIGNsYXNzPSJmb250LXdlaWdodC1ib2xkZXIgdGV4dC1kYXJrIGZvbnQtc2l6ZS1oNCBmb250LXNpemUtaDEtbGciCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgU2lnbiBVcAogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtbXV0ZWQgZm9udC13ZWlnaHQtYm9sZCBmb250LXNpemUtaDQiPgogICAgICAgICAgICAgICAgRW50ZXIgeW91ciBkZXRhaWxzIHRvIGNyZWF0ZSB5b3VyIGFjY291bnQKICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wgZm9ybS1jb250cm9sLXNvbGlkIGgtYXV0byBweS03IHB4LTYgcm91bmRlZC1sZyBmb250LXNpemUtaDYiCiAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkZ1bGxuYW1lIgogICAgICAgICAgICAgICAgbmFtZT0iZnVsbG5hbWUiCiAgICAgICAgICAgICAgICByZWY9ImZ1bGxuYW1lIgogICAgICAgICAgICAgICAgYXV0b2NvbXBsZXRlPSJvZmYiCiAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCBmb3JtLWNvbnRyb2wtc29saWQgaC1hdXRvIHB5LTcgcHgtNiByb3VuZGVkLWxnIGZvbnQtc2l6ZS1oNiIKICAgICAgICAgICAgICAgIHR5cGU9ImVtYWlsIgogICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkVtYWlsIgogICAgICAgICAgICAgICAgbmFtZT0iZW1haWwiCiAgICAgICAgICAgICAgICByZWY9InJlbWFpbCIKICAgICAgICAgICAgICAgIGF1dG9jb21wbGV0ZT0ib2ZmIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wgZm9ybS1jb250cm9sLXNvbGlkIGgtYXV0byBweS03IHB4LTYgcm91bmRlZC1sZyBmb250LXNpemUtaDYiCiAgICAgICAgICAgICAgICB0eXBlPSJwYXNzd29yZCIKICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJQYXNzd29yZCIKICAgICAgICAgICAgICAgIG5hbWU9InBhc3N3b3JkIgogICAgICAgICAgICAgICAgcmVmPSJycGFzc3dvcmQiCiAgICAgICAgICAgICAgICBhdXRvY29tcGxldGU9Im9mZiIKICAgICAgICAgICAgICAvPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIGZvcm0tY29udHJvbC1zb2xpZCBoLWF1dG8gcHktNyBweC02IHJvdW5kZWQtbGcgZm9udC1zaXplLWg2IgogICAgICAgICAgICAgICAgdHlwZT0icGFzc3dvcmQiCiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iQ29uZmlybSBwYXNzd29yZCIKICAgICAgICAgICAgICAgIG5hbWU9ImNwYXNzd29yZCIKICAgICAgICAgICAgICAgIHJlZj0iY3Bhc3N3b3JkIgogICAgICAgICAgICAgICAgYXV0b2NvbXBsZXRlPSJvZmYiCiAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iY2hlY2tib3ggbWItMCI+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9ImFncmVlIiAvPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1yLTIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIEkgQWdyZWUgdGhlCiAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0ibWwtMiI+dGVybXMgYW5kIGNvbmRpdGlvbnM8L2E+LgogICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGQtZmxleCBmbGV4LXdyYXAgcGItbGctMCBwYi0zIj4KICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICByZWY9Imt0X2xvZ2luX3NpZ251cF9zdWJtaXQiCiAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGZvbnQtd2VpZ2h0LWJvbGRlciBmb250LXNpemUtaDYgcHgtOCBweS00IG15LTMgbXItNCIKICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDoxNTBweDsiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgU3VibWl0CiAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgICAgICAgaWQ9Imt0X2xvZ2luX3NpZ251cF9jYW5jZWwiCiAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1saWdodC1wcmltYXJ5IGZvbnQtd2VpZ2h0LWJvbGRlciBmb250LXNpemUtaDYgcHgtOCBweS00IG15LTMiCiAgICAgICAgICAgICAgICBAY2xpY2s9InNob3dGb3JtKCdzaWduaW4nKSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICBDYW5jZWwKICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLWVuZDo6U2lnbnVwLS0+CiAgICAgICAgPCEtLWJlZ2luOjpGb3Jnb3QtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJsb2dpbi1mb3JtIGxvZ2luLWZvcmdvdCI+CiAgICAgICAgICA8IS0tYmVnaW46OkZvcm0tLT4KICAgICAgICAgIDxmb3JtCiAgICAgICAgICAgIGNsYXNzPSJmb3JtIgogICAgICAgICAgICBub3ZhbGlkYXRlPSJub3ZhbGlkYXRlIgogICAgICAgICAgICBpZD0ia3RfbG9naW5fZm9yZ290X2Zvcm0iCiAgICAgICAgICAgIHJlZj0ia3RfbG9naW5fZm9yZ290X2Zvcm0iCiAgICAgICAgICA+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InBiLTEzIHB0LWxnLTAgcHQtNSI+CiAgICAgICAgICAgICAgPGgzCiAgICAgICAgICAgICAgICBjbGFzcz0iZm9udC13ZWlnaHQtYm9sZGVyIHRleHQtZGFyayBmb250LXNpemUtaDQgZm9udC1zaXplLWgxLWxnIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIEZvcmdvdHRlbiBQYXNzd29yZCA/CiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1tdXRlZCBmb250LXdlaWdodC1ib2xkIGZvbnQtc2l6ZS1oNCI+CiAgICAgICAgICAgICAgICBFbnRlciB5b3VyIGVtYWlsIHRvIHJlc2V0IHlvdXIgcGFzc3dvcmQKICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wgZm9ybS1jb250cm9sLXNvbGlkIGgtYXV0byBweS03IHB4LTYgcm91bmRlZC1sZyBmb250LXNpemUtaDYiCiAgICAgICAgICAgICAgICB0eXBlPSJlbWFpbCIKICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJFbWFpbCIKICAgICAgICAgICAgICAgIG5hbWU9ImVtYWlsIgogICAgICAgICAgICAgICAgYXV0b2NvbXBsZXRlPSJvZmYiCiAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgZC1mbGV4IGZsZXgtd3JhcCBwYi1sZy0wIj4KICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgICAgICBpZD0ia3RfbG9naW5fZm9yZ290X3N1Ym1pdCIKICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgZm9udC13ZWlnaHQtYm9sZGVyIGZvbnQtc2l6ZS1oNiBweC04IHB5LTQgbXktMyBtci00IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIFN1Ym1pdAogICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgICAgIGlkPSJrdF9sb2dpbl9mb3Jnb3RfY2FuY2VsIgogICAgICAgICAgICAgICAgY2xhc3M9ImJ0biBidG4tbGlnaHQtcHJpbWFyeSBmb250LXdlaWdodC1ib2xkZXIgZm9udC1zaXplLWg2IHB4LTggcHktNCBteS0zIgogICAgICAgICAgICAgICAgQGNsaWNrPSJzaG93Rm9ybSgnc2lnbmluJykiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgQ2FuY2VsCiAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9mb3JtPgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS1lbmQ6OkZvcmdvdC0tPgogICAgICA8L2Rpdj4KICAgICAgPCEtLWJlZ2luOjpDb250ZW50IGZvb3Rlci0tPgogICAgICA8ZGl2CiAgICAgICAgY2xhc3M9ImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtbGctc3RhcnQganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1lbmQgcHktNyBweS1sZy0wIgogICAgICA+CiAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9InRleHQtcHJpbWFyeSBmb250LXdlaWdodC1ib2xkZXIgZm9udC1zaXplLWg1IgogICAgICAgICAgPlRlcm1zPC9hCiAgICAgICAgPgogICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJ0ZXh0LXByaW1hcnkgbWwtMTAgZm9udC13ZWlnaHQtYm9sZGVyIGZvbnQtc2l6ZS1oNSIKICAgICAgICAgID5QbGFuczwvYQogICAgICAgID4KICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0idGV4dC1wcmltYXJ5IG1sLTEwIGZvbnQtd2VpZ2h0LWJvbGRlciBmb250LXNpemUtaDUiCiAgICAgICAgICA+Q29udGFjdCBVczwvYQogICAgICAgID4KICAgICAgPC9kaXY+CiAgICAgIDwhLS1lbmQ6OkNvbnRlbnQgZm9vdGVyLS0+CiAgICA8L2Rpdj4KICAgIDwhLS1lbmQ6OkNvbnRlbnQtLT4KICA8L2Rpdj4KPC9kaXY+Cg=="},null]}