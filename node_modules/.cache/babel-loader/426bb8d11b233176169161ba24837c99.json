{"remainingRequest":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/babel-loader/lib/index.js!/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/view/pages/vue-bootstrap/FormInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/view/pages/vue-bootstrap/FormInput.vue","mtime":1601367364000},{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBLVENvZGVQcmV2aWV3IGZyb20gIkAvdmlldy9jb250ZW50L0NvZGVQcmV2aWV3LnZ1ZSI7CmltcG9ydCB7IFNFVF9CUkVBRENSVU1CIH0gZnJvbSAiQC9jb3JlL3NlcnZpY2VzL3N0b3JlL2JyZWFkY3J1bWJzLm1vZHVsZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaHRtbDE6ICI8ZGl2PlxuICAgIDxiLWZvcm0taW5wdXQgdi1tb2RlbD1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkVudGVyIHlvdXIgbmFtZVwiPjwvYi1mb3JtLWlucHV0PlxuICAgIDxkaXYgY2xhc3M9XCJtdC0yXCI+VmFsdWU6IHt7IHRleHQgfX08L2Rpdj5cbiAgPC9kaXY+IiwKICAgICAganMxOiAiZXhwb3J0IGRlZmF1bHQge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0ZXh0OiAnJ1xuICAgICAgfVxuICAgIH1cbiAgfSIsCiAgICAgIHRleHQ6ICIiLAogICAgICBodG1sMjogIjxiLWNvbnRhaW5lciBmbHVpZD5cbiIgKyAnICAgIDxiLXJvdyBjbGFzcz0ibXktMSIgdi1mb3I9InR5cGUgaW4gdHlwZXMiIDprZXk9InR5cGUiPlxuJyArICcgICAgICA8Yi1jb2wgc209IjMiPlxuJyArICcgICAgICAgIDxsYWJlbCA6Zm9yPSJgdHlwZS0ke3R5cGV9YCI+VHlwZSB7eyB0eXBlIH19OjwvbGFiZWw+XG4nICsgIiAgICAgIDwvYi1jb2w+XG4iICsgJyAgICAgIDxiLWNvbCBzbT0iOSI+XG4nICsgJyAgICAgICAgPGItZm9ybS1pbnB1dCA6aWQ9ImB0eXBlLSR7dHlwZX1gIiA6dHlwZT0idHlwZSI+PC9iLWZvcm0taW5wdXQ+XG4nICsgIiAgICAgIDwvYi1jb2w+XG4iICsgIiAgICA8L2Itcm93PlxuIiArICIgIDwvYi1jb250YWluZXI+IiwKICAgICAganMyOiAiZXhwb3J0IGRlZmF1bHQge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlczogW1xuICAgICAgICAgICd0ZXh0JyxcbiAgICAgICAgICAncGFzc3dvcmQnLFxuICAgICAgICAgICdlbWFpbCcsXG4gICAgICAgICAgJ251bWJlcicsXG4gICAgICAgICAgJ3VybCcsXG4gICAgICAgICAgJ3RlbCcsXG4gICAgICAgICAgJ2RhdGUnLFxuICAgICAgICAgIGB0aW1lYCxcbiAgICAgICAgICAncmFuZ2UnLFxuICAgICAgICAgICdjb2xvcidcbiAgICAgICAgXVxuICAgICAgfVxuICAgIH1cbiAgfSIsCiAgICAgIHR5cGVzOiBbInRleHQiLCAicGFzc3dvcmQiLCAiZW1haWwiLCAibnVtYmVyIiwgInVybCIsICJ0ZWwiLCAiZGF0ZSIsICJ0aW1lIiwgInJhbmdlIiwgImNvbG9yIl0sCiAgICAgIGh0bWwzOiAiPGItY29udGFpbmVyIGZsdWlkPlxuICA8Yi1yb3cgY2xhc3M9XCJteS0xXCI+XG4gICAgPGItY29sIHNtPVwiMlwiPlxuICAgICAgPGxhYmVsIGZvcj1cImlucHV0LXNtYWxsXCI+U21hbGw6PC9sYWJlbD5cbiAgICA8L2ItY29sPlxuICAgIDxiLWNvbCBzbT1cIjEwXCI+XG4gICAgICA8Yi1mb3JtLWlucHV0IGlkPVwiaW5wdXQtc21hbGxcIiBzaXplPVwic21cIiBwbGFjZWhvbGRlcj1cIkVudGVyIHlvdXIgbmFtZVwiPjwvYi1mb3JtLWlucHV0PlxuICAgIDwvYi1jb2w+XG4gIDwvYi1yb3c+XG5cbiAgPGItcm93IGNsYXNzPVwibXktMVwiPlxuICAgIDxiLWNvbCBzbT1cIjJcIj5cbiAgICAgIDxsYWJlbCBmb3I9XCJpbnB1dC1kZWZhdWx0XCI+RGVmYXVsdDo8L2xhYmVsPlxuICAgIDwvYi1jb2w+XG4gICAgPGItY29sIHNtPVwiMTBcIj5cbiAgICAgIDxiLWZvcm0taW5wdXQgaWQ9XCJpbnB1dC1kZWZhdWx0XCIgcGxhY2Vob2xkZXI9XCJFbnRlciB5b3VyIG5hbWVcIj48L2ItZm9ybS1pbnB1dD5cbiAgICA8L2ItY29sPlxuICA8L2Itcm93PlxuXG4gIDxiLXJvdyBjbGFzcz1cIm15LTFcIj5cbiAgICA8Yi1jb2wgc209XCIyXCI+XG4gICAgICA8bGFiZWwgZm9yPVwiaW5wdXQtbGFyZ2VcIj5MYXJnZTo8L2xhYmVsPlxuICAgIDwvYi1jb2w+XG4gICAgPGItY29sIHNtPVwiMTBcIj5cbiAgICAgIDxiLWZvcm0taW5wdXQgaWQ9XCJpbnB1dC1sYXJnZVwiIHNpemU9XCJsZ1wiIHBsYWNlaG9sZGVyPVwiRW50ZXIgeW91ciBuYW1lXCI+PC9iLWZvcm0taW5wdXQ+XG4gICAgPC9iLWNvbD5cbiAgPC9iLXJvdz5cbjwvYi1jb250YWluZXI+IiwKICAgICAgaHRtbDQ6ICI8Yi1jb250YWluZXIgZmx1aWQ+XG4gIDxiLXJvdyBjbGFzcz1cIm15LTFcIj5cbiAgICA8Yi1jb2wgc209XCIzXCI+XG4gICAgICA8bGFiZWwgZm9yPVwiaW5wdXQtbm9uZVwiPk5vIFN0YXRlOjwvbGFiZWw+XG4gICAgPC9iLWNvbD5cbiAgICA8Yi1jb2wgc209XCI5XCI+XG4gICAgICA8Yi1mb3JtLWlucHV0IGlkPVwiaW5wdXQtbm9uZVwiIDpzdGF0ZT1cIm51bGxcIiBwbGFjZWhvbGRlcj1cIk5vIHZhbGlkYXRpb25cIj48L2ItZm9ybS1pbnB1dD5cbiAgICA8L2ItY29sPlxuICA8L2Itcm93PlxuXG4gIDxiLXJvdyBjbGFzcz1cIm15LTFcIj5cbiAgICA8Yi1jb2wgc209XCIzXCI+XG4gICAgICA8bGFiZWwgZm9yPVwiaW5wdXQtdmFsaWRcIj5WYWxpZCBTdGF0ZTo8L2xhYmVsPlxuICAgIDwvYi1jb2w+XG4gICAgPGItY29sIHNtPVwiOVwiPlxuICAgICAgPGItZm9ybS1pbnB1dCBpZD1cImlucHV0LXZhbGlkXCIgOnN0YXRlPVwidHJ1ZVwiIHBsYWNlaG9sZGVyPVwiVmFsaWQgaW5wdXRcIj48L2ItZm9ybS1pbnB1dD5cbiAgICA8L2ItY29sPlxuICA8L2Itcm93PlxuXG4gIDxiLXJvdyBjbGFzcz1cIm15LTFcIj5cbiAgICA8Yi1jb2wgc209XCIzXCI+XG4gICAgICA8bGFiZWwgZm9yPVwiaW5wdXQtaW52YWxpZFwiPkludmFsaWQgU3RhdGU6PC9sYWJlbD5cbiAgICA8L2ItY29sPlxuICAgIDxiLWNvbCBzbT1cIjlcIj5cbiAgICAgIDxiLWZvcm0taW5wdXQgaWQ9XCJpbnB1dC1pbnZhbGlkXCIgOnN0YXRlPVwiZmFsc2VcIiBwbGFjZWhvbGRlcj1cIkludmFsaWQgaW5wdXRcIj48L2ItZm9ybS1pbnB1dD5cbiAgICA8L2ItY29sPlxuICA8L2Itcm93PlxuPC9iLWNvbnRhaW5lcj4iLAogICAgICBodG1sNTogIjxkaXYgcm9sZT1cImdyb3VwXCI+XG4gICAgPGxhYmVsIGZvcj1cImlucHV0LWxpdmVcIj5OYW1lOjwvbGFiZWw+XG4gICAgPGItZm9ybS1pbnB1dFxuICAgICAgaWQ9XCJpbnB1dC1saXZlXCJcbiAgICAgIHYtbW9kZWw9XCJuYW1lXCJcbiAgICAgIDpzdGF0ZT1cIm5hbWVTdGF0ZVwiXG4gICAgICBhcmlhLWRlc2NyaWJlZGJ5PVwiaW5wdXQtbGl2ZS1oZWxwIGlucHV0LWxpdmUtZmVlZGJhY2tcIlxuICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciB5b3VyIG5hbWVcIlxuICAgICAgdHJpbVxuICAgID48L2ItZm9ybS1pbnB1dD5cblxuICAgIDwhLS0gVGhpcyB3aWxsIG9ubHkgYmUgc2hvd24gaWYgdGhlIHByZWNlZGluZyBpbnB1dCBoYXMgYW4gaW52YWxpZCBzdGF0ZSAtLT5cbiAgICA8Yi1mb3JtLWludmFsaWQtZmVlZGJhY2sgaWQ9XCJpbnB1dC1saXZlLWZlZWRiYWNrXCI+XG4gICAgICBFbnRlciBhdCBsZWFzdCAzIGxldHRlcnNcbiAgICA8L2ItZm9ybS1pbnZhbGlkLWZlZWRiYWNrPlxuXG4gICAgPCEtLSBUaGlzIGlzIGEgZm9ybSB0ZXh0IGJsb2NrIChmb3JtZXJseSBrbm93biBhcyBoZWxwIGJsb2NrKSAtLT5cbiAgICA8Yi1mb3JtLXRleHQgaWQ9XCJpbnB1dC1saXZlLWhlbHBcIj5Zb3VyIGZ1bGwgbmFtZS48L2ItZm9ybS10ZXh0PlxuICA8L2Rpdj4iLAogICAgICBqczU6ICJleHBvcnQgZGVmYXVsdCB7XG4gICAgY29tcHV0ZWQ6IHtcbiAgICAgIG5hbWVTdGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubmFtZS5sZW5ndGggPiAyID8gdHJ1ZSA6IGZhbHNlXG4gICAgICB9XG4gICAgfSxcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogJydcbiAgICAgIH1cbiAgICB9XG4gIH0iLAogICAgICBuYW1lOiAiIgogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEtUQ29kZVByZXZpZXc6IEtUQ29kZVByZXZpZXcKICB9LAogIGNvbXB1dGVkOiB7CiAgICBuYW1lU3RhdGU6IGZ1bmN0aW9uIG5hbWVTdGF0ZSgpIHsKICAgICAgcmV0dXJuIHRoaXMubmFtZS5sZW5ndGggPiAyOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKFNFVF9CUkVBRENSVU1CLCBbewogICAgICB0aXRsZTogIlZ1ZSBCb290c3RyYXAiLAogICAgICByb3V0ZTogImFsZXJ0IgogICAgfSwgewogICAgICB0aXRsZTogIkZvcm0gSW5wdXQiCiAgICB9XSk7CiAgfQp9Ow=="},{"version":3,"sources":["FormInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2NA,OAAA,aAAA,MAAA,gCAAA;AACA,SAAA,cAAA,QAAA,0CAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,wJADA;AAKA,MAAA,GAAA,yFALA;AAYA,MAAA,IAAA,EAAA,EAZA;AAcA,MAAA,KAAA,EACA,0BACA,8DADA,GAEA,wBAFA,GAGA,iEAHA,GAIA,kBAJA,GAKA,wBALA,GAMA,2EANA,GAOA,kBAPA,GAQA,gBARA,GASA,kBAxBA;AAyBA,MAAA,GAAA,wSAzBA;AA2CA,MAAA,KAAA,EAAA,CACA,MADA,EAEA,UAFA,EAGA,OAHA,EAIA,QAJA,EAKA,KALA,EAMA,KANA,EAOA,MAPA,UASA,OATA,EAUA,OAVA,CA3CA;AAwDA,MAAA,KAAA,izBAxDA;AAqFA,MAAA,KAAA,40BArFA;AAkHA,MAAA,KAAA,spBAlHA;AAqIA,MAAA,GAAA,oMArIA;AAiJA,MAAA,IAAA,EAAA;AAjJA,KAAA;AAmJA,GArJA;AAsJA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GAtJA;AAyJA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,IAAA,CAAA,MAAA,GAAA,CAAA;AACA;AAHA,GAzJA;AA8JA,EAAA,OA9JA,qBA8JA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA,CACA;AAAA,MAAA,KAAA,EAAA,eAAA;AAAA,MAAA,KAAA,EAAA;AAAA,KADA,EAEA;AAAA,MAAA,KAAA,EAAA;AAAA,KAFA,CAAA;AAIA;AAnKA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <b-alert\r\n      show\r\n      variant=\"light\"\r\n      class=\"alert alert-custom alert-white alert-shadow fade show gutter-b\"\r\n    >\r\n      <div class=\"alert-icon\">\r\n        <span class=\"svg-icon svg-icon-lg\">\r\n          <inline-svg src=\"media/svg/icons/Tools/Compass.svg\" />\r\n        </span>\r\n      </div>\r\n      <div class=\"alert-text\">\r\n        <b>Textual and Value inputs</b> Create various type inputs such as:\r\n        text, password, number, url, email, search, range, date and more.\r\n        <a\r\n          class=\"font-weight-bold\"\r\n          href=\"https://bootstrap-vue.js.org/docs/components/form-input\"\r\n          target=\"_blank\"\r\n        >\r\n          See documentation.\r\n        </a>\r\n      </div>\r\n    </b-alert>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'Textual and Value inputs'\">\r\n          <template v-slot:preview>\r\n            <div>\r\n              <b-form-input\r\n                v-model=\"text\"\r\n                placeholder=\"Enter your name\"\r\n              ></b-form-input>\r\n              <div class=\"mt-2\">Value: {{ text }}</div>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html1 }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ js1 }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Input type'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              <code>&lt;b-form-input&gt;</code> defaults to a text input, but\r\n              you can set the <code>type</code> prop to one of the supported\r\n              native browser HTML5 types: <code>text</code>,\r\n              <code>password</code>, <code>email</code>, <code>number</code>,\r\n              <code>url</code>, <code>tel</code>, <code>search</code>,\r\n              <code>date</code>, <code>datetime</code>,\r\n              <code>datetime-local</code>, <code>month</code>,\r\n              <code>week</code>, <code>time</code>, <code>range</code>, or\r\n              <code>color</code>.\r\n            </p>\r\n            <b-container fluid>\r\n              <b-row class=\"my-1\" v-for=\"type in types\" :key=\"type\">\r\n                <b-col sm=\"3\">\r\n                  <label :for=\"`type-${type}`\">Type {{ type }}:</label>\r\n                </b-col>\r\n                <b-col sm=\"9\">\r\n                  <b-form-input\r\n                    :id=\"`type-${type}`\"\r\n                    :type=\"type\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html2 }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ js2 }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'Control sizing'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Set heights using the <code>size</code> prop to <code>sm</code> or\r\n              <code>lg</code> for small or large respectively.\r\n            </p>\r\n            <b-container fluid>\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"2\">\r\n                  <label for=\"input-small\">Small:</label>\r\n                </b-col>\r\n                <b-col sm=\"10\">\r\n                  <b-form-input\r\n                    id=\"input-small\"\r\n                    size=\"sm\"\r\n                    placeholder=\"Enter your name\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"2\">\r\n                  <label for=\"input-default\">Default:</label>\r\n                </b-col>\r\n                <b-col sm=\"10\">\r\n                  <b-form-input\r\n                    id=\"input-default\"\r\n                    placeholder=\"Enter your name\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"2\">\r\n                  <label for=\"input-large\">Large:</label>\r\n                </b-col>\r\n                <b-col sm=\"10\">\r\n                  <b-form-input\r\n                    id=\"input-large\"\r\n                    size=\"lg\"\r\n                    placeholder=\"Enter your name\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html3 }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Contextual states'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Bootstrap includes validation styles for <code>valid</code> and\r\n              <code>invalid</code> states on most form controls.\r\n            </p>\r\n            <b-container fluid>\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"3\">\r\n                  <label for=\"input-none\">No State:</label>\r\n                </b-col>\r\n                <b-col sm=\"9\">\r\n                  <b-form-input\r\n                    id=\"input-none\"\r\n                    :state=\"null\"\r\n                    placeholder=\"No validation\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"3\">\r\n                  <label for=\"input-valid\">Valid State:</label>\r\n                </b-col>\r\n                <b-col sm=\"9\">\r\n                  <b-form-input\r\n                    id=\"input-valid\"\r\n                    :state=\"true\"\r\n                    placeholder=\"Valid input\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"3\">\r\n                  <label for=\"input-invalid\">Invalid State:</label>\r\n                </b-col>\r\n                <b-col sm=\"9\">\r\n                  <b-form-input\r\n                    id=\"input-invalid\"\r\n                    :state=\"false\"\r\n                    placeholder=\"Invalid input\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html4 }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Contextual states Live Example'\">\r\n          <template v-slot:preview>\r\n            <div role=\"group\">\r\n              <label for=\"input-live\">Name:</label>\r\n              <b-form-input\r\n                id=\"input-live\"\r\n                v-model=\"name\"\r\n                :state=\"nameState\"\r\n                aria-describedby=\"input-live-help input-live-feedback\"\r\n                placeholder=\"Enter your name\"\r\n                trim\r\n              ></b-form-input>\r\n\r\n              <!-- This will only be shown if the preceding input has an invalid state -->\r\n              <b-form-invalid-feedback id=\"input-live-feedback\">\r\n                Enter at least 3 letters\r\n              </b-form-invalid-feedback>\r\n\r\n              <!-- This is a form text block (formerly known as help block) -->\r\n              <b-form-text id=\"input-live-help\">Your full name.</b-form-text>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html5 }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ js5 }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport KTCodePreview from \"@/view/content/CodePreview.vue\";\r\nimport { SET_BREADCRUMB } from \"@/core/services/store/breadcrumbs.module\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      html1: `<div>\r\n    <b-form-input v-model=\"text\" placeholder=\"Enter your name\"></b-form-input>\r\n    <div class=\"mt-2\">Value: {{ text }}</div>\r\n  </div>`,\r\n      js1: `export default {\r\n    data() {\r\n      return {\r\n        text: ''\r\n      }\r\n    }\r\n  }`,\r\n      text: \"\",\r\n\r\n      html2:\r\n        \"<b-container fluid>\\n\" +\r\n        '    <b-row class=\"my-1\" v-for=\"type in types\" :key=\"type\">\\n' +\r\n        '      <b-col sm=\"3\">\\n' +\r\n        '        <label :for=\"`type-${type}`\">Type {{ type }}:</label>\\n' +\r\n        \"      </b-col>\\n\" +\r\n        '      <b-col sm=\"9\">\\n' +\r\n        '        <b-form-input :id=\"`type-${type}`\" :type=\"type\"></b-form-input>\\n' +\r\n        \"      </b-col>\\n\" +\r\n        \"    </b-row>\\n\" +\r\n        \"  </b-container>\",\r\n      js2: `export default {\r\n    data() {\r\n      return {\r\n        types: [\r\n          'text',\r\n          'password',\r\n          'email',\r\n          'number',\r\n          'url',\r\n          'tel',\r\n          'date',\r\n          \\`time\\`,\r\n          'range',\r\n          'color'\r\n        ]\r\n      }\r\n    }\r\n  }`,\r\n      types: [\r\n        \"text\",\r\n        \"password\",\r\n        \"email\",\r\n        \"number\",\r\n        \"url\",\r\n        \"tel\",\r\n        \"date\",\r\n        `time`,\r\n        \"range\",\r\n        \"color\"\r\n      ],\r\n\r\n      html3: `<b-container fluid>\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"2\">\r\n      <label for=\"input-small\">Small:</label>\r\n    </b-col>\r\n    <b-col sm=\"10\">\r\n      <b-form-input id=\"input-small\" size=\"sm\" placeholder=\"Enter your name\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"2\">\r\n      <label for=\"input-default\">Default:</label>\r\n    </b-col>\r\n    <b-col sm=\"10\">\r\n      <b-form-input id=\"input-default\" placeholder=\"Enter your name\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"2\">\r\n      <label for=\"input-large\">Large:</label>\r\n    </b-col>\r\n    <b-col sm=\"10\">\r\n      <b-form-input id=\"input-large\" size=\"lg\" placeholder=\"Enter your name\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n</b-container>`,\r\n\r\n      html4: `<b-container fluid>\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"3\">\r\n      <label for=\"input-none\">No State:</label>\r\n    </b-col>\r\n    <b-col sm=\"9\">\r\n      <b-form-input id=\"input-none\" :state=\"null\" placeholder=\"No validation\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"3\">\r\n      <label for=\"input-valid\">Valid State:</label>\r\n    </b-col>\r\n    <b-col sm=\"9\">\r\n      <b-form-input id=\"input-valid\" :state=\"true\" placeholder=\"Valid input\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"3\">\r\n      <label for=\"input-invalid\">Invalid State:</label>\r\n    </b-col>\r\n    <b-col sm=\"9\">\r\n      <b-form-input id=\"input-invalid\" :state=\"false\" placeholder=\"Invalid input\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n</b-container>`,\r\n\r\n      html5: `<div role=\"group\">\r\n    <label for=\"input-live\">Name:</label>\r\n    <b-form-input\r\n      id=\"input-live\"\r\n      v-model=\"name\"\r\n      :state=\"nameState\"\r\n      aria-describedby=\"input-live-help input-live-feedback\"\r\n      placeholder=\"Enter your name\"\r\n      trim\r\n    ></b-form-input>\r\n\r\n    <!-- This will only be shown if the preceding input has an invalid state -->\r\n    <b-form-invalid-feedback id=\"input-live-feedback\">\r\n      Enter at least 3 letters\r\n    </b-form-invalid-feedback>\r\n\r\n    <!-- This is a form text block (formerly known as help block) -->\r\n    <b-form-text id=\"input-live-help\">Your full name.</b-form-text>\r\n  </div>`,\r\n      js5: `export default {\r\n    computed: {\r\n      nameState() {\r\n        return this.name.length > 2 ? true : false\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        name: ''\r\n      }\r\n    }\r\n  }`,\r\n      name: \"\"\r\n    };\r\n  },\r\n  components: {\r\n    KTCodePreview\r\n  },\r\n  computed: {\r\n    nameState() {\r\n      return this.name.length > 2;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(SET_BREADCRUMB, [\r\n      { title: \"Vue Bootstrap\", route: \"alert\" },\r\n      { title: \"Form Input\" }\r\n    ]);\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/view/pages/vue-bootstrap"}]}