{"remainingRequest":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/babel-loader/lib/index.js!/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/eslint-loader/index.js??ref--13-0!/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/core/services/store/config.module.js","dependencies":[{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/core/services/store/config.module.js","mtime":1601367364000},{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvYmVsbGllY2VlL0Rvd25sb2Fkcy9tZXRyb25pYy1yZXNwb25zaXZlLWFkbWluLWRhc2hib2FyZC10ZW1wbGF0ZS9tZXRyb25pY192Ny4yLjkvdGhlbWUvdnVlL2RlbW81L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7Cgp2YXIgX2FjdGlvbnMsIF9tdXRhdGlvbnM7CgppbXBvcnQgb2JqZWN0UGF0aCBmcm9tICJvYmplY3QtcGF0aCI7CmltcG9ydCBtZXJnZSBmcm9tICJkZWVwbWVyZ2UiOwppbXBvcnQgY29uZmlnIGZyb20gIkAvY29yZS9jb25maWcvbGF5b3V0LmNvbmZpZy5qc29uIjsgLy8gYWN0aW9uIHR5cGVzCgpleHBvcnQgdmFyIFNFVF9MQVlPVVRfQ09ORklHID0gInNldExheW91dENvbmZpZyI7CmV4cG9ydCB2YXIgUkVTRVRfTEFZT1VUX0NPTkZJRyA9ICJyZXNldExheW91dENvbmZpZyI7CmV4cG9ydCB2YXIgT1ZFUlJJREVfTEFZT1VUX0NPTkZJRyA9ICJvdmVycmlkZUxheW91dENvbmZpZyI7CmV4cG9ydCB2YXIgT1ZFUlJJREVfUEFHRV9MQVlPVVRfQ09ORklHID0gIm92ZXJyaWRlUGFnZUxheW91dENvbmZpZyI7IC8vIG11dGF0aW9uIHR5cGVzCgpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHsKICAgIGNvbmZpZzogY29uZmlnLAogICAgaW5pdGlhbDogY29uZmlnCiAgfSwKICBnZXR0ZXJzOiB7CiAgICAvKioNCiAgICAgKiBHZXQgY29uZmlnIGZyb20gbGF5b3V0IGNvbmZpZw0KICAgICAqIEBwYXJhbSBzdGF0ZQ0KICAgICAqIEByZXR1cm5zIHtmdW5jdGlvbihwYXRoLCBkZWZhdWx0VmFsdWUpOiAqfQ0KICAgICAqLwogICAgbGF5b3V0Q29uZmlnOiBmdW5jdGlvbiBsYXlvdXRDb25maWcoc3RhdGUpIHsKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChwYXRoLCBkZWZhdWx0VmFsdWUpIHsKICAgICAgICByZXR1cm4gb2JqZWN0UGF0aC5nZXQoc3RhdGUuY29uZmlnLCBwYXRoLCBkZWZhdWx0VmFsdWUpOwogICAgICB9OwogICAgfQogIH0sCiAgYWN0aW9uczogKF9hY3Rpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgU0VUX0xBWU9VVF9DT05GSUcsIGZ1bmN0aW9uIChzdGF0ZSwgcGF5bG9hZCkgewogICAgc3RhdGUuY29tbWl0KFNFVF9MQVlPVVRfQ09ORklHLCBwYXlsb2FkKTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBSRVNFVF9MQVlPVVRfQ09ORklHLCBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHN0YXRlLmNvbW1pdChSRVNFVF9MQVlPVVRfQ09ORklHKTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBPVkVSUklERV9MQVlPVVRfQ09ORklHLCBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHN0YXRlLmNvbW1pdChPVkVSUklERV9MQVlPVVRfQ09ORklHKTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBPVkVSUklERV9QQUdFX0xBWU9VVF9DT05GSUcsIGZ1bmN0aW9uIChzdGF0ZSwgcGF5bG9hZCkgewogICAgc3RhdGUuY29tbWl0KE9WRVJSSURFX1BBR0VfTEFZT1VUX0NPTkZJRywgcGF5bG9hZCk7CiAgfSksIF9hY3Rpb25zKSwKICBtdXRhdGlvbnM6IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBTRVRfTEFZT1VUX0NPTkZJRywgZnVuY3Rpb24gKHN0YXRlLCBwYXlsb2FkKSB7CiAgICBzdGF0ZS5jb25maWcgPSBwYXlsb2FkOwogIH0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgUkVTRVRfTEFZT1VUX0NPTkZJRywgZnVuY3Rpb24gKHN0YXRlKSB7CiAgICBzdGF0ZS5jb25maWcgPSBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5pbml0aWFsKTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE9WRVJSSURFX0xBWU9VVF9DT05GSUcsIGZ1bmN0aW9uIChzdGF0ZSkgewogICAgc3RhdGUuY29uZmlnID0gc3RhdGUuaW5pdGlhbCA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLmluaXRpYWwsIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oImNvbmZpZyIpKSk7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBPVkVSUklERV9QQUdFX0xBWU9VVF9DT05GSUcsIGZ1bmN0aW9uIChzdGF0ZSwgcGF5bG9hZCkgewogICAgc3RhdGUuY29uZmlnID0gbWVyZ2Uoc3RhdGUuY29uZmlnLCBwYXlsb2FkKTsKICB9KSwgX211dGF0aW9ucykKfTs="},{"version":3,"sources":["/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/core/services/store/config.module.js"],"names":["objectPath","merge","config","SET_LAYOUT_CONFIG","RESET_LAYOUT_CONFIG","OVERRIDE_LAYOUT_CONFIG","OVERRIDE_PAGE_LAYOUT_CONFIG","state","initial","getters","layoutConfig","path","defaultValue","get","actions","payload","commit","mutations","Object","assign","JSON","parse","localStorage","getItem"],"mappings":";;;;AAAA,OAAOA,UAAP,MAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,MAAP,MAAmB,kCAAnB,C,CAEA;;AACA,OAAO,IAAMC,iBAAiB,GAAG,iBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAG,mBAA5B;AACP,OAAO,IAAMC,sBAAsB,GAAG,sBAA/B;AACP,OAAO,IAAMC,2BAA2B,GAAG,0BAApC,C,CAEP;;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLL,IAAAA,MAAM,EAAEA,MADH;AAELM,IAAAA,OAAO,EAAEN;AAFJ,GADM;AAKbO,EAAAA,OAAO,EAAE;AACP;AACJ;AACA;AACA;AACA;AACIC,IAAAA,YAAY,EAAE,sBAAAH,KAAK;AAAA,aAAI,UAACI,IAAD,EAAOC,YAAP,EAAwB;AAC7C,eAAOZ,UAAU,CAACa,GAAX,CAAeN,KAAK,CAACL,MAArB,EAA6BS,IAA7B,EAAmCC,YAAnC,CAAP;AACD,OAFkB;AAAA;AANZ,GALI;AAebE,EAAAA,OAAO,4CAMJX,iBANI,YAMeI,KANf,EAMsBQ,OANtB,EAM+B;AAClCR,IAAAA,KAAK,CAACS,MAAN,CAAab,iBAAb,EAAgCY,OAAhC;AACD,GARI,6BAcJX,mBAdI,YAciBG,KAdjB,EAcwB;AAC3BA,IAAAA,KAAK,CAACS,MAAN,CAAaZ,mBAAb;AACD,GAhBI,6BAsBJC,sBAtBI,YAsBoBE,KAtBpB,EAsB2B;AAC9BA,IAAAA,KAAK,CAACS,MAAN,CAAaX,sBAAb;AACD,GAxBI,6BA+BJC,2BA/BI,YA+ByBC,KA/BzB,EA+BgCQ,OA/BhC,EA+ByC;AAC5CR,IAAAA,KAAK,CAACS,MAAN,CAAaV,2BAAb,EAA0CS,OAA1C;AACD,GAjCI,YAfM;AAkDbE,EAAAA,SAAS,gDACNd,iBADM,YACaI,KADb,EACoBQ,OADpB,EAC6B;AAClCR,IAAAA,KAAK,CAACL,MAAN,GAAea,OAAf;AACD,GAHM,+BAINX,mBAJM,YAIeG,KAJf,EAIsB;AAC3BA,IAAAA,KAAK,CAACL,MAAN,GAAegB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,KAAK,CAACC,OAAxB,CAAf;AACD,GANM,+BAONH,sBAPM,YAOkBE,KAPlB,EAOyB;AAC9BA,IAAAA,KAAK,CAACL,MAAN,GAAeK,KAAK,CAACC,OAAN,GAAgBU,MAAM,CAACC,MAAP,CAC7B,EAD6B,EAE7BZ,KAAK,CAACC,OAFuB,EAG7BY,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAH6B,CAA/B;AAKD,GAbM,+BAcNjB,2BAdM,YAcuBC,KAdvB,EAc8BQ,OAd9B,EAcuC;AAC5CR,IAAAA,KAAK,CAACL,MAAN,GAAeD,KAAK,CAACM,KAAK,CAACL,MAAP,EAAea,OAAf,CAApB;AACD,GAhBM;AAlDI,CAAf","sourcesContent":["import objectPath from \"object-path\";\r\nimport merge from \"deepmerge\";\r\nimport config from \"@/core/config/layout.config.json\";\r\n\r\n// action types\r\nexport const SET_LAYOUT_CONFIG = \"setLayoutConfig\";\r\nexport const RESET_LAYOUT_CONFIG = \"resetLayoutConfig\";\r\nexport const OVERRIDE_LAYOUT_CONFIG = \"overrideLayoutConfig\";\r\nexport const OVERRIDE_PAGE_LAYOUT_CONFIG = \"overridePageLayoutConfig\";\r\n\r\n// mutation types\r\n\r\nexport default {\r\n  state: {\r\n    config: config,\r\n    initial: config\r\n  },\r\n  getters: {\r\n    /**\r\n     * Get config from layout config\r\n     * @param state\r\n     * @returns {function(path, defaultValue): *}\r\n     */\r\n    layoutConfig: state => (path, defaultValue) => {\r\n      return objectPath.get(state.config, path, defaultValue);\r\n    }\r\n  },\r\n  actions: {\r\n    /**\r\n     * Set and replace the whole config\r\n     * @param state\r\n     * @param payload\r\n     */\r\n    [SET_LAYOUT_CONFIG](state, payload) {\r\n      state.commit(SET_LAYOUT_CONFIG, payload);\r\n    },\r\n\r\n    /**\r\n     * Reset the config at the initial state\r\n     * @param state\r\n     */\r\n    [RESET_LAYOUT_CONFIG](state) {\r\n      state.commit(RESET_LAYOUT_CONFIG);\r\n    },\r\n\r\n    /**\r\n     * Reset the config using saved config in the cache by the layout builder\r\n     * @param state\r\n     */\r\n    [OVERRIDE_LAYOUT_CONFIG](state) {\r\n      state.commit(OVERRIDE_LAYOUT_CONFIG);\r\n    },\r\n\r\n    /**\r\n     * Override config by page level\r\n     * @param state\r\n     * @param payload\r\n     */\r\n    [OVERRIDE_PAGE_LAYOUT_CONFIG](state, payload) {\r\n      state.commit(OVERRIDE_PAGE_LAYOUT_CONFIG, payload);\r\n    }\r\n  },\r\n  mutations: {\r\n    [SET_LAYOUT_CONFIG](state, payload) {\r\n      state.config = payload;\r\n    },\r\n    [RESET_LAYOUT_CONFIG](state) {\r\n      state.config = Object.assign({}, state.initial);\r\n    },\r\n    [OVERRIDE_LAYOUT_CONFIG](state) {\r\n      state.config = state.initial = Object.assign(\r\n        {},\r\n        state.initial,\r\n        JSON.parse(localStorage.getItem(\"config\"))\r\n      );\r\n    },\r\n    [OVERRIDE_PAGE_LAYOUT_CONFIG](state, payload) {\r\n      state.config = merge(state.config, payload);\r\n    }\r\n  }\r\n};\r\n"]}]}