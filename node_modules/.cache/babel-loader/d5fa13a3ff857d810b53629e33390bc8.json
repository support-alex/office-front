{"remainingRequest":"C:\\Users\\ASUS\\Documents\\Alex\\office-front\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ASUS\\Documents\\Alex\\office-front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\Alex\\office-front\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\ASUS\\Documents\\Alex\\office-front\\src\\core\\services\\store\\auth.module.js","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\Alex\\office-front\\src\\core\\services\\store\\auth.module.js","mtime":1751224401125},{"path":"C:\\Users\\ASUS\\Documents\\Alex\\office-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670779062492},{"path":"C:\\Users\\ASUS\\Documents\\Alex\\office-front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1670779070259},{"path":"C:\\Users\\ASUS\\Documents\\Alex\\office-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1670779061577},{"path":"C:\\Users\\ASUS\\Documents\\Alex\\office-front\\node_modules\\eslint-loader\\index.js","mtime":1670779064638}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/ASUS/Documents/Alex/office-front/src/core/services/store/auth.module.js"],"names":["ApiService","JwtService","axios","store","VERIFY_AUTH","LOGIN","GOOGLE_LOGIN","LOGOUT","REGISTER","UPDATE_PASSWORD","PURGE_AUTH","SET_AUTH","SET_PASSWORD","SET_ERROR","UPDATE_TOKEN","UPDATE_AUTH","state","apiHeader","errors","user","isAuthenticated","getToken","auth","getters","currentUser","actions","param","commit","url","data","console","log","res","post","common","baseUrl","window","location","href","context","credentials","Promise","resolve","then","catch","response","payload","password","put","mutations","new_auth","tk","localStorage","getItem","headers","Authorization","SET_HEADER","error","item","userData","saveToken","accessToken","destroyToken","isRegistered","namespaced"],"mappings":"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","sourcesContent":["import ApiService from \"@/core/services/api.service\";\r\nimport JwtService from \"@/core/services/jwt.service\";\r\nimport axios from 'axios'\r\nimport store from \"@/core/services/store\";\r\n\r\n// action types\r\nexport const VERIFY_AUTH = \"verifyAuth\";\r\nexport const LOGIN = \"login\";\r\nexport const GOOGLE_LOGIN = \"google_login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const REGISTER = \"register\";\r\nexport const UPDATE_PASSWORD = \"updateUser\";\r\n\r\n// mutation types\r\nexport const PURGE_AUTH = \"logOut\";\r\nexport const SET_AUTH = \"SET_AUTH\";\r\nexport const SET_PASSWORD = \"setPassword\";\r\nexport const SET_ERROR = \"setError\";\r\n\r\n// export const SET_HEADER = \"setHeader\";\r\n\r\nexport const UPDATE_TOKEN = \"updateToken\";\r\n\r\nexport const UPDATE_AUTH = \"updateAuth\";\r\n\r\n\r\nconst state = {\r\n  apiHeader: null,\r\n  errors: null,\r\n  user: {},\r\n  isAuthenticated: !!JwtService.getToken(),\r\n  auth: false\r\n};\r\n\r\nconst getters = {\r\n  auth() {\r\n    return state.auth;\r\n  },\r\n  currentUser(state) {\r\n    return state.user;\r\n  },\r\n  isAuthenticated(state) {\r\n    return state.isAuthenticated;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n\r\n  async LOGIN({\r\n    commit\r\n  }, param) {\r\n\r\n    \r\n    let url = \"/office-api/auth/api_login\";\r\n    let data = param;\r\n\r\n    console.log(\"auth/login >> param\",data);\r\n    //  let form = param.formDetail\r\n\r\n    \r\n    let res = null;\r\n    \r\n    // store.commit(\"common/BUTTON_LOCK\");\r\n\r\n    try {\r\n      res = await axios.post(store.state.common.baseUrl + url, data);\r\n      \r\n      console.log(\"LOGIN >>> \", res.data)\r\n      // res = state.items;\r\n\r\n      \r\n      commit(\"SET_AUTH\", res.data);\r\n      \r\n      // console.log(\"state.apiHeade >> \",state.apiHeader);\r\n      window.location.href = \"/\";\r\n\r\n\r\n      // if (form.nextAction === \"redirect\") {\r\n      //   // redirectTo\r\n      //   // window.location.href = form.redirectTo;\r\n      //   router.push(form.redirectTo)\r\n      // }\r\n\r\n\r\n\r\n    } catch (err) {\r\n      //  Swal.fire({\r\n      //       icon: 'warning',\r\n      //       text: 'Username หรือ Password ไม่ถูกต้อง',\r\n      //  });\r\n      // store.commit(\"common/BUTTON_UNLOCK\");\r\n    }\r\n  },\r\n\r\n\r\n  // [LOGIN](context, credentials) {\r\n  //   return new Promise(resolve => {\r\n  //     ApiService.post(\"login\", credentials)\r\n  //       .then(({ data }) => {\r\n  //         // console.log(\"Here what post returns\", data);\r\n  //         context.commit(SET_AUTH, data);\r\n  //         resolve(data);\r\n  //       })\r\n  //       .catch(({ response }) => {\r\n  //         context.commit(SET_ERROR, response.data.errors);\r\n  //       });\r\n  //   });\r\n  // },\r\n\r\n  [GOOGLE_LOGIN](context, credentials) {\r\n    return new Promise(resolve => {\r\n      ApiService.post(\"http://localhost:8000/gauth/xxx\", credentials)\r\n        .then(({ data }) => {\r\n          // console.log(\"Here what post returns\", data);\r\n          context.commit(SET_AUTH, data);\r\n          resolve(data);\r\n        })\r\n        .catch(({ response }) => {\r\n          // console.log(\"ERROR >>> \",response);\r\n          // context.commit(SET_ERROR, response.data.errors);\r\n        });\r\n    });\r\n  },\r\n\r\n  LOGOUT(context) {\r\n    context.commit(PURGE_AUTH);\r\n    window.location.href = \"/login\";\r\n  },\r\n  [REGISTER](context, credentials) {\r\n    return new Promise(resolve => {\r\n      ApiService.post(\"login\", credentials)\r\n        .then(({ data }) => {\r\n          context.commit(SET_AUTH, data);\r\n          resolve(data);\r\n        })\r\n        .catch(({ response }) => {\r\n          context.commit(SET_ERROR, response.data.errors);\r\n        });\r\n    });\r\n  },\r\n  async [VERIFY_AUTH]() {\r\n    // let res = null;\r\n\r\n    // console.log(\"VERIFY_AUTH >>> \",store.auth.state.apiHeader)\r\n    var url = store.state.common.baseUrl + \"/office-api/auth/check-authentication\";\r\n    try {\r\n      await axios.post(url, {}, store.auth.state.apiHeader);\r\n      \r\n        // context.commit(SET_AUTH, res.data);\r\n    }\r\n    catch (err) {\r\n        // console.log(\"VERIFY_AUTH ERROR !!! >>> \", err.response)\r\n    }\r\n  },\r\n  // [VERIFY_AUTH](context) {\r\n  //   if (JwtService.getToken()) {\r\n  //     ApiService.setHeader();\r\n  //     ApiService.post(\"/office-api/auth/check-authentication\", {})\r\n  //       .then(({ data }) => {\r\n  //         context.commit(SET_AUTH, data);\r\n  //       })\r\n  //       .catch(({ response }) => {\r\n  //         context.commit(SET_ERROR, response.data.errors);\r\n  //         // this.$router.push({ name: \"login\" });\r\n  //       });\r\n  //   } else {\r\n  //     // context.commit(PURGE_AUTH);\r\n  //     // this.$router.push({ name: \"login\" });\r\n  //   }\r\n  // },\r\n  [UPDATE_PASSWORD](context, payload) {\r\n    const password = payload;\r\n\r\n    return ApiService.put(\"password\", password).then(({ data }) => {\r\n      context.commit(SET_PASSWORD, data);\r\n      return data;\r\n    });\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n\r\n  UPDATE_AUTH(state, new_auth) {\r\n    // console.log(\"mutations/UPDATE_AUTH \", new_auth);\r\n    state.auth = new_auth;\r\n  },\r\n  UPDATE_TOKEN(state) {\r\n\r\n    \r\n    var tk = localStorage.getItem(\"id_token\");\r\n    // var tkpaser = JSON.parse(tk);\r\n    state.apiHeader = {\r\n      headers: {\r\n        Authorization: \"bearer \" + tk,\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      }\r\n    };\r\n    console.log( state.apiHeader );\r\n  },\r\n\r\n  SET_HEADER(state, tk) {\r\n    state.apiHeader = {\r\n      headers: {\r\n        Authorization: \"bearer \" + tk\r\n      }\r\n    }\r\n    console.log(\"@@@@@@@@@@ SET_HEADER state.apiHeader >>> \",state.apiHeader);\r\n\r\n    // state.errors = error;\r\n  },\r\n\r\n  [SET_ERROR](state, error) {\r\n    state.errors = error;\r\n  },\r\n\r\n \r\n\r\n  // [SET_AUTH] FOR GOOGLE(state, user) {\r\n  // SET_AUTH(state, user) {\r\n  //   state.isAuthenticated = true;\r\n  //   state.user = user;\r\n  //   state.errors = {};\r\n  //   JwtService.saveToken(state.user.token);\r\n  //   // console.log(\"SET_AUTH >>> JwtService.saveToken\");\r\n  // },\r\n\r\n SET_AUTH(state, item) {\r\n\r\n    state.isAuthenticated = true;\r\n    state.userData = item.userData;\r\n    state.errors = {};\r\n    JwtService.saveToken(item.accessToken);\r\n    // localStorage.setItem(\"doaminId\", token);\r\n    state.apiHeader = {\r\n      headers: {\r\n        Authorization: \"bearer \" + item.accessToken\r\n      }\r\n    };\r\n    // console.log(\"SET_AUTH >>> JwtService.saveToken\");\r\n\r\n  },\r\n\r\n\r\n\r\n\r\n  [SET_PASSWORD](state, password) {\r\n    state.user.password = password;\r\n  },\r\n  // [PURGE_AUTH](state) FOR GOOGLE {\r\n  // PURGE_AUTH(state) {\r\n  //   state.apiHeader = {};\r\n  //   state.isAuthenticated = false;\r\n  //   state.user = {};\r\n  //   state.errors = {};\r\n  //   JwtService.destroyToken();\r\n  //   //  console.log(\"PURGE_AUTH >>> JwtService.destroyToken\");\r\n  // }\r\n\r\n   PURGE_AUTH(state) {\r\n\r\n    state.isAuthenticated = false;\r\n    state.user = {};\r\n    state.errors = {};\r\n    JwtService.destroyToken();\r\n    state.apiHeader = {};\r\n\r\n    //  console.log(\"PURGE_AUTH >>> JwtService.destroyToken\");\r\n  }\r\n};\r\n\r\nexport default {\r\n  isRegistered: false,\r\n  namespaced: true,\r\n  state,\r\n  actions,\r\n  mutations,\r\n  getters\r\n};\r\n"]}]}