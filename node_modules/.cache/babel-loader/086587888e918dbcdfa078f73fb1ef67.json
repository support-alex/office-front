{"remainingRequest":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/babel-loader/lib/index.js!/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/view/pages/vue-bootstrap/LayoutGridSystem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/view/pages/vue-bootstrap/LayoutGridSystem.vue","mtime":1601367364000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEtUQ29kZVByZXZpZXcgZnJvbSAiQC92aWV3L2NvbnRlbnQvQ29kZVByZXZpZXcudnVlIjsKaW1wb3J0IHsgU0VUX0JSRUFEQ1JVTUIgfSBmcm9tICJAL2NvcmUvc2VydmljZXMvc3RvcmUvYnJlYWRjcnVtYnMubW9kdWxlIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlMTogewogICAgICAgIGh0bWw6ICI8Yi1jb250YWluZXIgY2xhc3M9XCJidi1leGFtcGxlLXJvd1wiPlxuICA8Yi1yb3c+XG4gICAgPGItY29sPjEgb2YgMzwvYi1jb2w+XG4gICAgPGItY29sPjIgb2YgMzwvYi1jb2w+XG4gICAgPGItY29sPjMgb2YgMzwvYi1jb2w+XG4gIDwvYi1yb3c+XG48L2ItY29udGFpbmVyPiIKICAgICAgfSwKICAgICAgY29kZTI6IHsKICAgICAgICBodG1sOiAiPGItY29udGFpbmVyIGNsYXNzPVwiYnYtZXhhbXBsZS1yb3dcIj5cbiAgPGItcm93PlxuICAgIDxiLWNvbD4xIG9mIDI8L2ItY29sPlxuICAgIDxiLWNvbD4yIG9mIDI8L2ItY29sPlxuICA8L2Itcm93PlxuXG4gIDxiLXJvdz5cbiAgICA8Yi1jb2w+MSBvZiAzPC9iLWNvbD5cbiAgICA8Yi1jb2w+MiBvZiAzPC9iLWNvbD5cbiAgICA8Yi1jb2w+MyBvZiAzPC9iLWNvbD5cbiAgPC9iLXJvdz5cbjwvYi1jb250YWluZXI+IgogICAgICB9LAogICAgICBjb2RlMzogewogICAgICAgIGh0bWw6ICI8Yi1jb250YWluZXIgY2xhc3M9XCJidi1leGFtcGxlLXJvd1wiPlxuICA8Yi1yb3cgY2xhc3M9XCJ0ZXh0LWNlbnRlclwiPlxuICAgIDxiLWNvbD4xIG9mIDM8L2ItY29sPlxuICAgIDxiLWNvbCBjb2xzPVwiOFwiPjIgb2YgMyAod2lkZXIpPC9iLWNvbD5cbiAgICA8Yi1jb2w+MyBvZiAzPC9iLWNvbD5cbiAgPC9iLXJvdz5cblxuICA8Yi1yb3cgY2xhc3M9XCJ0ZXh0LWNlbnRlclwiPlxuICAgIDxiLWNvbD4xIG9mIDM8L2ItY29sPlxuICAgIDxiLWNvbCBjb2xzPVwiNVwiPjIgb2YgMyAod2lkZXIpPC9iLWNvbD5cbiAgICA8Yi1jb2w+MyBvZiAzPC9iLWNvbD5cbiAgPC9iLXJvdz5cbjwvYi1jb250YWluZXI+IgogICAgICB9LAogICAgICBjb2RlNDogewogICAgICAgIGh0bWw6ICI8Yi1jb250YWluZXIgY2xhc3M9XCJidi1leGFtcGxlLXJvd1wiPlxuICA8Yi1yb3cgY2xhc3M9XCJqdXN0aWZ5LWNvbnRlbnQtbWQtY2VudGVyXCI+XG4gICAgPGItY29sIGNvbCBsZz1cIjJcIj4xIG9mIDM8L2ItY29sPlxuICAgIDxiLWNvbCBjb2xzPVwiMTJcIiBtZD1cImF1dG9cIj5WYXJpYWJsZSB3aWR0aCBjb250ZW50PC9iLWNvbD5cbiAgICA8Yi1jb2wgY29sIGxnPVwiMlwiPjMgb2YgMzwvYi1jb2w+XG4gIDwvYi1yb3c+XG5cbiAgPGItcm93PlxuICAgIDxiLWNvbD4xIG9mIDM8L2ItY29sPlxuICAgIDxiLWNvbCBjb2xzPVwiMTJcIiBtZD1cImF1dG9cIj5WYXJpYWJsZSB3aWR0aCBjb250ZW50PC9iLWNvbD5cbiAgICA8Yi1jb2wgY29sIGxnPVwiMlwiPjMgb2YgMzwvYi1jb2w+XG4gIDwvYi1yb3c+XG48L2ItY29udGFpbmVyPiIKICAgICAgfSwKICAgICAgY29kZTU6IHsKICAgICAgICBodG1sOiAiPGItY29udGFpbmVyIGNsYXNzPVwiYnYtZXhhbXBsZS1yb3dcIj5cbiAgPGItcm93PlxuICAgIDxiLWNvbD5jb2w8L2ItY29sPlxuICAgIDxiLWNvbD5jb2w8L2ItY29sPlxuICAgIDxiLWNvbD5jb2w8L2ItY29sPlxuICAgIDxiLWNvbD5jb2w8L2ItY29sPlxuICA8L2Itcm93PlxuXG4gIDxiLXJvdz5cbiAgICA8Yi1jb2wgY29scz1cIjhcIj5jb2wtODwvYi1jb2w+XG4gICAgPGItY29sIGNvbHM9XCI0XCI+Y29sLTQ8L2ItY29sPlxuICA8L2Itcm93PlxuPC9iLWNvbnRhaW5lcj4iCiAgICAgIH0sCiAgICAgIGNvZGU2OiB7CiAgICAgICAgaHRtbDogIjxiLWNvbnRhaW5lciBjbGFzcz1cImJ2LWV4YW1wbGUtcm93XCI+XG4gIDxiLXJvdz5cbiAgICA8Yi1jb2wgc209XCI4XCI+Y29sLXNtLTg8L2ItY29sPlxuICAgIDxiLWNvbCBzbT1cIjRcIj5jb2wtc20tNDwvYi1jb2w+XG4gIDwvYi1yb3c+XG5cbiAgPGItcm93PlxuICAgIDxiLWNvbCBzbT5jb2wtc208L2ItY29sPlxuICAgIDxiLWNvbCBzbT5jb2wtc208L2ItY29sPlxuICAgIDxiLWNvbCBzbT5jb2wtc208L2ItY29sPlxuICA8L2Itcm93PlxuPC9iLWNvbnRhaW5lcj4iCiAgICAgIH0sCiAgICAgIGNvZGU3OiB7CiAgICAgICAgaHRtbDogIjxiLWNvbnRhaW5lciBjbGFzcz1cImJ2LWV4YW1wbGUtcm93XCI+XG4gIDwhLS0gU3RhY2sgdGhlIGNvbHVtbnMgb24gbW9iaWxlIGJ5IG1ha2luZyBvbmUgZnVsbC13aWR0aCBhbmQgdGhlIG90aGVyIGhhbGYtd2lkdGggLS0+XG4gIDxiLXJvdz5cbiAgICA8Yi1jb2wgY29scz1cIjEyXCIgbWQ9XCI4XCI+Y29scz1cIjEyXCIgbWQ9XCI4XCI8L2ItY29sPlxuICAgIDxiLWNvbCBjb2xzPVwiNlwiIG1kPVwiNFwiPmNvbHM9XCI2XCIgbWQ9XCI0XCI8L2ItY29sPlxuICA8L2Itcm93PlxuXG4gIDwhLS0gQ29sdW1ucyBzdGFydCBhdCA1MCUgd2lkZSBvbiBtb2JpbGUgYW5kIGJ1bXAgdXAgdG8gMzMuMyUgd2lkZSBvbiBkZXNrdG9wIC0tPlxuICA8Yi1yb3c+XG4gICAgPGItY29sIGNvbHM9XCI2XCIgbWQ9XCI0XCI+Y29scz1cIjZcIiBtZD1cIjRcIjwvYi1jb2w+XG4gICAgPGItY29sIGNvbHM9XCI2XCIgbWQ9XCI0XCI+Y29scz1cIjZcIiBtZD1cIjRcIjwvYi1jb2w+XG4gICAgPGItY29sIGNvbHM9XCI2XCIgbWQ9XCI0XCI+Y29scz1cIjZcIiBtZD1cIjRcIjwvYi1jb2w+XG4gIDwvYi1yb3c+XG5cbiAgPCEtLSBDb2x1bW5zIGFyZSBhbHdheXMgNTAlIHdpZGUsIG9uIG1vYmlsZSBhbmQgZGVza3RvcCAtLT5cbiAgPGItcm93PlxuICAgIDxiLWNvbCBjb2xzPVwiNlwiPmNvbHM9XCI2XCI8L2ItY29sPlxuICAgIDxiLWNvbCBjb2xzPVwiNlwiPmNvbHM9XCI2XCI8L2ItY29sPlxuICA8L2Itcm93PlxuPC9iLWNvbnRhaW5lcj4iCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBLVENvZGVQcmV2aWV3OiBLVENvZGVQcmV2aWV3CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goU0VUX0JSRUFEQ1JVTUIsIFt7CiAgICAgIHRpdGxlOiAiVnVlIEJvb3RzdHJhcCIsCiAgICAgIHJvdXRlOiAiYWxlcnQiCiAgICB9LCB7CiAgICAgIHRpdGxlOiAiTGF5b3V0IGFuZCBHcmlkIFN5c3RlbSIKICAgIH1dKTsKICB9Cn07"},{"version":3,"sources":["LayoutGridSystem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+OA,OAAA,aAAA,MAAA,gCAAA;AACA,SAAA,cAAA,QAAA,0CAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA,OADA;AAWA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA,OAXA;AA0BA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA,OA1BA;AA0CA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA,OA1CA;AA0DA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA,OA1DA;AA0EA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA,OA1EA;AAyFA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA;AAzFA,KAAA;AAgHA,GAlHA;AAmHA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GAnHA;AAsHA,EAAA,OAtHA,qBAsHA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA,CACA;AAAA,MAAA,KAAA,EAAA,eAAA;AAAA,MAAA,KAAA,EAAA;AAAA,KADA,EAEA;AAAA,MAAA,KAAA,EAAA;AAAA,KAFA,CAAA;AAIA;AA3HA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <b-alert\r\n      show\r\n      variant=\"light\"\r\n      class=\"alert alert-custom alert-white alert-shadow fade show gutter-b\"\r\n    >\r\n      <div class=\"alert-icon\">\r\n        <span class=\"svg-icon svg-icon-lg\">\r\n          <inline-svg src=\"media/svg/icons/Tools/Compass.svg\" />\r\n        </span>\r\n      </div>\r\n      <div class=\"alert-text\">\r\n        <b>Layout and Grid System</b> Use the powerful mobile-first flexbox grid\r\n        (via the &lt;b-container&gt;, &lt;b-row&gt;, &lt;b-form-row&gt; and\r\n        &lt;b-col&gt; components) to build layouts of all shapes and sizes\r\n        thanks to a twelve column system, five default responsive tiers, CSS\r\n        Sass variables and mixins, and dozens of predefined classes.\r\n        <a\r\n          class=\"font-weight-bold\"\r\n          href=\"https://bootstrap-vue.js.org/docs/components/layout\"\r\n          target=\"_blank\"\r\n        >\r\n          See documentation.\r\n        </a>\r\n      </div>\r\n    </b-alert>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'How it works'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Bootstrap's grid system uses a series of containers, rows, and\r\n              columns to layout and align content. It's built with\r\n              <a\r\n                href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox\"\r\n                target=\"_blank\"\r\n                >flexbox</a\r\n              >\r\n              and is fully responsive. Below is an example and an in-depth look\r\n              at how the grid comes together.\r\n            </p>\r\n            <b-container class=\"bv-example-row\">\r\n              <b-row>\r\n                <b-col>1 of 3</b-col>\r\n                <b-col>2 of 3</b-col>\r\n                <b-col>3 of 3</b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code1.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Equal-width columns'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              For example, here are two grid layouts that apply to every device\r\n              and viewport, from <code>xs</code> to <code>xl</code>. Add any\r\n              number of unit-less classes for each breakpoint you need and every\r\n              column will be the same width.\r\n            </p>\r\n            <b-container class=\"bv-example-row\">\r\n              <b-row>\r\n                <b-col>1 of 2</b-col>\r\n                <b-col>2 of 2</b-col>\r\n              </b-row>\r\n\r\n              <b-row>\r\n                <b-col>1 of 3</b-col>\r\n                <b-col>2 of 3</b-col>\r\n                <b-col>3 of 3</b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code2.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Setting one column width'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Auto-layout for flexbox grid columns also means you can set the\r\n              width of one column and have the sibling columns automatically\r\n              resize around it. You may use predefined grid classes (as shown\r\n              below), grid mixins, or inline widths. Note that the other columns\r\n              will resize no matter the width of the center column.\r\n            </p>\r\n            <b-container class=\"bv-example-row\">\r\n              <b-row class=\"text-center\">\r\n                <b-col>1 of 3</b-col>\r\n                <b-col cols=\"8\">2 of 3 (wider)</b-col>\r\n                <b-col>3 of 3</b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"text-center\">\r\n                <b-col>1 of 3</b-col>\r\n                <b-col cols=\"5\">2 of 3 (wider)</b-col>\r\n                <b-col>3 of 3</b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code3.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Variable width content'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Use <code>{breakpoint}=\"auto\"</code> props to size columns based\r\n              on the natural width of their content.\r\n            </p>\r\n            <b-container class=\"bv-example-row\">\r\n              <b-row class=\"justify-content-md-center\">\r\n                <b-col col lg=\"2\">1 of 3</b-col>\r\n                <b-col cols=\"12\" md=\"auto\">Variable width content</b-col>\r\n                <b-col col lg=\"2\">3 of 3</b-col>\r\n              </b-row>\r\n\r\n              <b-row>\r\n                <b-col>1 of 3</b-col>\r\n                <b-col cols=\"12\" md=\"auto\">Variable width content</b-col>\r\n                <b-col col lg=\"2\">3 of 3</b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code4.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'All breakpoints'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              For grids that are the same from the smallest of devices to the\r\n              largest, use the <code>col</code> and <code>cols=\"*\"</code> props.\r\n              Specify a number of <code>cols</code> when you need a particularly\r\n              sized column; otherwise, feel free to stick to\r\n              <code>col</code> (which is applied automatically if no\r\n              <code>cols</code> are specified).\r\n            </p>\r\n            <b-container class=\"bv-example-row\">\r\n              <b-row>\r\n                <b-col>col</b-col>\r\n                <b-col>col</b-col>\r\n                <b-col>col</b-col>\r\n                <b-col>col</b-col>\r\n              </b-row>\r\n\r\n              <b-row>\r\n                <b-col cols=\"8\">col-8</b-col>\r\n                <b-col cols=\"4\">col-4</b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code5.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Stacked to horizontal'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Using a single set of <code>sm=\"*\"</code> or\r\n              <code>sm</code> (boolean for equal width @sm) props, you can\r\n              create a basic grid system that starts out stacked on extra small\r\n              devices before becoming horizontal on desktop (medium) devices\r\n            </p>\r\n            <b-container class=\"bv-example-row\">\r\n              <b-row>\r\n                <b-col sm=\"8\">col-sm-8</b-col>\r\n                <b-col sm=\"4\">col-sm-4</b-col>\r\n              </b-row>\r\n\r\n              <b-row>\r\n                <b-col sm>col-sm</b-col>\r\n                <b-col sm>col-sm</b-col>\r\n                <b-col sm>col-sm</b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code6.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Mix and match'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Don't want your columns to simply stack in some grid tiers? Use a\r\n              combination of different props for each tier as needed. See the\r\n              example below for a better idea of how it all works.\r\n            </p>\r\n            <b-container class=\"bv-example-row\">\r\n              <!-- Stack the columns on mobile by making one full-width and the other half-width -->\r\n              <b-row>\r\n                <b-col cols=\"12\" md=\"8\">cols=\"12\" md=\"8\"</b-col>\r\n                <b-col cols=\"6\" md=\"4\">cols=\"6\" md=\"4\"</b-col>\r\n              </b-row>\r\n\r\n              <!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop -->\r\n              <b-row>\r\n                <b-col cols=\"6\" md=\"4\">cols=\"6\" md=\"4\"</b-col>\r\n                <b-col cols=\"6\" md=\"4\">cols=\"6\" md=\"4\"</b-col>\r\n                <b-col cols=\"6\" md=\"4\">cols=\"6\" md=\"4\"</b-col>\r\n              </b-row>\r\n\r\n              <!-- Columns are always 50% wide, on mobile and desktop -->\r\n              <b-row>\r\n                <b-col cols=\"6\">cols=\"6\"</b-col>\r\n                <b-col cols=\"6\">cols=\"6\"</b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code7.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.bv-example-row .row > .col:not(.header),\r\n.bv-example-row .row > [class^=\"col-\"] {\r\n  padding-top: 0.75rem;\r\n  padding-bottom: 0.75rem;\r\n  background-color: rgba(86, 61, 124, 0.15);\r\n  border: 1px solid rgba(86, 61, 124, 0.2);\r\n}\r\n</style>\r\n\r\n<script>\r\nimport KTCodePreview from \"@/view/content/CodePreview.vue\";\r\nimport { SET_BREADCRUMB } from \"@/core/services/store/breadcrumbs.module\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      code1: {\r\n        html: `<b-container class=\"bv-example-row\">\r\n  <b-row>\r\n    <b-col>1 of 3</b-col>\r\n    <b-col>2 of 3</b-col>\r\n    <b-col>3 of 3</b-col>\r\n  </b-row>\r\n</b-container>`\r\n      },\r\n\r\n      code2: {\r\n        html: `<b-container class=\"bv-example-row\">\r\n  <b-row>\r\n    <b-col>1 of 2</b-col>\r\n    <b-col>2 of 2</b-col>\r\n  </b-row>\r\n\r\n  <b-row>\r\n    <b-col>1 of 3</b-col>\r\n    <b-col>2 of 3</b-col>\r\n    <b-col>3 of 3</b-col>\r\n  </b-row>\r\n</b-container>`\r\n      },\r\n\r\n      code3: {\r\n        html: `<b-container class=\"bv-example-row\">\r\n  <b-row class=\"text-center\">\r\n    <b-col>1 of 3</b-col>\r\n    <b-col cols=\"8\">2 of 3 (wider)</b-col>\r\n    <b-col>3 of 3</b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"text-center\">\r\n    <b-col>1 of 3</b-col>\r\n    <b-col cols=\"5\">2 of 3 (wider)</b-col>\r\n    <b-col>3 of 3</b-col>\r\n  </b-row>\r\n</b-container>`\r\n      },\r\n\r\n      code4: {\r\n        html: `<b-container class=\"bv-example-row\">\r\n  <b-row class=\"justify-content-md-center\">\r\n    <b-col col lg=\"2\">1 of 3</b-col>\r\n    <b-col cols=\"12\" md=\"auto\">Variable width content</b-col>\r\n    <b-col col lg=\"2\">3 of 3</b-col>\r\n  </b-row>\r\n\r\n  <b-row>\r\n    <b-col>1 of 3</b-col>\r\n    <b-col cols=\"12\" md=\"auto\">Variable width content</b-col>\r\n    <b-col col lg=\"2\">3 of 3</b-col>\r\n  </b-row>\r\n</b-container>`\r\n      },\r\n\r\n      code5: {\r\n        html: `<b-container class=\"bv-example-row\">\r\n  <b-row>\r\n    <b-col>col</b-col>\r\n    <b-col>col</b-col>\r\n    <b-col>col</b-col>\r\n    <b-col>col</b-col>\r\n  </b-row>\r\n\r\n  <b-row>\r\n    <b-col cols=\"8\">col-8</b-col>\r\n    <b-col cols=\"4\">col-4</b-col>\r\n  </b-row>\r\n</b-container>`\r\n      },\r\n\r\n      code6: {\r\n        html: `<b-container class=\"bv-example-row\">\r\n  <b-row>\r\n    <b-col sm=\"8\">col-sm-8</b-col>\r\n    <b-col sm=\"4\">col-sm-4</b-col>\r\n  </b-row>\r\n\r\n  <b-row>\r\n    <b-col sm>col-sm</b-col>\r\n    <b-col sm>col-sm</b-col>\r\n    <b-col sm>col-sm</b-col>\r\n  </b-row>\r\n</b-container>`\r\n      },\r\n\r\n      code7: {\r\n        html: `<b-container class=\"bv-example-row\">\r\n  <!-- Stack the columns on mobile by making one full-width and the other half-width -->\r\n  <b-row>\r\n    <b-col cols=\"12\" md=\"8\">cols=\"12\" md=\"8\"</b-col>\r\n    <b-col cols=\"6\" md=\"4\">cols=\"6\" md=\"4\"</b-col>\r\n  </b-row>\r\n\r\n  <!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop -->\r\n  <b-row>\r\n    <b-col cols=\"6\" md=\"4\">cols=\"6\" md=\"4\"</b-col>\r\n    <b-col cols=\"6\" md=\"4\">cols=\"6\" md=\"4\"</b-col>\r\n    <b-col cols=\"6\" md=\"4\">cols=\"6\" md=\"4\"</b-col>\r\n  </b-row>\r\n\r\n  <!-- Columns are always 50% wide, on mobile and desktop -->\r\n  <b-row>\r\n    <b-col cols=\"6\">cols=\"6\"</b-col>\r\n    <b-col cols=\"6\">cols=\"6\"</b-col>\r\n  </b-row>\r\n</b-container>`\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    KTCodePreview\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(SET_BREADCRUMB, [\r\n      { title: \"Vue Bootstrap\", route: \"alert\" },\r\n      { title: \"Layout and Grid System\" }\r\n    ]);\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/view/pages/vue-bootstrap"}]}