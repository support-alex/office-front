{"remainingRequest":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/thread-loader/dist/cjs.js!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/babel-loader/lib/index.js!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/eslint-loader/index.js??ref--13-0!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/core/services/store/auth.module.js","dependencies":[{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/core/services/store/auth.module.js","mtime":1632988354594},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvYmVsbGllY2VlL0RvY3VtZW50cy8wMF9CaXNpbm5vY28vQmlzaW5ub2NvL29mZmljZS1mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2JlbGxpZWNlZS9Eb2N1bWVudHMvMDBfQmlzaW5ub2NvL0Jpc2lubm9jby9vZmZpY2UtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwoKdmFyIF9hY3Rpb25zLCBfbXV0YXRpb25zOwoKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IEFwaVNlcnZpY2UgZnJvbSAiQC9jb3JlL3NlcnZpY2VzL2FwaS5zZXJ2aWNlIjsKaW1wb3J0IEp3dFNlcnZpY2UgZnJvbSAiQC9jb3JlL3NlcnZpY2VzL2p3dC5zZXJ2aWNlIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHN0b3JlIGZyb20gIkAvY29yZS9zZXJ2aWNlcy9zdG9yZSI7IC8vIGFjdGlvbiB0eXBlcwoKZXhwb3J0IHZhciBWRVJJRllfQVVUSCA9ICJ2ZXJpZnlBdXRoIjsKZXhwb3J0IHZhciBMT0dJTiA9ICJsb2dpbiI7CmV4cG9ydCB2YXIgR09PR0xFX0xPR0lOID0gImdvb2dsZV9sb2dpbiI7CmV4cG9ydCB2YXIgTE9HT1VUID0gImxvZ291dCI7CmV4cG9ydCB2YXIgUkVHSVNURVIgPSAicmVnaXN0ZXIiOwpleHBvcnQgdmFyIFVQREFURV9QQVNTV09SRCA9ICJ1cGRhdGVVc2VyIjsgLy8gbXV0YXRpb24gdHlwZXMKCmV4cG9ydCB2YXIgUFVSR0VfQVVUSCA9ICJsb2dPdXQiOwpleHBvcnQgdmFyIFNFVF9BVVRIID0gInNldFVzZXIiOwpleHBvcnQgdmFyIFNFVF9QQVNTV09SRCA9ICJzZXRQYXNzd29yZCI7CmV4cG9ydCB2YXIgU0VUX0VSUk9SID0gInNldEVycm9yIjsKZXhwb3J0IHZhciBTRVRfSEVBREVSID0gInNldEhlYWRlciI7CmV4cG9ydCB2YXIgVVBEQVRFX1RPS0VOID0gInVwZGF0ZVRva2VuIjsKZXhwb3J0IHZhciBVUERBVEVfQVVUSCA9ICJ1cGRhdGVBdXRoIjsKdmFyIHN0YXRlID0gewogIGFwaUhlYWRlcjogbnVsbCwKICBlcnJvcnM6IG51bGwsCiAgdXNlcjoge30sCiAgaXNBdXRoZW50aWNhdGVkOiAhIUp3dFNlcnZpY2UuZ2V0VG9rZW4oKSwKICBhdXRoOiBmYWxzZQp9Owp2YXIgZ2V0dGVycyA9IHsKICBhdXRoOiBmdW5jdGlvbiBhdXRoKCkgewogICAgcmV0dXJuIHN0YXRlLmF1dGg7CiAgfSwKICBjdXJyZW50VXNlcjogZnVuY3Rpb24gY3VycmVudFVzZXIoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS51c2VyOwogIH0sCiAgaXNBdXRoZW50aWNhdGVkOiBmdW5jdGlvbiBpc0F1dGhlbnRpY2F0ZWQoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5pc0F1dGhlbnRpY2F0ZWQ7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIEdPT0dMRV9MT0dJTiwgZnVuY3Rpb24gKGNvbnRleHQsIGNyZWRlbnRpYWxzKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICBBcGlTZXJ2aWNlLnBvc3QoImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9nYXV0aC94eHgiLCBjcmVkZW50aWFscykudGhlbihmdW5jdGlvbiAoX3JlZikgewogICAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YTsKICAgICAgLy8gY29uc29sZS5sb2coIkhlcmUgd2hhdCBwb3N0IHJldHVybnMiLCBkYXRhKTsKICAgICAgLy8gY29udGV4dC5jb21taXQoU0VUX0FVVEgsIGRhdGEpOwogICAgICByZXNvbHZlKGRhdGEpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKF9yZWYyKSB7Ly8gY29uc29sZS5sb2coIkVSUk9SID4+PiAiLHJlc3BvbnNlKTsKICAgICAgLy8gY29udGV4dC5jb21taXQoU0VUX0VSUk9SLCByZXNwb25zZS5kYXRhLmVycm9ycyk7CgogICAgICB2YXIgcmVzcG9uc2UgPSBfcmVmMi5yZXNwb25zZTsKICAgIH0pOwogIH0pOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBMT0dPVVQsIGZ1bmN0aW9uIChjb250ZXh0KSB7CiAgY29udGV4dC5jb21taXQoUFVSR0VfQVVUSCk7CiAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAiL2xvZ2luIjsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgUkVHSVNURVIsIGZ1bmN0aW9uIChjb250ZXh0LCBjcmVkZW50aWFscykgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgQXBpU2VydmljZS5wb3N0KCJsb2dpbiIsIGNyZWRlbnRpYWxzKS50aGVuKGZ1bmN0aW9uIChfcmVmMykgewogICAgICB2YXIgZGF0YSA9IF9yZWYzLmRhdGE7CiAgICAgIGNvbnRleHQuY29tbWl0KFNFVF9BVVRILCBkYXRhKTsKICAgICAgcmVzb2x2ZShkYXRhKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChfcmVmNCkgewogICAgICB2YXIgcmVzcG9uc2UgPSBfcmVmNC5yZXNwb25zZTsKICAgICAgY29udGV4dC5jb21taXQoU0VUX0VSUk9SLCByZXNwb25zZS5kYXRhLmVycm9ycyk7CiAgICB9KTsKICB9KTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgVkVSSUZZX0FVVEgsIGZ1bmN0aW9uICgpIHsKICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgdmFyIHVybDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgLy8gbGV0IHJlcyA9IG51bGw7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJWRVJJRllfQVVUSCA+Pj4gIixzdG9yZS5hdXRoLnN0YXRlLmFwaUhlYWRlcikKICAgICAgICAgICAgdXJsID0gc3RvcmUuc3RhdGUuY29tbW9uLmJhc2VVcmwgKyAiL29mZmljZS1hcGkvYXV0aC9jaGVjay1hdXRoZW50aWNhdGlvbiI7CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QodXJsLCB7fSwgc3RvcmUuYXV0aC5zdGF0ZS5hcGlIZWFkZXIpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDY7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgNl1dKTsKICB9KSkoKTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgVVBEQVRFX1BBU1NXT1JELCBmdW5jdGlvbiAoY29udGV4dCwgcGF5bG9hZCkgewogIHZhciBwYXNzd29yZCA9IHBheWxvYWQ7CiAgcmV0dXJuIEFwaVNlcnZpY2UucHV0KCJwYXNzd29yZCIsIHBhc3N3b3JkKS50aGVuKGZ1bmN0aW9uIChfcmVmNSkgewogICAgdmFyIGRhdGEgPSBfcmVmNS5kYXRhOwogICAgY29udGV4dC5jb21taXQoU0VUX1BBU1NXT1JELCBkYXRhKTsKICAgIHJldHVybiBkYXRhOwogIH0pOwp9KSwgX2FjdGlvbnMpOwp2YXIgbXV0YXRpb25zID0gKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIFVQREFURV9BVVRILCBmdW5jdGlvbiAoc3RhdGUsIG5ld19hdXRoKSB7CiAgLy8gY29uc29sZS5sb2coIm11dGF0aW9ucy9VUERBVEVfQVVUSCAiLCBuZXdfYXV0aCk7CiAgc3RhdGUuYXV0aCA9IG5ld19hdXRoOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIFVQREFURV9UT0tFTiwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgdmFyIHRrID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oImlkX3Rva2VuIik7IC8vIHZhciB0a3Bhc2VyID0gSlNPTi5wYXJzZSh0ayk7CgogIHN0YXRlLmFwaUhlYWRlciA9IHsKICAgIGhlYWRlcnM6IHsKICAgICAgQXV0aG9yaXphdGlvbjogImJlYXJlciAiICsgdGssCiAgICAgICJBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4iOiAiKiIKICAgIH0KICB9OyAvLyBjb25zb2xlLmxvZyggc3RhdGUuYXBpSGVhZGVyICk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgU0VUX0hFQURFUiwgZnVuY3Rpb24gKHN0YXRlLCB0aykgewogIHN0YXRlLmFwaUhlYWRlciA9IHsKICAgIGhlYWRlcnM6IHsKICAgICAgQXV0aG9yaXphdGlvbjogImJlYXJlciAiICsgdGsKICAgIH0KICB9OyAvLyBzdGF0ZS5lcnJvcnMgPSBlcnJvcjsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBTRVRfRVJST1IsIGZ1bmN0aW9uIChzdGF0ZSwgZXJyb3IpIHsKICBzdGF0ZS5lcnJvcnMgPSBlcnJvcjsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBTRVRfQVVUSCwgZnVuY3Rpb24gKHN0YXRlLCB1c2VyKSB7CiAgc3RhdGUuaXNBdXRoZW50aWNhdGVkID0gdHJ1ZTsKICBzdGF0ZS51c2VyID0gdXNlcjsKICBzdGF0ZS5lcnJvcnMgPSB7fTsKICBKd3RTZXJ2aWNlLnNhdmVUb2tlbihzdGF0ZS51c2VyLnRva2VuKTsgLy8gY29uc29sZS5sb2coIlNFVF9BVVRIID4+PiBKd3RTZXJ2aWNlLnNhdmVUb2tlbiIpOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIFNFVF9QQVNTV09SRCwgZnVuY3Rpb24gKHN0YXRlLCBwYXNzd29yZCkgewogIHN0YXRlLnVzZXIucGFzc3dvcmQgPSBwYXNzd29yZDsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBQVVJHRV9BVVRILCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5pc0F1dGhlbnRpY2F0ZWQgPSBmYWxzZTsKICBzdGF0ZS51c2VyID0ge307CiAgc3RhdGUuZXJyb3JzID0ge307CiAgSnd0U2VydmljZS5kZXN0cm95VG9rZW4oKTsgLy8gIGNvbnNvbGUubG9nKCJQVVJHRV9BVVRIID4+PiBKd3RTZXJ2aWNlLmRlc3Ryb3lUb2tlbiIpOwp9KSwgX211dGF0aW9ucyk7CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBnZXR0ZXJzOiBnZXR0ZXJzCn07"},{"version":3,"sources":["/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/core/services/store/auth.module.js"],"names":["ApiService","JwtService","axios","store","VERIFY_AUTH","LOGIN","GOOGLE_LOGIN","LOGOUT","REGISTER","UPDATE_PASSWORD","PURGE_AUTH","SET_AUTH","SET_PASSWORD","SET_ERROR","SET_HEADER","UPDATE_TOKEN","UPDATE_AUTH","state","apiHeader","errors","user","isAuthenticated","getToken","auth","getters","currentUser","actions","context","credentials","Promise","resolve","post","then","data","catch","response","commit","window","location","href","url","common","baseUrl","payload","password","put","mutations","new_auth","tk","localStorage","getItem","headers","Authorization","error","saveToken","token","destroyToken"],"mappings":"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","sourcesContent":["import ApiService from \"@/core/services/api.service\";\r\nimport JwtService from \"@/core/services/jwt.service\";\r\nimport axios from 'axios'\r\nimport store from \"@/core/services/store\";\r\n\r\n// action types\r\nexport const VERIFY_AUTH = \"verifyAuth\";\r\nexport const LOGIN = \"login\";\r\nexport const GOOGLE_LOGIN = \"google_login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const REGISTER = \"register\";\r\nexport const UPDATE_PASSWORD = \"updateUser\";\r\n\r\n// mutation types\r\nexport const PURGE_AUTH = \"logOut\";\r\nexport const SET_AUTH = \"setUser\";\r\nexport const SET_PASSWORD = \"setPassword\";\r\nexport const SET_ERROR = \"setError\";\r\n\r\nexport const SET_HEADER = \"setHeader\";\r\n\r\nexport const UPDATE_TOKEN = \"updateToken\";\r\n\r\nexport const UPDATE_AUTH = \"updateAuth\";\r\n\r\n\r\nconst state = {\r\n  apiHeader: null,\r\n  errors: null,\r\n  user: {},\r\n  isAuthenticated: !!JwtService.getToken(),\r\n  auth: false\r\n};\r\n\r\nconst getters = {\r\n  auth() {\r\n    return state.auth;\r\n  },\r\n  currentUser(state) {\r\n    return state.user;\r\n  },\r\n  isAuthenticated(state) {\r\n    return state.isAuthenticated;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  // [LOGIN](context, credentials) {\r\n  //   return new Promise(resolve => {\r\n  //     ApiService.post(\"login\", credentials)\r\n  //       .then(({ data }) => {\r\n  //         // console.log(\"Here what post returns\", data);\r\n  //         context.commit(SET_AUTH, data);\r\n  //         resolve(data);\r\n  //       })\r\n  //       .catch(({ response }) => {\r\n  //         context.commit(SET_ERROR, response.data.errors);\r\n  //       });\r\n  //   });\r\n  // },\r\n\r\n  [GOOGLE_LOGIN](context, credentials) {\r\n    return new Promise(resolve => {\r\n      ApiService.post(\"http://localhost:8000/gauth/xxx\", credentials)\r\n        .then(({ data }) => {\r\n          // console.log(\"Here what post returns\", data);\r\n          // context.commit(SET_AUTH, data);\r\n          resolve(data);\r\n        })\r\n        .catch(({ response }) => {\r\n          // console.log(\"ERROR >>> \",response);\r\n          // context.commit(SET_ERROR, response.data.errors);\r\n        });\r\n    });\r\n  },\r\n\r\n  [LOGOUT](context) {\r\n    context.commit(PURGE_AUTH);\r\n    window.location.href = \"/login\";\r\n  },\r\n  [REGISTER](context, credentials) {\r\n    return new Promise(resolve => {\r\n      ApiService.post(\"login\", credentials)\r\n        .then(({ data }) => {\r\n          context.commit(SET_AUTH, data);\r\n          resolve(data);\r\n        })\r\n        .catch(({ response }) => {\r\n          context.commit(SET_ERROR, response.data.errors);\r\n        });\r\n    });\r\n  },\r\n  async [VERIFY_AUTH]() {\r\n    // let res = null;\r\n\r\n    // console.log(\"VERIFY_AUTH >>> \",store.auth.state.apiHeader)\r\n    var url = store.state.common.baseUrl + \"/office-api/auth/check-authentication\";\r\n    try {\r\n      await axios.post(url, {}, store.auth.state.apiHeader);\r\n      \r\n        // context.commit(SET_AUTH, res.data);\r\n    }\r\n    catch (err) {\r\n        // console.log(\"VERIFY_AUTH ERROR !!! >>> \", err.response)\r\n    }\r\n  },\r\n  // [VERIFY_AUTH](context) {\r\n  //   if (JwtService.getToken()) {\r\n  //     ApiService.setHeader();\r\n  //     ApiService.post(\"/office-api/auth/check-authentication\", {})\r\n  //       .then(({ data }) => {\r\n  //         context.commit(SET_AUTH, data);\r\n  //       })\r\n  //       .catch(({ response }) => {\r\n  //         context.commit(SET_ERROR, response.data.errors);\r\n  //         // this.$router.push({ name: \"login\" });\r\n  //       });\r\n  //   } else {\r\n  //     // context.commit(PURGE_AUTH);\r\n  //     // this.$router.push({ name: \"login\" });\r\n  //   }\r\n  // },\r\n  [UPDATE_PASSWORD](context, payload) {\r\n    const password = payload;\r\n\r\n    return ApiService.put(\"password\", password).then(({ data }) => {\r\n      context.commit(SET_PASSWORD, data);\r\n      return data;\r\n    });\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n\r\n  [UPDATE_AUTH](state, new_auth) {\r\n    // console.log(\"mutations/UPDATE_AUTH \", new_auth);\r\n    state.auth = new_auth;\r\n  },\r\n  [UPDATE_TOKEN](state) {\r\n\r\n    var tk = localStorage.getItem(\"id_token\");\r\n    // var tkpaser = JSON.parse(tk);\r\n    state.apiHeader = {\r\n      headers: {\r\n        Authorization: \"bearer \" + tk,\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      }\r\n    };\r\n    // console.log( state.apiHeader );\r\n  },\r\n  [SET_HEADER](state, tk) {\r\n    state.apiHeader = {\r\n      headers: {\r\n        Authorization: \"bearer \" + tk\r\n      }\r\n    }\r\n    // state.errors = error;\r\n  },\r\n  [SET_ERROR](state, error) {\r\n    state.errors = error;\r\n  },\r\n  [SET_AUTH](state, user) {\r\n    state.isAuthenticated = true;\r\n    state.user = user;\r\n    state.errors = {};\r\n    JwtService.saveToken(state.user.token);\r\n    // console.log(\"SET_AUTH >>> JwtService.saveToken\");\r\n  },\r\n  [SET_PASSWORD](state, password) {\r\n    state.user.password = password;\r\n  },\r\n  [PURGE_AUTH](state) {\r\n    state.isAuthenticated = false;\r\n    state.user = {};\r\n    state.errors = {};\r\n    JwtService.destroyToken();\r\n    //  console.log(\"PURGE_AUTH >>> JwtService.destroyToken\");\r\n  }\r\n};\r\n\r\nexport default {\r\n  state,\r\n  actions,\r\n  mutations,\r\n  getters\r\n};\r\n"]}]}