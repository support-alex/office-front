{"remainingRequest":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/babel-loader/lib/index.js!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/view/pages/plugins/treeselect/Treeselect13.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/view/pages/plugins/treeselect/Treeselect13.vue","mtime":1603364732000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJ0cmVlc2VsZWN0LTEzIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbXVsdGlwbGU6IHRydWUsCiAgICAgIHZhbHVlOiBudWxsLAogICAgICBvcHRpb25zOiBbMSwgMiwgM10ubWFwKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGlkOiBpLAogICAgICAgICAgbGFiZWw6ICJMYWJlbCAiLmNvbmNhdChpKSwKICAgICAgICAgIGN1c3RvbUxhYmVsOiAiQ3VzdG9tIExhYmVsICIuY29uY2F0KGkpCiAgICAgICAgfTsKICAgICAgfSkKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["Treeselect13.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA;AACA,UAAA,EAAA,EAAA,CADA;AAEA,UAAA,KAAA,kBAAA,CAAA,CAFA;AAGA,UAAA,WAAA,yBAAA,CAAA;AAHA,SAAA;AAAA,OAAA;AAHA,KAAA;AAAA;AAFA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <treeselect :options=\"options\" :value=\"value\" :multiple=\"multiple\">\r\n      <div slot=\"value-label\" slot-scope=\"{ node }\">\r\n        {{ node.raw.customLabel }}\r\n      </div>\r\n    </treeselect>\r\n    <p class=\"mt-5\">\r\n      <b-form-checkbox class=\"custom-control-inline\" v-model=\"multiple\"\r\n        >Multi-select</b-form-checkbox\r\n      >\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"treeselect-13\",\r\n  data: () => ({\r\n    multiple: true,\r\n    value: null,\r\n    options: [1, 2, 3].map(i => ({\r\n      id: i,\r\n      label: `Label ${i}`,\r\n      customLabel: `Custom Label ${i}`\r\n    }))\r\n  })\r\n};\r\n</script>\r\n"],"sourceRoot":"src/view/pages/plugins/treeselect"}]}