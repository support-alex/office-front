{"remainingRequest":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/babel-loader/lib/index.js!/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/eslint-loader/index.js??ref--13-0!/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/core/services/store/auth.module.js","dependencies":[{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/core/services/store/auth.module.js","mtime":1629557001075},{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvYmVsbGllY2VlL0Rvd25sb2Fkcy9tZXRyb25pYy1yZXNwb25zaXZlLWFkbWluLWRhc2hib2FyZC10ZW1wbGF0ZS9tZXRyb25pY192Ny4yLjkvdGhlbWUvdnVlL2RlbW81L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvYmVsbGllY2VlL0Rvd25sb2Fkcy9tZXRyb25pYy1yZXNwb25zaXZlLWFkbWluLWRhc2hib2FyZC10ZW1wbGF0ZS9tZXRyb25pY192Ny4yLjkvdGhlbWUvdnVlL2RlbW81L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKCnZhciBfYWN0aW9ucywgX211dGF0aW9uczsKCmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBBcGlTZXJ2aWNlIGZyb20gIkAvY29yZS9zZXJ2aWNlcy9hcGkuc2VydmljZSI7CmltcG9ydCBKd3RTZXJ2aWNlIGZyb20gIkAvY29yZS9zZXJ2aWNlcy9qd3Quc2VydmljZSI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBzdG9yZSBmcm9tICJAL2NvcmUvc2VydmljZXMvc3RvcmUiOyAvLyBhY3Rpb24gdHlwZXMKCmV4cG9ydCB2YXIgVkVSSUZZX0FVVEggPSAidmVyaWZ5QXV0aCI7CmV4cG9ydCB2YXIgTE9HSU4gPSAibG9naW4iOwpleHBvcnQgdmFyIEdPT0dMRV9MT0dJTiA9ICJnb29nbGVfbG9naW4iOwpleHBvcnQgdmFyIExPR09VVCA9ICJsb2dvdXQiOwpleHBvcnQgdmFyIFJFR0lTVEVSID0gInJlZ2lzdGVyIjsKZXhwb3J0IHZhciBVUERBVEVfUEFTU1dPUkQgPSAidXBkYXRlVXNlciI7IC8vIG11dGF0aW9uIHR5cGVzCgpleHBvcnQgdmFyIFBVUkdFX0FVVEggPSAibG9nT3V0IjsKZXhwb3J0IHZhciBTRVRfQVVUSCA9ICJzZXRVc2VyIjsKZXhwb3J0IHZhciBTRVRfUEFTU1dPUkQgPSAic2V0UGFzc3dvcmQiOwpleHBvcnQgdmFyIFNFVF9FUlJPUiA9ICJzZXRFcnJvciI7CmV4cG9ydCB2YXIgU0VUX0hFQURFUiA9ICJzZXRIZWFkZXIiOwpleHBvcnQgdmFyIFVQREFURV9UT0tFTiA9ICJ1cGRhdGVUb2tlbiI7CmV4cG9ydCB2YXIgVVBEQVRFX0FVVEggPSAidXBkYXRlQXV0aCI7CnZhciBzdGF0ZSA9IHsKICBhcGlIZWFkZXI6IG51bGwsCiAgZXJyb3JzOiBudWxsLAogIHVzZXI6IHt9LAogIGlzQXV0aGVudGljYXRlZDogISFKd3RTZXJ2aWNlLmdldFRva2VuKCksCiAgYXV0aDogZmFsc2UKfTsKdmFyIGdldHRlcnMgPSB7CiAgYXV0aDogZnVuY3Rpb24gYXV0aCgpIHsKICAgIHJldHVybiBzdGF0ZS5hdXRoOwogIH0sCiAgY3VycmVudFVzZXI6IGZ1bmN0aW9uIGN1cnJlbnRVc2VyKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudXNlcjsKICB9LAogIGlzQXV0aGVudGljYXRlZDogZnVuY3Rpb24gaXNBdXRoZW50aWNhdGVkKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuaXNBdXRoZW50aWNhdGVkOwogIH0KfTsKdmFyIGFjdGlvbnMgPSAoX2FjdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBHT09HTEVfTE9HSU4sIGZ1bmN0aW9uIChjb250ZXh0LCBjcmVkZW50aWFscykgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgQXBpU2VydmljZS5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjgwMDAvZ2F1dGgveHh4IiwgY3JlZGVudGlhbHMpLnRoZW4oZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgdmFyIGRhdGEgPSBfcmVmLmRhdGE7CiAgICAgIGNvbnNvbGUubG9nKCJIZXJlIHdoYXQgcG9zdCByZXR1cm5zIiwgZGF0YSk7IC8vIGNvbnRleHQuY29tbWl0KFNFVF9BVVRILCBkYXRhKTsKCiAgICAgIHJlc29sdmUoZGF0YSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoX3JlZjIpIHsKICAgICAgdmFyIHJlc3BvbnNlID0gX3JlZjIucmVzcG9uc2U7CiAgICAgIGNvbnNvbGUubG9nKCJFUlJPUiA+Pj4gIiwgcmVzcG9uc2UpOyAvLyBjb250ZXh0LmNvbW1pdChTRVRfRVJST1IsIHJlc3BvbnNlLmRhdGEuZXJyb3JzKTsKICAgIH0pOwogIH0pOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBMT0dPVVQsIGZ1bmN0aW9uIChjb250ZXh0KSB7CiAgY29udGV4dC5jb21taXQoUFVSR0VfQVVUSCk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIFJFR0lTVEVSLCBmdW5jdGlvbiAoY29udGV4dCwgY3JlZGVudGlhbHMpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgIEFwaVNlcnZpY2UucG9zdCgibG9naW4iLCBjcmVkZW50aWFscykudGhlbihmdW5jdGlvbiAoX3JlZjMpIHsKICAgICAgdmFyIGRhdGEgPSBfcmVmMy5kYXRhOwogICAgICBjb250ZXh0LmNvbW1pdChTRVRfQVVUSCwgZGF0YSk7CiAgICAgIHJlc29sdmUoZGF0YSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoX3JlZjQpIHsKICAgICAgdmFyIHJlc3BvbnNlID0gX3JlZjQucmVzcG9uc2U7CiAgICAgIGNvbnRleHQuY29tbWl0KFNFVF9FUlJPUiwgcmVzcG9uc2UuZGF0YS5lcnJvcnMpOwogICAgfSk7CiAgfSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIFZFUklGWV9BVVRILCBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgLy8gbGV0IHJlcyA9IG51bGw7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJWRVJJRllfQVVUSCA+Pj4gIiwgc3RvcmUuYXV0aC5zdGF0ZS5hcGlIZWFkZXIpOwogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCIvYXV0aC9jaGVjay1hdXRoZW50aWNhdGlvbiIsIHt9LCBzdG9yZS5hdXRoLnN0YXRlLmFwaUhlYWRlcik7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNjsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgY29uc29sZS5sb2coIlZFUklGWV9BVVRIIEVSUk9SICEhISA+Pj4gIiwgX2NvbnRleHQudDAucmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDZdXSk7CiAgfSkpKCk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIFVQREFURV9QQVNTV09SRCwgZnVuY3Rpb24gKGNvbnRleHQsIHBheWxvYWQpIHsKICB2YXIgcGFzc3dvcmQgPSBwYXlsb2FkOwogIHJldHVybiBBcGlTZXJ2aWNlLnB1dCgicGFzc3dvcmQiLCBwYXNzd29yZCkudGhlbihmdW5jdGlvbiAoX3JlZjUpIHsKICAgIHZhciBkYXRhID0gX3JlZjUuZGF0YTsKICAgIGNvbnRleHQuY29tbWl0KFNFVF9QQVNTV09SRCwgZGF0YSk7CiAgICByZXR1cm4gZGF0YTsKICB9KTsKfSksIF9hY3Rpb25zKTsKdmFyIG11dGF0aW9ucyA9IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBVUERBVEVfQVVUSCwgZnVuY3Rpb24gKHN0YXRlLCBuZXdfYXV0aCkgewogIC8vIGNvbnNvbGUubG9nKCJtdXRhdGlvbnMvVVBEQVRFX0FVVEggIiwgbmV3X2F1dGgpOwogIHN0YXRlLmF1dGggPSBuZXdfYXV0aDsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBVUERBVEVfVE9LRU4sIGZ1bmN0aW9uIChzdGF0ZSkgewogIGNvbnNvbGUubG9nKCJAQEBAQEAgVVBEQVRFIFRPS0VOIik7CiAgdmFyIHRrID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oImlkX3Rva2VuIik7IC8vIHZhciB0a3Bhc2VyID0gSlNPTi5wYXJzZSh0ayk7CgogIHN0YXRlLmFwaUhlYWRlciA9IHsKICAgIGhlYWRlcnM6IHsKICAgICAgQXV0aG9yaXphdGlvbjogImJlYXJlciAiICsgdGsKICAgIH0KICB9OwogIGNvbnNvbGUubG9nKHN0YXRlLmFwaUhlYWRlcik7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgU0VUX0hFQURFUiwgZnVuY3Rpb24gKHN0YXRlLCB0aykgewogIHN0YXRlLmFwaUhlYWRlciA9IHsKICAgIGhlYWRlcnM6IHsKICAgICAgQXV0aG9yaXphdGlvbjogImJlYXJlciAiICsgdGsKICAgIH0KICB9OyAvLyBzdGF0ZS5lcnJvcnMgPSBlcnJvcjsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBTRVRfRVJST1IsIGZ1bmN0aW9uIChzdGF0ZSwgZXJyb3IpIHsKICBzdGF0ZS5lcnJvcnMgPSBlcnJvcjsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBTRVRfQVVUSCwgZnVuY3Rpb24gKHN0YXRlLCB1c2VyKSB7CiAgc3RhdGUuaXNBdXRoZW50aWNhdGVkID0gdHJ1ZTsKICBzdGF0ZS51c2VyID0gdXNlcjsKICBzdGF0ZS5lcnJvcnMgPSB7fTsKICBKd3RTZXJ2aWNlLnNhdmVUb2tlbihzdGF0ZS51c2VyLnRva2VuKTsKICBjb25zb2xlLmxvZygiU0VUX0FVVEggPj4+IEp3dFNlcnZpY2Uuc2F2ZVRva2VuIik7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgU0VUX1BBU1NXT1JELCBmdW5jdGlvbiAoc3RhdGUsIHBhc3N3b3JkKSB7CiAgc3RhdGUudXNlci5wYXNzd29yZCA9IHBhc3N3b3JkOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIFBVUkdFX0FVVEgsIGZ1bmN0aW9uIChzdGF0ZSkgewogIHN0YXRlLmlzQXV0aGVudGljYXRlZCA9IGZhbHNlOwogIHN0YXRlLnVzZXIgPSB7fTsKICBzdGF0ZS5lcnJvcnMgPSB7fTsKICBKd3RTZXJ2aWNlLmRlc3Ryb3lUb2tlbigpOwogIGNvbnNvbGUubG9nKCJQVVJHRV9BVVRIID4+PiBKd3RTZXJ2aWNlLmRlc3Ryb3lUb2tlbiIpOwp9KSwgX211dGF0aW9ucyk7CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBnZXR0ZXJzOiBnZXR0ZXJzCn07"},{"version":3,"sources":["/Users/belliecee/Downloads/metronic-responsive-admin-dashboard-template/metronic_v7.2.9/theme/vue/demo5/src/core/services/store/auth.module.js"],"names":["ApiService","JwtService","axios","store","VERIFY_AUTH","LOGIN","GOOGLE_LOGIN","LOGOUT","REGISTER","UPDATE_PASSWORD","PURGE_AUTH","SET_AUTH","SET_PASSWORD","SET_ERROR","SET_HEADER","UPDATE_TOKEN","UPDATE_AUTH","state","apiHeader","errors","user","isAuthenticated","getToken","auth","getters","currentUser","actions","context","credentials","Promise","resolve","post","then","data","console","log","catch","response","commit","payload","password","put","mutations","new_auth","tk","localStorage","getItem","headers","Authorization","error","saveToken","token","destroyToken"],"mappings":"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","sourcesContent":["import ApiService from \"@/core/services/api.service\";\r\nimport JwtService from \"@/core/services/jwt.service\";\r\nimport axios from 'axios'\r\nimport store from \"@/core/services/store\";\r\n\r\n// action types\r\nexport const VERIFY_AUTH = \"verifyAuth\";\r\nexport const LOGIN = \"login\";\r\nexport const GOOGLE_LOGIN = \"google_login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const REGISTER = \"register\";\r\nexport const UPDATE_PASSWORD = \"updateUser\";\r\n\r\n// mutation types\r\nexport const PURGE_AUTH = \"logOut\";\r\nexport const SET_AUTH = \"setUser\";\r\nexport const SET_PASSWORD = \"setPassword\";\r\nexport const SET_ERROR = \"setError\";\r\n\r\nexport const SET_HEADER = \"setHeader\";\r\n\r\nexport const UPDATE_TOKEN = \"updateToken\";\r\n\r\nexport const UPDATE_AUTH = \"updateAuth\";\r\n\r\n\r\nconst state = {\r\n  apiHeader: null,\r\n  errors: null,\r\n  user: {},\r\n  isAuthenticated: !!JwtService.getToken(),\r\n  auth: false\r\n};\r\n\r\nconst getters = {\r\n  auth() {\r\n    return state.auth;\r\n  },\r\n  currentUser(state) {\r\n    return state.user;\r\n  },\r\n  isAuthenticated(state) {\r\n    return state.isAuthenticated;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  // [LOGIN](context, credentials) {\r\n  //   return new Promise(resolve => {\r\n  //     ApiService.post(\"login\", credentials)\r\n  //       .then(({ data }) => {\r\n  //         // console.log(\"Here what post returns\", data);\r\n  //         context.commit(SET_AUTH, data);\r\n  //         resolve(data);\r\n  //       })\r\n  //       .catch(({ response }) => {\r\n  //         context.commit(SET_ERROR, response.data.errors);\r\n  //       });\r\n  //   });\r\n  // },\r\n\r\n  [GOOGLE_LOGIN](context, credentials) {\r\n    return new Promise(resolve => {\r\n      ApiService.post(\"http://localhost:8000/gauth/xxx\", credentials)\r\n        .then(({ data }) => {\r\n          console.log(\"Here what post returns\", data);\r\n          // context.commit(SET_AUTH, data);\r\n          resolve(data);\r\n        })\r\n        .catch(({ response }) => {\r\n          console.log(\"ERROR >>> \",response);\r\n          // context.commit(SET_ERROR, response.data.errors);\r\n        });\r\n    });\r\n  },\r\n\r\n  [LOGOUT](context) {\r\n    context.commit(PURGE_AUTH);\r\n  },\r\n  [REGISTER](context, credentials) {\r\n    return new Promise(resolve => {\r\n      ApiService.post(\"login\", credentials)\r\n        .then(({ data }) => {\r\n          context.commit(SET_AUTH, data);\r\n          resolve(data);\r\n        })\r\n        .catch(({ response }) => {\r\n          context.commit(SET_ERROR, response.data.errors);\r\n        });\r\n    });\r\n  },\r\n  async [VERIFY_AUTH]() {\r\n    // let res = null;\r\n\r\n    console.log(\"VERIFY_AUTH >>> \",store.auth.state.apiHeader)\r\n    try {\r\n      await axios.post(\"/auth/check-authentication\", {}, store.auth.state.apiHeader);\r\n      \r\n        // context.commit(SET_AUTH, res.data);\r\n    }\r\n    catch (err) {\r\n        console.log(\"VERIFY_AUTH ERROR !!! >>> \", err.response)\r\n    }\r\n  },\r\n  // [VERIFY_AUTH](context) {\r\n  //   if (JwtService.getToken()) {\r\n  //     ApiService.setHeader();\r\n  //     ApiService.post(\"/auth/check-authentication\", {})\r\n  //       .then(({ data }) => {\r\n  //         context.commit(SET_AUTH, data);\r\n  //       })\r\n  //       .catch(({ response }) => {\r\n  //         context.commit(SET_ERROR, response.data.errors);\r\n  //         // this.$router.push({ name: \"login\" });\r\n  //       });\r\n  //   } else {\r\n  //     // context.commit(PURGE_AUTH);\r\n  //     // this.$router.push({ name: \"login\" });\r\n  //   }\r\n  // },\r\n  [UPDATE_PASSWORD](context, payload) {\r\n    const password = payload;\r\n\r\n    return ApiService.put(\"password\", password).then(({ data }) => {\r\n      context.commit(SET_PASSWORD, data);\r\n      return data;\r\n    });\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n\r\n  [UPDATE_AUTH](state, new_auth) {\r\n    // console.log(\"mutations/UPDATE_AUTH \", new_auth);\r\n    state.auth = new_auth;\r\n  },\r\n  [UPDATE_TOKEN](state) {\r\n\r\n    console.log(\"@@@@@@ UPDATE TOKEN\");\r\n    var tk = localStorage.getItem(\"id_token\");\r\n    // var tkpaser = JSON.parse(tk);\r\n    state.apiHeader = {\r\n      headers: {\r\n        Authorization: \"bearer \" + tk\r\n      }\r\n    };\r\n    console.log( state.apiHeader );\r\n  },\r\n  [SET_HEADER](state, tk) {\r\n    state.apiHeader = {\r\n      headers: {\r\n        Authorization: \"bearer \" + tk\r\n      }\r\n    }\r\n    // state.errors = error;\r\n  },\r\n  [SET_ERROR](state, error) {\r\n    state.errors = error;\r\n  },\r\n  [SET_AUTH](state, user) {\r\n    state.isAuthenticated = true;\r\n    state.user = user;\r\n    state.errors = {};\r\n    JwtService.saveToken(state.user.token);\r\n    console.log(\"SET_AUTH >>> JwtService.saveToken\");\r\n  },\r\n  [SET_PASSWORD](state, password) {\r\n    state.user.password = password;\r\n  },\r\n  [PURGE_AUTH](state) {\r\n    state.isAuthenticated = false;\r\n    state.user = {};\r\n    state.errors = {};\r\n    JwtService.destroyToken();\r\n     console.log(\"PURGE_AUTH >>> JwtService.destroyToken\");\r\n  }\r\n};\r\n\r\nexport default {\r\n  state,\r\n  actions,\r\n  mutations,\r\n  getters\r\n};\r\n"]}]}