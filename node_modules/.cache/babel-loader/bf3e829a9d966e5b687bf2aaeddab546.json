{"remainingRequest":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/thread-loader/dist/cjs.js!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/babel-loader/lib/index.js!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/view/pages/vuetify/forms/FileInputs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/src/view/pages/vuetify/forms/FileInputs.vue","mtime":1601367364000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/belliecee/Documents/00_Bisinnoco/Bisinnoco/office-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEtUQ29kZVByZXZpZXcgZnJvbSAiQC92aWV3L2NvbnRlbnQvQ29kZVByZXZpZXcudnVlIjsKaW1wb3J0IHsgU0VUX0JSRUFEQ1JVTUIgfSBmcm9tICJAL2NvcmUvc2VydmljZXMvc3RvcmUvYnJlYWRjcnVtYnMubW9kdWxlIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlMTogewogICAgICAgIGh0bWw6ICIgPHYtZmlsZS1pbnB1dCBtdWx0aXBsZSBsYWJlbD1cIkZpbGUgaW5wdXRcIj48L3YtZmlsZS1pbnB1dD4iCiAgICAgIH0sCiAgICAgIGNvZGUyOiB7CiAgICAgICAgaHRtbDogIjx2LWZpbGUtaW5wdXQgYWNjZXB0PVwiaW1hZ2UvKlwiIGxhYmVsPVwiRmlsZSBpbnB1dFwiPjwvdi1maWxlLWlucHV0PiIKICAgICAgfSwKICAgICAgY29kZTM6IHsKICAgICAgICBodG1sOiAiPGRpdj5cbiAgPHYtZmlsZS1pbnB1dCBjaGlwcyBtdWx0aXBsZSBsYWJlbD1cIkZpbGUgaW5wdXQgdy8gY2hpcHNcIj48L3YtZmlsZS1pbnB1dD5cbiAgPHYtZmlsZS1pbnB1dCBzbWFsbC1jaGlwcyBtdWx0aXBsZSBsYWJlbD1cIkZpbGUgaW5wdXQgdy8gc21hbGwgY2hpcHNcIj48L3YtZmlsZS1pbnB1dD5cbjwvZGl2PiIKICAgICAgfSwKICAgICAgY29kZTQ6IHsKICAgICAgICBodG1sOiAiPHYtZmlsZS1pbnB1dCBzaG93LXNpemUgbGFiZWw9XCJGaWxlIGlucHV0XCI+PC92LWZpbGUtaW5wdXQ+IgogICAgICB9LAogICAgICBjb2RlNTogewogICAgICAgIGh0bWw6ICI8di1maWxlLWlucHV0IHNob3ctc2l6ZSBjb3VudGVyIG11bHRpcGxlIGxhYmVsPVwiRmlsZSBpbnB1dFwiPjwvdi1maWxlLWlucHV0PiIKICAgICAgfSwKICAgICAgY29kZTY6IHsKICAgICAgICBodG1sOiAiPHYtZmlsZS1pbnB1dFxuICBsYWJlbD1cIkZpbGUgaW5wdXRcIlxuICBmaWxsZWRcbiAgcHJlcGVuZC1pY29uPVwibWRpLWNhbWVyYVwiXG4+PC92LWZpbGUtaW5wdXQ+IgogICAgICB9LAogICAgICBjb2RlNzogewogICAgICAgIGh0bWw6ICI8di1maWxlLWlucHV0XG4gIHYtbW9kZWw9XCJmaWxlc1wiXG4gIGNvbG9yPVwiZGVlcC1wdXJwbGUgYWNjZW50LTRcIlxuICBjb3VudGVyXG4gIGxhYmVsPVwiRmlsZSBpbnB1dFwiXG4gIG11bHRpcGxlXG4gIHBsYWNlaG9sZGVyPVwiU2VsZWN0IHlvdXIgZmlsZXNcIlxuICBwcmVwZW5kLWljb249XCJtZGktcGFwZXJjbGlwXCJcbiAgb3V0bGluZWRcbiAgOnNob3ctc2l6ZT1cIjEwMDBcIlxuPlxuICA8dGVtcGxhdGUgdi1zbG90OnNlbGVjdGlvbj1cInsgaW5kZXgsIHRleHQgfVwiPlxuICAgIDx2LWNoaXBcbiAgICAgIHYtaWY9XCJpbmRleCA8IDJcIlxuICAgICAgY29sb3I9XCJkZWVwLXB1cnBsZSBhY2NlbnQtNFwiXG4gICAgICBkYXJrXG4gICAgICBsYWJlbFxuICAgICAgc21hbGxcbiAgICA+XG4gICAgICB7eyB0ZXh0IH19XG4gICAgPC92LWNoaXA+XG5cbiAgICA8c3BhblxuICAgICAgdi1lbHNlLWlmPVwiaW5kZXggPT09IDJcIlxuICAgICAgY2xhc3M9XCJvdmVybGluZSBncmV5LS10ZXh0IHRleHQtLWRhcmtlbi0zIG14LTJcIlxuICAgID5cbiAgICAgICt7eyBmaWxlcy5sZW5ndGggLSAyIH19IEZpbGUocylcbiAgICA8L3NwYW4+XG4gIDwvdGVtcGxhdGU+XG48L3YtZmlsZS1pbnB1dD4iLAogICAgICAgIGpzOiAiZXhwb3J0IGRlZmF1bHQge1xuICBkYXRhOiAoKSA9PiAoe1xuICAgIGZpbGVzOiBbXSxcbiAgfSksXG59IiwKICAgICAgICBmaWxlczogW10KICAgICAgfQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEtUQ29kZVByZXZpZXc6IEtUQ29kZVByZXZpZXcKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaChTRVRfQlJFQURDUlVNQiwgW3sKICAgICAgdGl0bGU6ICJWdWV0aWZ5IiwKICAgICAgcm91dGU6ICJhbGVydHMiCiAgICB9LCB7CiAgICAgIHRpdGxlOiAiRm9ybSBJbnB1dHMgJiBDb250cm9sIiwKICAgICAgcm91dGU6ICJhdXRvY29tcGxldGVzIgogICAgfSwgewogICAgICB0aXRsZTogIkZpbGUgSW5wdXRzIgogICAgfV0pOwogIH0KfTs="},{"version":3,"sources":["FileInputs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA,OAAA,aAAA,MAAA,gCAAA;AACA,SAAA,cAAA,QAAA,0CAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA,OADA;AAKA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA,OALA;AASA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA,OATA;AAgBA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA,OAhBA;AAoBA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA,OApBA;AAwBA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA;AADA,OAxBA;AAgCA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA,onBADA;AA+BA,QAAA,EAAA,gEA/BA;AAoCA,QAAA,KAAA,EAAA;AApCA;AAhCA,KAAA;AAuEA,GAzEA;AA0EA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GA1EA;AA6EA,EAAA,OA7EA,qBA6EA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA,CACA;AAAA,MAAA,KAAA,EAAA,SAAA;AAAA,MAAA,KAAA,EAAA;AAAA,KADA,EAEA;AAAA,MAAA,KAAA,EAAA,uBAAA;AAAA,MAAA,KAAA,EAAA;AAAA,KAFA,EAGA;AAAA,MAAA,KAAA,EAAA;AAAA,KAHA,CAAA;AAKA;AAnFA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <b-alert\r\n      show\r\n      variant=\"light\"\r\n      class=\"alert alert-custom alert-white alert-shadow fade show gutter-b\"\r\n    >\r\n      <div class=\"alert-icon\">\r\n        <span class=\"svg-icon svg-icon-lg\">\r\n          <inline-svg src=\"media/svg/icons/Tools/Compass.svg\" />\r\n        </span>\r\n      </div>\r\n      <div class=\"alert-text\">\r\n        <b>File inputs</b> The <code>v-file-input</code> component is a\r\n        specialized input that provides a clean interface for selecting files,\r\n        showing detailed selection information and upload progress. It is meant\r\n        to be a direct replacement for a standard file input.\r\n        <a\r\n          class=\"font-weight-bold\"\r\n          href=\"https://vuetifyjs.com/en/components/file-inputs\"\r\n          target=\"_blank\"\r\n        >\r\n          See documentation.\r\n        </a>\r\n      </div>\r\n    </b-alert>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'Multiple'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              The <code>v-file-input</code> can contain multiple files at the\r\n              same time when using the <strong>multiple</strong> prop.\r\n            </p>\r\n            <v-file-input multiple label=\"File input\"></v-file-input>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code1.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Custom icons'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              The <code>v-file-input</code> has a default prepended icon that\r\n              can be set on the component or adjusted globally.\r\n            </p>\r\n            <v-file-input\r\n              label=\"File input\"\r\n              filled\r\n              prepend-icon=\"mdi-camera\"\r\n            ></v-file-input>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code6.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Counter'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              When using the show-size property along with counter, the total\r\n              number of files and size will be displayed under the input.\r\n            </p>\r\n            <v-file-input\r\n              show-size\r\n              counter\r\n              multiple\r\n              label=\"File input\"\r\n            ></v-file-input>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code5.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Complex selection slots'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              The flexibility of the selection slot allows you accomodate\r\n              complex use-cases. In this example we show the first 2 selections\r\n              as chips while adding a number indicator for the remaining amount.\r\n            </p>\r\n            <v-file-input\r\n              v-model=\"code7.files\"\r\n              color=\"deep-purple accent-4\"\r\n              counter\r\n              label=\"File input\"\r\n              multiple\r\n              placeholder=\"Select your files\"\r\n              prepend-icon=\"mdi-paperclip\"\r\n              outlined\r\n              :show-size=\"1000\"\r\n            >\r\n              <template v-slot:selection=\"{ index, text }\">\r\n                <v-chip\r\n                  v-if=\"index < 2\"\r\n                  color=\"deep-purple accent-4\"\r\n                  dark\r\n                  label\r\n                  small\r\n                >\r\n                  {{ text }}\r\n                </v-chip>\r\n\r\n                <span\r\n                  v-else-if=\"index === 2\"\r\n                  class=\"overline grey--text text--darken-3 mx-2\"\r\n                >\r\n                  +{{ code7.files.length - 2 }} File(s)\r\n                </span>\r\n              </template>\r\n            </v-file-input>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code7.html }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ code7.js }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'With chips'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              A selected file can be displayed as a chip. When using the chips\r\n              and multiple props, each chip will be displayed (as opposed to the\r\n              file count).\r\n            </p>\r\n            <div>\r\n              <v-file-input\r\n                chips\r\n                multiple\r\n                label=\"File input w/ chips\"\r\n              ></v-file-input>\r\n              <v-file-input\r\n                small-chips\r\n                multiple\r\n                label=\"File input w/ small chips\"\r\n              ></v-file-input>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code3.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Accept formats'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              <code>v-file-input</code> component can accept only specific media\r\n              formats/file types if you want.\r\n            </p>\r\n            <v-file-input accept=\"image/*\" label=\"File input\"></v-file-input>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code2.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Size displaying'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              The displayed size of the selected file(s) can be configured with\r\n              the show-size property. Display sizes can be either 1024 (the\r\n              default used when providing true) or 1000.\r\n            </p>\r\n            <v-file-input show-size label=\"File input\"></v-file-input>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code4.html }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport KTCodePreview from \"@/view/content/CodePreview.vue\";\r\nimport { SET_BREADCRUMB } from \"@/core/services/store/breadcrumbs.module\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      code1: {\r\n        html: ` <v-file-input multiple label=\"File input\"></v-file-input>`\r\n      },\r\n\r\n      code2: {\r\n        html: `<v-file-input accept=\"image/*\" label=\"File input\"></v-file-input>`\r\n      },\r\n\r\n      code3: {\r\n        html: `<div>\r\n  <v-file-input chips multiple label=\"File input w/ chips\"></v-file-input>\r\n  <v-file-input small-chips multiple label=\"File input w/ small chips\"></v-file-input>\r\n</div>`\r\n      },\r\n\r\n      code4: {\r\n        html: `<v-file-input show-size label=\"File input\"></v-file-input>`\r\n      },\r\n\r\n      code5: {\r\n        html: `<v-file-input show-size counter multiple label=\"File input\"></v-file-input>`\r\n      },\r\n\r\n      code6: {\r\n        html: `<v-file-input\r\n  label=\"File input\"\r\n  filled\r\n  prepend-icon=\"mdi-camera\"\r\n></v-file-input>`\r\n      },\r\n\r\n      code7: {\r\n        html: `<v-file-input\r\n  v-model=\"files\"\r\n  color=\"deep-purple accent-4\"\r\n  counter\r\n  label=\"File input\"\r\n  multiple\r\n  placeholder=\"Select your files\"\r\n  prepend-icon=\"mdi-paperclip\"\r\n  outlined\r\n  :show-size=\"1000\"\r\n>\r\n  <template v-slot:selection=\"{ index, text }\">\r\n    <v-chip\r\n      v-if=\"index < 2\"\r\n      color=\"deep-purple accent-4\"\r\n      dark\r\n      label\r\n      small\r\n    >\r\n      {{ text }}\r\n    </v-chip>\r\n\r\n    <span\r\n      v-else-if=\"index === 2\"\r\n      class=\"overline grey--text text--darken-3 mx-2\"\r\n    >\r\n      +{{ files.length - 2 }} File(s)\r\n    </span>\r\n  </template>\r\n</v-file-input>`,\r\n        js: `export default {\r\n  data: () => ({\r\n    files: [],\r\n  }),\r\n}`,\r\n        files: []\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    KTCodePreview\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(SET_BREADCRUMB, [\r\n      { title: \"Vuetify\", route: \"alerts\" },\r\n      { title: \"Form Inputs & Control\", route: \"autocompletes\" },\r\n      { title: \"File Inputs\" }\r\n    ]);\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/view/pages/vuetify/forms"}]}